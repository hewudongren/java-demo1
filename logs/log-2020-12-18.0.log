2020-12-18 15:46:32.751 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-18 15:46:32.761 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-18 15:46:34.047 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :{"code":0,"result":{},"msg":null}
2020-12-18 15:46:34.819 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 9712 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-18 15:46:34.820 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-18 15:46:34.822 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-18 15:46:42.802 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$a868607a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-18 15:46:42.939 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1fca24c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-18 15:46:44.037 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-18 15:46:44.052 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-18 15:46:44.092 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-18 15:46:44.093 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-18 15:46:44.102 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-18 15:46:44.221 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-18 15:46:44.222 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 9323 ms
2020-12-18 15:46:44.261 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-18 15:46:44.266 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-18 15:46:44.267 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-18 15:46:44.267 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-18 15:46:44.268 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-18 15:46:48.997 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-18 15:46:49.723 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-18 15:46:49.762 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-18 15:46:49.779 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-18 15:46:50.156 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-18 15:46:50.535 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-18 15:46:50.541 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-18 15:46:50.548 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-18 15:46:50.553 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-18 15:46:50.561 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-18 15:46:50.568 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-18 15:46:50.575 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-18 15:46:50.582 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-18 15:46:50.588 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-18 15:46:50.595 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-18 15:46:50.602 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-18 15:46:50.640 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-18 15:46:50.658 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-18 15:46:50.681 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-18 15:46:50.701 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-18 15:46:50.710 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-18 15:46:50.718 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-18 15:46:50.733 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-18 15:46:50.763 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-18 15:46:50.823 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-18 15:46:50.839 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-18 15:46:50.863 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-18 15:46:50.934 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-18 15:46:51.052 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-18 15:46:51.061 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-18 15:46:51.098 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-18 15:46:51.118 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-18 15:46:51.162 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-18 15:46:51.183 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-18 15:46:51.191 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-18 15:46:51.194 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-18 15:46:51.197 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-18 15:46:51.203 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-18 15:46:51.206 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-18 15:46:51.225 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-18 15:46:51.232 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-18 15:46:51.239 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-18 15:46:51.246 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-18 15:46:51.252 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-18 15:46:51.259 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-18 15:46:51.267 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-18 15:46:51.280 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-18 15:46:51.288 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-18 15:46:51.295 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-18 15:46:51.316 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-18 15:46:51.370 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-18 15:46:51.399 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-18 15:46:51.470 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-18 15:46:51.475 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-18 15:46:51.483 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-18 15:46:51.493 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-18 15:46:51.496 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-18 15:46:51.503 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-18 15:46:51.508 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-18 15:46:51.513 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-18 15:46:51.525 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-18 15:46:51.529 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-18 15:46:51.543 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-18 15:46:51.550 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-18 15:46:51.559 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-18 15:46:51.572 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-18 15:46:51.605 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-18 15:46:51.618 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-18 15:46:51.637 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-18 15:46:51.645 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-18 15:46:51.673 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-18 15:46:51.679 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-18 15:46:51.775 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-18 15:46:51.803 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-18 15:46:51.808 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-18 15:46:51.826 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-18 15:46:51.869 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-18 15:46:51.900 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-18 15:46:51.903 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-18 15:46:51.918 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-18 15:46:51.943 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-18 15:46:51.965 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-18 15:46:51.976 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-18 15:46:51.980 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-18 15:46:51.988 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-18 15:46:51.992 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-18 15:46:51.996 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-18 15:46:52.005 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-18 15:46:52.120 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-18 15:46:52.170 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-18 15:46:52.298 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-18 15:46:52.302 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 15:46:52.307 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-18 15:46:52.321 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-18 15:46:52.345 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-18 15:46:52.347 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-18 15:46:52.354 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-18 15:46:52.357 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 18.108 seconds (JVM running for 22.302)
2020-12-18 15:46:53.489 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-18 15:46:53.496 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:46:53.535 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:46:53.556 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 15:46:53.556 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 15:46:53.564 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 15:46:53.564 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 15:46:53.578 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:46:53.578 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 15:46:53.587 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 15:46:53.589 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 15:46:53.590 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 15:46:53.592 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 15:46:53.593 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 15:46:53.593 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 15:46:53.594 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.594 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 15:46:53.594 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 15:46:53.595 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 15:46:53.595 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 20
2020-12-18 15:46:53.595 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.595 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.595 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 15:46:53.596 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 15:46:53.596 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.597 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 15:46:53.597 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.597 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.598 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.599 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.599 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 15:46:53.599 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 15:46:53.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.602 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.602 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 15:46:53.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.605 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.605 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 15:46:53.606 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.607 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.607 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 15:46:53.608 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.608 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.609 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 15:46:53.609 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.611 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.611 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.612 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 15:46:53.615 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.618 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 15:46:53.620 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.622 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.623 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 15:46:53.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.626 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 15:46:53.627 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:53.628 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.628 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 15:46:53.630 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:46:53.658 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 15:46:53.658 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 15:46:53.659 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 15:46:53.665 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 15:46:53.679 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:53.679 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 15:46:53.681 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:54.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 15:46:54.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 15:46:54.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 15:46:54.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:46:54.995 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:46:54.995 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:46:54.995 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:46:54.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:54.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 15:46:54.995 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:46:54.995 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 15:46:54.995 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 15:46:54.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:54.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:46:54.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:46:54.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:46:55.001 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:46:55.002 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 15:46:55.005 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 15:46:55.028 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:46:55.028 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:46:55.028 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 15:46:55.028 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:46:55.029 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 15:46:55.029 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 15:46:55.029 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:46:55.029 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:46:55.029 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:46:55.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:46:55.031 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:46:55.032 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 15:46:55.032 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 15:46:55.038 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 15:46:55.046 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 15:46:55.047 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:46:55.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:55.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 15:46:55.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:46:55.077 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 15:46:55.077 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 15:46:55.079 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 15:46:55.081 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:46:55.081 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:46:55.083 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:46:55.117 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:46:55.117 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:46:55.117 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:46:55.120 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:46:55.135 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:46:55.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:55.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 15:46:55.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:46:55.156 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 15:46:55.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:46:55.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 15:46:55.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:46:55.176 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 15:46:55.176 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:46:55.176 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:46:55.178 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:46:55.502 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 15:46:55.503 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 15:46:55.503 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 15:46:56.354 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$6ba18d22.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:46:56.402 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:46:56.433 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$b31099ca.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:49:10.885 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-18 15:49:10.886 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-18 15:49:10.944 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 58 ms
2020-12-18 15:49:11.103 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-18 15:49:11.104 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-18 15:49:11.116 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==>  Preparing: select id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason , content from history_process_record WHERE ( type = ? and workflow_type = ? and workflow_businessId is null and workflow_node = ? and creator = ? ) 
2020-12-18 15:49:11.117 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==> Parameters: SAVE(String), QIMSBLACK(String), 问题描述(String), hualanlan(String)
2020-12-18 15:49:11.127 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  <==      Total: 0
2020-12-18 15:49:11.132 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 4
2020-12-18 15:49:11.137 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-18 15:49:11.138 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String)
2020-12-18 15:49:11.164 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-18 15:49:12.226 DEBUG c.j.q.m.qims.dao.QimsBlackInfoMapper.getSubsection[145]  ==>  Preparing: select DISTINCT subsection from sub_to_site 
2020-12-18 15:49:12.228 DEBUG c.j.q.m.qims.dao.QimsBlackInfoMapper.getSubsection[145]  ==> Parameters: 
2020-12-18 15:49:12.230 DEBUG c.j.q.m.qims.dao.QimsBlackInfoMapper.getSubsection[145]  <==      Total: 8
2020-12-18 15:49:13.767 DEBUG c.j.q.m.q.d.Q.getSiteBySubsection[145]  ==>  Preparing: select DISTINCT site from sub_to_site where subsection = ? 
2020-12-18 15:49:13.768 DEBUG c.j.q.m.q.d.Q.getSiteBySubsection[145]  ==> Parameters: TEST(String)
2020-12-18 15:49:13.770 DEBUG c.j.q.m.q.d.Q.getSiteBySubsection[145]  <==      Total: 11
2020-12-18 15:49:15.131 DEBUG c.j.q.m.qims.dao.QimsBlackInfoMapper.getModel[145]  ==>  Preparing: select DISTINCT model from t_model 
2020-12-18 15:49:15.132 DEBUG c.j.q.m.qims.dao.QimsBlackInfoMapper.getModel[145]  ==> Parameters: 
2020-12-18 15:49:15.140 DEBUG c.j.q.m.qims.dao.QimsBlackInfoMapper.getModel[145]  <==      Total: 449
2020-12-18 15:49:16.508 DEBUG c.j.q.m.q.d.Q.getLineBySubsection[145]  ==>  Preparing: select DISTINCT line from sub_to_line where subsection = ? 
2020-12-18 15:49:16.509 DEBUG c.j.q.m.q.d.Q.getLineBySubsection[145]  ==> Parameters: TEST(String)
2020-12-18 15:49:16.545 DEBUG c.j.q.m.q.d.Q.getLineBySubsection[145]  <==      Total: 55
2020-12-18 15:49:35.862 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-18 15:49:35.862 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-18 15:49:35.863 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 15:49:35.862 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-18 15:49:35.862 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-18 15:49:35.863 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 15:49:35.865 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 15:49:35.865 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 15:49:35.867 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-18 15:49:35.867 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-18 15:49:35.868 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-18 15:49:35.868 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-18 15:49:37.001 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-18 15:49:37.003 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-19(String), 2020-12-19(String)
2020-12-18 15:49:37.027 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-18 15:49:37.038 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-18 15:49:37.039 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-19(String), 2020-12-19(String), 10(Integer)
2020-12-18 15:49:37.068 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-18 15:49:37.485 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-18 15:49:37.486 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-18 15:49:37.490 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-18 15:49:39.504 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==>  Preparing: select id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason , content from history_process_record WHERE ( type = ? and workflow_type = ? and workflow_businessId is null and workflow_node = ? and creator = ? ) 
2020-12-18 15:49:39.505 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==> Parameters: SAVE(String), QMSEcnProcess(String), Apply(String), hualanlan(String)
2020-12-18 15:49:39.515 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  <==      Total: 0
2020-12-18 15:49:40.257 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:49:40.258 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:49:40.263 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:49:40.273 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:49:40.273 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:49:40.277 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:50:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 15:50:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 15:50:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 15:50:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 15:50:00.036 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 15:50:00.037 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 15:50:00.039 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 15:50:00.040 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 15:50:00.040 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 15:50:00.100 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 15:50:00.255 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:50:23.747 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-18 15:50:23.749 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-18 15:50:23.782 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 4
2020-12-18 15:50:23.783 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-18 15:50:23.784 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String)
2020-12-18 15:50:23.828 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-18 15:50:23.946 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:50:23.947 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:50:23.951 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:50:24.012 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:50:24.013 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:50:24.017 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:50:33.454 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:50:33.455 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:50:33.459 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:51:22.942 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 15:51:22.944 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: ME(String), COMMON(String)
2020-12-18 15:51:22.947 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 51
2020-12-18 15:51:34.429 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 15:51:34.430 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: SMT(String), COMMON(String)
2020-12-18 15:51:34.434 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 7
2020-12-18 15:51:40.794 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 15:51:40.795 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: SMT ENG(String), COMMON(String)
2020-12-18 15:51:40.799 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 1
2020-12-18 15:51:52.314 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 15:51:52.316 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:51:52.316 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:51:52.316 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:51:52.316 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 15:51:52.317 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 15:51:52.317 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 15:51:52.317 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 15:51:52.317 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 15:51:52.319 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 15:51:52.320 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 15:51:52.320 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 15:51:52.321 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 15:51:52.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.322 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 15:51:52.322 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 20
2020-12-18 15:51:52.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 15:51:52.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 15:51:52.322 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 15:51:52.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 15:51:52.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 15:51:52.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 15:51:52.324 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 15:51:52.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 15:51:52.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.326 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 15:51:52.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 15:51:52.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 15:51:52.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 15:51:52.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 15:51:52.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 15:51:52.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 15:51:52.332 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 15:51:52.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 15:51:52.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 15:51:52.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 15:51:52.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 15:51:52.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 15:51:52.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 15:51:52.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:52.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:52.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 15:51:52.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:51:53.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:51:53.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 15:51:53.364 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 15:51:53.365 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:51:53.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:53.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:51:53.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 15:51:53.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 15:51:53.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:51:53.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:53.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:51:53.368 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 15:51:53.369 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:51:53.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:51:53.369 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 15:51:53.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:51:53.371 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 15:51:53.372 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 15:51:53.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:51:53.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:51:53.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 15:51:53.410 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 15:51:53.411 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:51:53.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:51:53.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:51:53.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 15:51:53.414 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:51:53.414 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:51:53.414 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:51:53.416 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:51:53.417 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 15:51:53.417 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 15:51:53.421 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 15:51:53.423 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 15:51:53.425 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 15:51:53.425 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 15:51:53.426 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 15:51:53.428 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:51:53.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:53.428 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 15:51:53.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 15:51:53.428 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:51:53.429 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:51:53.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:51:53.431 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:51:53.433 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 15:51:53.443 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:51:53.444 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:51:53.444 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:51:53.447 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:51:53.461 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:51:53.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:53.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 15:51:53.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:51:53.476 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 15:51:53.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:51:53.477 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 15:51:53.478 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:51:53.492 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 15:51:53.492 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:51:53.493 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:51:53.495 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:51:53.496 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 15:51:53.952 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:51:53.953 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$b31099ca.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:51:54.037 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$6ba18d22.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:55:19.442 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-18 15:55:19.446 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-18 15:55:20.202 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :{"code":0,"result":{},"msg":null}
2020-12-18 15:55:20.556 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 11360 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-18 15:55:20.557 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-18 15:55:20.558 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-18 15:55:22.147 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$b93e782b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-18 15:55:22.222 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2d2b9fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-18 15:55:22.760 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-18 15:55:22.772 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-18 15:55:22.778 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-18 15:55:22.779 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-18 15:55:22.785 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-18 15:55:22.899 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-18 15:55:22.900 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 2302 ms
2020-12-18 15:55:22.945 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-18 15:55:22.952 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-18 15:55:22.953 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-18 15:55:22.953 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-18 15:55:22.954 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-18 15:55:25.233 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-18 15:55:25.708 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-18 15:55:25.722 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-18 15:55:25.740 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-18 15:55:26.113 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-18 15:55:26.479 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-18 15:55:26.485 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-18 15:55:26.492 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-18 15:55:26.498 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-18 15:55:26.505 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-18 15:55:26.511 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-18 15:55:26.518 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-18 15:55:26.524 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-18 15:55:26.531 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-18 15:55:26.537 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-18 15:55:26.544 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-18 15:55:26.581 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-18 15:55:26.599 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-18 15:55:26.621 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-18 15:55:26.641 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-18 15:55:26.650 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-18 15:55:26.657 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-18 15:55:26.672 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-18 15:55:26.702 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-18 15:55:26.764 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-18 15:55:26.780 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-18 15:55:26.805 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-18 15:55:26.874 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-18 15:55:26.990 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-18 15:55:26.999 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-18 15:55:27.031 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-18 15:55:27.050 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-18 15:55:27.088 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-18 15:55:27.106 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-18 15:55:27.113 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-18 15:55:27.116 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-18 15:55:27.118 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-18 15:55:27.123 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-18 15:55:27.126 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-18 15:55:27.142 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-18 15:55:27.148 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-18 15:55:27.154 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-18 15:55:27.160 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-18 15:55:27.165 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-18 15:55:27.171 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-18 15:55:27.178 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-18 15:55:27.191 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-18 15:55:27.198 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-18 15:55:27.205 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-18 15:55:27.223 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-18 15:55:27.271 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-18 15:55:27.298 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-18 15:55:27.333 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-18 15:55:27.338 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-18 15:55:27.345 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-18 15:55:27.355 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-18 15:55:27.358 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-18 15:55:27.365 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-18 15:55:27.369 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-18 15:55:27.373 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-18 15:55:27.384 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-18 15:55:27.389 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-18 15:55:27.404 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-18 15:55:27.412 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-18 15:55:27.421 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-18 15:55:27.437 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-18 15:55:27.470 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-18 15:55:27.485 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-18 15:55:27.526 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-18 15:55:27.534 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-18 15:55:27.563 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-18 15:55:27.569 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-18 15:55:27.662 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-18 15:55:27.690 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-18 15:55:27.695 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-18 15:55:27.714 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-18 15:55:27.752 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-18 15:55:27.781 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-18 15:55:27.785 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-18 15:55:27.800 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-18 15:55:27.822 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-18 15:55:27.844 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-18 15:55:27.855 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-18 15:55:27.859 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-18 15:55:27.867 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-18 15:55:27.871 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-18 15:55:27.875 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-18 15:55:27.885 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-18 15:55:28.001 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-18 15:55:28.050 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-18 15:55:28.120 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-18 15:55:28.125 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 15:55:28.131 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-18 15:55:28.144 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-18 15:55:28.150 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-18 15:55:28.152 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-18 15:55:28.165 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-18 15:55:28.168 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 7.923 seconds (JVM running for 9.763)
2020-12-18 15:55:29.272 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-18 15:55:29.280 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:55:29.291 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:55:29.302 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 15:55:29.302 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 15:55:29.306 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 15:55:29.306 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 15:55:29.322 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 15:55:29.322 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 15:55:29.331 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 15:55:29.335 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 15:55:29.334 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 15:55:29.335 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 15:55:29.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 15:55:29.337 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 15:55:29.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 15:55:29.339 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 20
2020-12-18 15:55:29.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.339 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 15:55:29.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 15:55:29.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 15:55:29.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 15:55:29.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 15:55:29.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 15:55:29.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 15:55:29.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 15:55:29.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 15:55:29.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 15:55:29.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.351 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 15:55:29.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 15:55:29.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 15:55:29.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 15:55:29.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.356 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 15:55:29.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 15:55:29.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 15:55:29.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 15:55:29.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 15:55:29.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:29.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.373 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 15:55:29.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:55:29.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:29.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 15:55:29.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:30.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 15:55:30.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 15:55:30.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 15:55:30.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:55:30.640 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:55:30.640 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:55:30.641 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:30.641 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:55:30.641 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 15:55:30.641 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:55:30.641 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 15:55:30.641 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 15:55:30.643 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:30.644 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:55:30.644 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:55:30.644 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:55:30.645 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:55:30.646 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 15:55:30.649 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 15:55:30.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:55:30.675 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 15:55:30.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:55:30.675 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:55:30.676 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:55:30.676 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 15:55:30.677 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 15:55:30.677 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:55:30.677 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:55:30.678 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:55:30.679 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:55:30.680 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 15:55:30.680 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 15:55:30.685 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 15:55:30.694 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:55:30.694 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 15:55:30.695 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:30.695 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 15:55:30.698 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 15:55:30.699 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 15:55:30.701 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 15:55:30.703 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 15:55:30.705 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:55:30.705 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:55:30.707 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:55:30.717 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:55:30.717 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 15:55:30.717 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 15:55:30.719 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 15:55:30.735 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 15:55:30.735 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:30.735 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 15:55:30.737 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:55:30.753 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 15:55:30.753 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 15:55:30.753 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 15:55:30.760 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 15:55:30.778 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 15:55:30.779 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 15:55:30.779 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 15:55:30.781 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 15:55:30.984 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 15:55:30.984 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 15:55:30.984 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 15:55:31.565 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:55:31.565 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:55:31.668 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 15:55:45.308 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-18 15:55:45.309 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-18 15:55:45.322 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 12 ms
2020-12-18 15:55:45.393 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-18 15:55:45.394 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-18 15:55:45.454 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 4
2020-12-18 15:55:45.460 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-18 15:55:45.462 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String)
2020-12-18 15:55:45.490 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:55:45.491 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:55:45.494 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:55:45.511 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-18 15:55:45.566 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:55:45.567 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:55:45.570 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:56:02.534 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 15:56:02.535 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: SMT ENG(String), COMMON(String)
2020-12-18 15:56:02.539 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 1
2020-12-18 15:56:18.968 WARN  o.a.commons.beanutils.converters.DateConverter[465]      DateConverter does not support default String to 'Date' conversion.
2020-12-18 15:56:18.969 WARN  o.a.commons.beanutils.converters.DateConverter[466]      (N.B. Re-configure Converter or use alternative implementation)
2020-12-18 15:57:04.363 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-18 15:57:04.365 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-18 15:57:04.396 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 4
2020-12-18 15:57:04.398 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-18 15:57:04.399 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String)
2020-12-18 15:57:04.446 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-18 15:57:04.619 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:57:04.621 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:57:04.626 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:57:04.633 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 15:57:04.634 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 15:57:04.640 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 15:57:18.178 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 15:57:18.180 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: SMT ENG(String), COMMON(String)
2020-12-18 15:57:18.183 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 1
2020-12-18 15:57:31.378 WARN  o.a.commons.beanutils.converters.DateConverter[465]      DateConverter does not support default String to 'Date' conversion.
2020-12-18 15:57:31.379 WARN  o.a.commons.beanutils.converters.DateConverter[466]      (N.B. Re-configure Converter or use alternative implementation)
2020-12-18 16:00:00.011 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 16:00:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 16:00:00.018 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 16:00:00.021 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 16:00:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 16:00:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 16:00:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 16:00:00.027 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 16:00:00.027 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 16:00:00.085 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 16:00:00.124 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:00:28.136 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:00:28.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:00:28.138 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:00:28.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:00:28.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:00:28.139 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:00:28.139 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:00:28.139 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:00:28.140 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:00:28.141 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:00:28.142 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:00:28.142 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:00:28.143 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:00:28.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:00:28.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:00:28.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 20
2020-12-18 16:00:28.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:00:28.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:00:28.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:00:28.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:00:28.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:00:28.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:00:28.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:00:28.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.147 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:00:28.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:00:28.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:00:28.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:00:28.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:00:28.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:00:28.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:00:28.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:00:28.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:00:28.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:00:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:00:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:00:29.197 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:00:29.197 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:00:29.197 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:00:29.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:29.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:00:29.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:00:29.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:00:29.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:00:29.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:00:29.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:00:29.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:00:29.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:00:29.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:29.238 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:00:29.238 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:00:29.238 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:00:29.239 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:00:29.240 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:00:29.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:00:29.266 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:00:29.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:00:29.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:00:29.267 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:00:29.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:00:29.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:00:29.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:00:29.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:00:29.270 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:00:29.271 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:00:29.274 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:00:29.274 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:00:29.275 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:00:29.280 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:00:29.282 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:00:29.288 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:00:29.288 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:00:29.289 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:00:29.291 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:00:29.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:00:29.292 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:00:29.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:29.292 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:00:29.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:00:29.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:00:29.294 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:00:29.296 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:00:29.316 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:00:29.317 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:00:29.317 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:00:29.319 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:00:29.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:00:29.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:29.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:00:29.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:00:29.360 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:00:29.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:00:29.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:00:29.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:00:29.378 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:00:29.379 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:00:29.379 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:00:29.381 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:00:29.383 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:00:29.781 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:00:29.897 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:00:30.020 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:05:28.148 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:05:28.149 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:05:28.149 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:05:28.149 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:05:28.150 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:05:28.150 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:05:28.150 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:05:28.150 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:05:28.150 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:05:28.152 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:05:28.153 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:05:28.153 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:05:28.154 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:05:28.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:05:28.155 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:05:28.155 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:05:28.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:05:28.155 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 20
2020-12-18 16:05:28.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:05:28.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:05:28.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:05:28.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:05:28.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.159 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:05:28.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:05:28.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:05:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:05:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:05:28.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:05:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:05:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:05:28.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:05:28.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:05:28.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:05:28.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:28.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:28.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:05:28.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:05:29.196 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:05:29.196 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:05:29.196 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:05:29.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:05:29.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:29.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:05:29.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:05:29.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:05:29.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:05:29.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:05:29.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:29.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:05:29.203 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:05:29.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:05:29.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:05:29.204 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:05:29.204 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:05:29.206 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:05:29.206 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:05:29.227 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:05:29.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:05:29.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:05:29.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:05:29.230 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:05:29.231 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:05:29.231 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:05:29.231 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:05:29.231 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:05:29.231 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:05:29.233 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:05:29.234 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:05:29.234 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:05:29.238 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:05:29.240 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:05:29.248 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:05:29.249 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:05:29.249 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:05:29.249 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:05:29.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:29.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:05:29.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:05:29.251 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:05:29.252 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:05:29.252 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:05:29.253 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:05:29.256 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:05:29.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:05:29.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:05:29.268 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:05:29.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:05:29.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:05:29.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:29.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:05:29.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:05:29.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:05:29.305 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:05:29.305 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:05:29.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:05:29.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:05:29.327 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:05:29.327 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:05:29.329 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:05:29.331 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:05:29.810 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:05:29.853 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:05:29.891 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:10:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 16:10:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 16:10:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 16:10:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 16:10:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 16:10:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 16:10:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 16:10:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 16:10:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 16:10:00.089 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 16:10:00.094 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:10:28.159 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:10:28.161 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:10:28.162 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:10:28.162 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:10:28.162 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:10:28.162 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:10:28.162 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:10:28.162 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:10:28.163 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:10:28.164 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:10:28.164 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:10:28.164 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:10:28.166 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:10:28.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:10:28.167 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 20
2020-12-18 16:10:28.168 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:10:28.168 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:10:28.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:10:28.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:10:28.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:10:28.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:10:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:10:28.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:10:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:10:28.171 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:10:28.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:10:28.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:10:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:10:28.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:10:28.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:10:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:10:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:10:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:10:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:10:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:10:28.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:10:28.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:10:28.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:28.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:10:28.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:10:29.205 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:10:29.205 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:10:29.207 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:10:29.207 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:10:29.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:29.207 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:10:29.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:10:29.208 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:10:29.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:10:29.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:29.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:10:29.210 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:10:29.211 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:10:29.211 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:10:29.211 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:10:29.212 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:10:29.212 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:10:29.214 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:10:29.214 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:10:29.233 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:10:29.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:10:29.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:10:29.237 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:10:29.237 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:10:29.237 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:10:29.237 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:10:29.237 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:10:29.237 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:10:29.237 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:10:29.240 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:10:29.240 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:10:29.241 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:10:29.245 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:10:29.246 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:10:29.254 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:10:29.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:29.255 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:10:29.255 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:10:29.255 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:10:29.255 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:10:29.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:10:29.257 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:10:29.257 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:10:29.258 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:10:29.260 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:10:29.261 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:10:29.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:10:29.273 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:10:29.273 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:10:29.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:10:29.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:10:29.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:29.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:10:29.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:10:29.336 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:10:29.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:10:29.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:10:29.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:10:29.360 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:10:29.361 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:10:29.362 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:10:29.364 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:10:29.366 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:10:29.823 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:10:29.874 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:10:29.916 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:15:28.170 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:15:28.171 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:15:28.172 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:15:28.171 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:15:28.172 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:15:28.172 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:15:28.172 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:15:28.173 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:15:28.173 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:15:28.174 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:15:28.176 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:15:28.176 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:15:28.176 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:15:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:15:28.178 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:15:28.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:15:28.178 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 21
2020-12-18 16:15:28.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:15:28.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:15:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:15:28.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:15:28.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.181 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:15:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:15:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:15:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:15:28.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:15:28.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:15:28.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:15:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:15:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:15:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:15:28.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:15:28.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:15:28.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:15:28.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:15:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.201 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:15:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:15:28.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:28.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:15:28.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:15:28.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:29.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:15:29.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:15:29.224 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:15:29.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:15:29.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:29.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:15:29.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:15:29.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:15:29.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:15:29.227 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:15:29.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:29.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:15:29.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:15:29.230 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:15:29.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:15:29.230 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:15:29.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:15:29.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:15:29.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:15:29.255 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:15:29.256 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:15:29.256 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:15:29.257 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:15:29.257 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:15:29.256 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:15:29.257 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:15:29.257 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:15:29.257 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:15:29.259 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:15:29.259 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:15:29.260 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:15:29.260 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:15:29.265 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:15:29.267 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:15:29.276 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:15:29.276 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:15:29.277 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:15:29.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:15:29.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:29.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:15:29.279 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:15:29.279 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:15:29.279 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:15:29.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:15:29.282 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:15:29.283 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:15:29.324 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:15:29.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:15:29.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:15:29.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:15:29.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:15:29.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:29.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:15:29.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:15:29.369 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:15:29.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:15:29.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:15:29.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:15:29.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:15:29.390 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:15:29.390 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:15:29.392 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:15:29.393 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:15:29.746 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:15:29.846 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:15:29.911 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:20:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 16:20:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 16:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 16:20:00.079 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 16:20:00.080 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 16:20:00.080 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 16:20:00.082 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 16:20:00.082 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 16:20:00.082 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 16:20:00.139 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 16:20:00.144 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:20:28.180 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:20:28.181 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:20:28.182 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:20:28.182 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:20:28.182 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:20:28.182 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:20:28.182 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:20:28.182 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:20:28.182 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:20:28.184 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:20:28.184 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:20:28.184 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:20:28.186 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:20:28.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.186 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:20:28.187 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 21
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:20:28.187 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:20:28.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:20:28.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:20:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:20:28.190 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:20:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:20:28.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:20:28.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:20:28.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:20:28.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:20:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:20:28.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:20:28.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:20:28.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:20:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:20:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:20:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:20:28.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:20:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:20:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:20:29.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:20:29.229 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:20:29.229 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:20:29.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:20:29.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:29.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:20:29.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:20:29.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:20:29.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:20:29.233 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:20:29.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:29.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:20:29.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:20:29.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:20:29.236 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:20:29.236 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:20:29.237 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:20:29.238 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:20:29.238 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:20:29.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:20:29.347 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:20:29.347 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:20:29.347 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:20:29.347 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:20:29.347 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:20:29.347 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:20:29.348 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:20:29.348 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:20:29.349 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:20:29.349 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:20:29.349 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:20:29.350 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:20:29.355 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:20:29.356 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:20:29.428 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:20:29.428 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:20:29.429 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:20:29.429 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:20:29.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:29.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:20:29.431 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:20:29.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:20:29.432 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:20:29.432 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:20:29.434 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:20:29.435 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:20:29.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:20:29.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:20:29.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:20:29.449 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:20:29.464 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:20:29.464 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:29.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:20:29.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:20:29.482 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:20:29.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:20:29.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:20:29.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:20:29.499 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:20:29.499 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:20:29.499 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:20:29.501 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:20:29.502 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:20:29.983 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:20:29.990 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:20:30.023 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:25:28.191 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:25:28.194 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:25:28.194 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:25:28.194 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:25:28.195 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:25:28.195 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:25:28.195 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:25:28.195 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:25:28.195 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:25:28.197 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:25:28.198 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:25:28.198 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:25:28.199 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:25:28.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:25:28.200 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:25:28.200 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:25:28.200 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 22
2020-12-18 16:25:28.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:25:28.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:25:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:25:28.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:25:28.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:25:28.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.203 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:25:28.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:25:28.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:25:28.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:25:28.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:25:28.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:25:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:25:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:25:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:25:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:25:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:25:28.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:25:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:25:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:25:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:25:28.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:28.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:28.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:25:28.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:25:29.246 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:25:29.247 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:25:29.247 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:25:29.248 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:25:29.248 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:25:29.248 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:25:29.248 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:25:29.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:29.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:25:29.250 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:25:29.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:29.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:25:29.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:25:29.251 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:25:29.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:25:29.252 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:25:29.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:25:29.255 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:25:29.255 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:25:29.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:25:29.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:25:29.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:25:29.327 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:25:29.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:25:29.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:25:29.327 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:25:29.327 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:25:29.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:25:29.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:25:29.330 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:25:29.331 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:25:29.332 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:25:29.337 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:25:29.338 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:25:29.348 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:25:29.349 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:25:29.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:25:29.349 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:25:29.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:29.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:25:29.351 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:25:29.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:25:29.352 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:25:29.352 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:25:29.355 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:25:29.356 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:25:29.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:25:29.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:25:29.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:25:29.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:25:29.391 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:25:29.391 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:29.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:25:29.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:25:29.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:25:29.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:25:29.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:25:29.412 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:25:29.428 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:25:29.428 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:25:29.429 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:25:29.430 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:25:29.431 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:25:30.860 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:25:30.862 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:25:30.888 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:30:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 16:30:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 16:30:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 16:30:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 16:30:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 16:30:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 16:30:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 16:30:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 16:30:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 16:30:00.091 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 16:30:00.097 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:30:28.202 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:30:28.204 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:30:28.204 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:30:28.204 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:30:28.204 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:30:28.205 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:30:28.205 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:30:28.205 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:30:28.205 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:30:28.208 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:30:28.209 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:30:28.209 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:30:28.210 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:30:28.211 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 22
2020-12-18 16:30:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.211 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:30:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:30:28.212 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:30:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:30:28.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:30:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:30:28.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:30:28.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:30:28.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:30:28.215 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:30:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:30:28.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:30:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:30:28.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:30:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:30:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:30:28.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:30:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:30:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:30:28.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:30:28.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:30:28.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:30:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:28.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:28.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:30:28.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:30:29.251 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:30:29.253 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:30:29.252 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:30:29.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:29.254 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:30:29.254 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:30:29.254 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:30:29.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:30:29.254 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:30:29.255 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:29.256 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:30:29.257 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:30:29.257 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:30:29.257 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:30:29.258 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:30:29.263 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:30:29.264 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:30:29.264 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:30:29.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:30:29.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:30:29.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:30:29.327 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:30:29.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:30:29.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:30:29.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:30:29.330 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:30:29.330 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:30:29.330 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:30:29.331 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:30:29.332 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:30:29.333 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:30:29.333 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:30:29.338 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:30:29.339 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:30:29.429 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:30:29.429 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:30:29.429 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:30:29.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:29.429 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:30:29.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:30:29.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:30:29.431 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:30:29.431 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:30:29.432 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:30:29.433 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:30:29.434 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:30:29.448 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:30:29.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:30:29.449 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:30:29.451 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:30:29.465 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:30:29.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:29.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:30:29.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:30:29.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:30:29.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:30:29.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:30:29.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:30:29.501 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:30:29.502 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:30:29.502 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:30:29.504 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:30:29.505 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:30:29.891 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:30:29.938 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:30:30.006 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:35:28.214 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:35:28.216 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:35:28.216 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:35:28.216 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:35:28.216 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:35:28.216 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:35:28.216 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:35:28.217 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:35:28.217 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:35:28.219 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:35:28.219 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:35:28.219 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:35:28.220 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:35:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.221 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 23
2020-12-18 16:35:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:35:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.221 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:35:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:35:28.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:35:28.222 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:35:28.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:35:28.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:35:28.225 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:35:28.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:35:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:35:28.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:35:28.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:35:28.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:35:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:35:28.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:35:28.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:35:28.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:35:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:35:28.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:35:29.260 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:35:29.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:35:29.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:35:29.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:35:29.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:29.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:35:29.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:35:29.263 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:35:29.264 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:35:29.265 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:35:29.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:29.265 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:35:29.265 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:35:29.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:35:29.268 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:35:29.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:35:29.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:35:29.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:35:29.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:35:29.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:35:29.289 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:35:29.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:35:29.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:35:29.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:35:29.291 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:35:29.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:35:29.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:35:29.342 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:35:29.342 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:35:29.342 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:35:29.343 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:35:29.343 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:35:29.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:35:29.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:29.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:35:29.344 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:35:29.344 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:35:29.344 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:35:29.345 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:35:29.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:35:29.345 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:35:29.346 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:35:29.348 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:35:29.348 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:35:29.349 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:35:29.349 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:35:29.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:35:29.363 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:35:29.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:35:29.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:35:29.472 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:35:29.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:29.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:35:29.475 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:35:29.492 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:35:29.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:35:29.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:35:29.494 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:35:29.509 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:35:29.510 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:35:29.510 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:35:29.512 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:35:29.513 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:35:29.927 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:35:29.958 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:35:30.073 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:40:00.022 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 16:40:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 16:40:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 16:40:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 16:40:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 16:40:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 16:40:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 16:40:00.030 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 16:40:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 16:40:00.195 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 16:40:00.201 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:40:28.225 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:40:28.226 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:40:28.226 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:40:28.226 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:40:28.227 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:40:28.227 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:40:28.227 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:40:28.227 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:40:28.227 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:40:28.229 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:40:28.229 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:40:28.230 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:40:28.231 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:40:28.231 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 23
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.232 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.232 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:40:28.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:40:28.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:40:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:40:28.234 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:40:28.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:40:28.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:40:28.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:40:28.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:40:28.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:40:28.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:40:28.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:40:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:40:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:40:28.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:40:28.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:40:28.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:40:28.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:40:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:40:28.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:40:29.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:40:29.274 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:40:29.274 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:40:29.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:40:29.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:40:29.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:29.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:40:29.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:40:29.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:40:29.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:29.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:40:29.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:40:29.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:40:29.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:40:29.281 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:40:29.282 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:40:29.282 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:40:29.284 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:40:29.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:40:29.330 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:40:29.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:40:29.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:40:29.332 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:40:29.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:40:29.333 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:40:29.332 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:40:29.333 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:40:29.333 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:40:29.333 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:40:29.335 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:40:29.336 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:40:29.336 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:40:29.341 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:40:29.343 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:40:29.353 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:40:29.354 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:40:29.354 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:40:29.354 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:40:29.354 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:29.354 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:40:29.356 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:40:29.356 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:40:29.357 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:40:29.357 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:40:29.358 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:40:29.359 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:40:29.373 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:40:29.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:40:29.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:40:29.375 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:40:29.391 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:40:29.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:29.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:40:29.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:40:29.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:40:29.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:40:29.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:40:29.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:40:29.434 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:40:29.434 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:40:29.434 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:40:29.436 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:40:29.437 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:40:29.878 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:40:29.913 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:40:29.955 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:45:28.235 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:45:28.236 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:45:28.236 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:45:28.236 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:45:28.237 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:45:28.237 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:45:28.237 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:45:28.238 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:45:28.238 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:45:28.239 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:45:28.240 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:45:28.240 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:45:28.242 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:45:28.242 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:45:28.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:45:28.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:45:28.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:45:28.243 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 23
2020-12-18 16:45:28.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.243 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:45:28.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:45:28.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:45:28.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:45:28.245 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:45:28.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:45:28.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:45:28.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:45:28.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:45:28.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:45:28.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:45:28.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:45:28.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:45:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:45:28.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.255 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.255 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:45:28.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:45:28.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:45:28.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:45:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:45:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:28.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:45:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:45:29.293 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:45:29.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:45:29.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:45:29.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:45:29.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:29.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:45:29.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:45:29.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:45:29.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:45:29.298 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:45:29.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:29.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:45:29.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:45:29.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:45:29.300 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:45:29.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:45:29.300 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:45:29.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:45:29.303 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:45:29.336 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:45:29.336 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:45:29.336 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:45:29.337 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:45:29.337 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:45:29.337 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:45:29.337 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:45:29.337 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:45:29.338 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:45:29.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:45:29.340 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:45:29.340 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:45:29.341 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:45:29.345 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:45:29.346 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:45:29.356 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:45:29.357 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:45:29.357 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:45:29.361 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:45:29.361 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:45:29.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:29.361 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:45:29.361 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:45:29.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:45:29.363 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:45:29.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:45:29.363 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:45:29.379 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:45:29.379 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:45:29.379 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:45:29.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:45:29.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:45:29.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:29.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:45:29.403 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:45:29.419 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:45:29.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:45:29.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:45:29.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:45:29.436 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:45:29.437 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:45:29.437 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:45:29.439 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:45:29.440 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:45:29.991 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:45:30.027 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:45:30.028 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:50:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 16:50:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 16:50:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 16:50:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 16:50:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 16:50:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 16:50:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 16:50:00.030 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 16:50:00.030 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 16:50:00.092 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 16:50:00.097 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:50:28.246 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:50:28.247 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:50:28.247 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:50:28.247 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:50:28.247 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:50:28.247 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:50:28.248 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:50:28.249 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:50:28.249 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:50:28.250 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:50:28.250 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:50:28.250 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:50:28.252 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:50:28.252 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:50:28.252 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:50:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.253 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 16:50:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:50:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:50:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:50:28.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:50:28.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:50:28.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.258 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:50:28.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:50:28.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:50:28.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:50:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:50:28.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:50:28.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:50:28.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:50:28.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:50:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:50:28.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:50:28.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:50:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:50:28.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:50:29.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:50:29.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:29.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:50:29.298 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:50:29.298 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:50:29.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:29.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:50:29.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:50:29.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:50:29.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:50:29.301 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:50:29.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:50:29.302 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:50:29.303 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:50:29.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:50:29.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:50:29.305 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:50:29.305 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:50:29.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:50:29.323 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:50:29.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:50:29.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:50:29.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:50:29.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:50:29.338 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:50:29.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:50:29.339 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:50:29.339 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:50:29.339 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:50:29.341 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:50:29.341 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:50:29.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:50:29.342 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:50:29.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:29.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:50:29.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:50:29.347 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:50:29.348 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:50:29.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:50:29.356 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:50:29.356 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:50:29.358 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:50:29.358 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:50:29.359 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:50:29.359 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:50:29.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:50:29.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:50:29.360 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:50:29.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:50:29.361 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:50:29.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:50:29.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:29.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:50:29.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:50:29.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:50:29.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:50:29.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:50:29.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:50:29.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:50:29.411 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:50:29.411 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:50:29.413 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:50:29.414 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:50:29.921 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:50:29.950 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:50:29.953 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:55:28.257 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 16:55:28.259 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:55:28.260 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:55:28.260 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 16:55:28.260 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 16:55:28.260 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 16:55:28.260 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 16:55:28.260 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 16:55:28.261 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 16:55:28.262 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 16:55:28.262 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 16:55:28.262 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 16:55:28.264 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 16:55:28.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.264 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 16:55:28.265 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 16:55:28.265 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 16:55:28.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 16:55:28.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 16:55:28.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 16:55:28.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 16:55:28.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 16:55:28.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 16:55:28.267 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 16:55:28.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 16:55:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 16:55:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 16:55:28.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 16:55:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 16:55:28.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 16:55:28.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 16:55:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 16:55:28.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:55:28.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 16:55:28.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 16:55:28.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 16:55:28.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 16:55:28.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 16:55:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 16:55:28.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:55:29.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 16:55:29.305 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:55:29.306 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:55:29.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:55:29.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:55:29.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:55:29.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:55:29.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:29.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 16:55:29.309 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 16:55:29.312 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:29.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:55:29.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:55:29.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 16:55:29.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:55:29.315 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:55:29.315 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 16:55:29.316 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:55:29.317 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 16:55:29.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:55:29.339 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:55:29.339 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:55:29.339 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 16:55:29.339 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:55:29.339 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 16:55:29.339 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:55:29.340 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 16:55:29.340 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:55:29.341 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:55:29.342 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:55:29.343 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 16:55:29.343 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 16:55:29.347 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 16:55:29.348 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 16:55:29.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 16:55:29.358 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 16:55:29.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:55:29.358 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 16:55:29.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:29.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 16:55:29.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 16:55:29.360 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 16:55:29.361 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:55:29.361 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:55:29.363 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:55:29.363 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 16:55:29.375 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:55:29.375 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 16:55:29.375 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 16:55:29.377 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 16:55:29.393 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 16:55:29.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:29.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 16:55:29.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:55:29.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 16:55:29.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 16:55:29.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 16:55:29.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 16:55:29.427 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 16:55:29.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 16:55:29.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 16:55:29.429 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 16:55:29.430 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 16:55:29.885 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:55:29.921 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 16:55:29.954 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:00:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 17:00:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 17:00:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 17:00:00.038 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 17:00:00.038 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 17:00:00.039 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 17:00:00.040 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 17:00:00.041 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 17:00:00.042 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 17:00:00.105 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 17:00:00.110 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:00:28.268 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 17:00:28.269 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 17:00:28.270 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:00:28.270 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 17:00:28.270 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:00:28.270 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:00:28.270 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 17:00:28.271 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 17:00:28.271 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 17:00:28.272 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 17:00:28.273 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 17:00:28.273 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 17:00:28.275 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 17:00:28.276 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 17:00:28.276 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 17:00:28.276 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 17:00:28.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 17:00:28.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.279 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 17:00:28.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 17:00:28.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 17:00:28.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 17:00:28.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 17:00:28.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 17:00:28.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 17:00:28.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 17:00:28.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 17:00:28.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 17:00:28.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 17:00:28.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 17:00:28.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:28.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:28.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 17:00:28.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:00:29.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 17:00:29.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 17:00:29.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:00:29.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:29.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:00:29.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 17:00:29.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:00:29.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 17:00:29.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:00:29.323 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 17:00:29.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:29.324 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:00:29.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:00:29.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:00:29.325 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:00:29.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 17:00:29.325 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 17:00:29.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:00:29.329 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 17:00:29.348 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:00:29.349 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 17:00:29.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 17:00:29.364 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 17:00:29.365 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 17:00:29.365 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 17:00:29.367 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 17:00:29.367 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:00:29.367 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:00:29.369 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:00:29.370 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 17:00:29.380 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 17:00:29.380 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:00:29.380 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:00:29.380 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:00:29.380 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:00:29.380 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:00:29.382 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:00:29.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:00:29.382 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 17:00:29.382 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 17:00:29.386 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 17:00:29.388 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 17:00:29.399 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:00:29.399 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:29.399 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 17:00:29.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:00:29.443 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:00:29.443 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:00:29.443 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:00:29.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:00:29.462 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:00:29.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:29.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 17:00:29.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:00:29.480 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 17:00:29.480 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:00:29.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 17:00:29.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:00:29.499 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 17:00:29.499 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:00:29.499 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:00:29.501 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:00:29.501 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 17:00:29.997 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:00:30.066 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$1e5585f4.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:00:30.178 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$65c4929c.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:54:24.192 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-18 17:54:24.197 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-18 17:54:24.967 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :{"code":0,"result":{},"msg":null}
2020-12-18 17:54:25.314 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 11524 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-18 17:54:25.315 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-18 17:54:25.316 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-18 17:54:26.814 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$e6a24f40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-18 17:54:26.885 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$20369112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-18 17:54:27.421 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-18 17:54:27.433 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-18 17:54:27.438 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-18 17:54:27.440 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-18 17:54:27.446 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-18 17:54:27.550 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-18 17:54:27.550 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 2194 ms
2020-12-18 17:54:27.589 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-18 17:54:27.594 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-18 17:54:27.595 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-18 17:54:27.595 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-18 17:54:27.596 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-18 17:54:29.976 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-18 17:54:30.465 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-18 17:54:30.479 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-18 17:54:30.497 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-18 17:54:30.867 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-18 17:54:31.236 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-18 17:54:31.242 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-18 17:54:31.250 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-18 17:54:31.255 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-18 17:54:31.263 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-18 17:54:31.269 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-18 17:54:31.277 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-18 17:54:31.284 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-18 17:54:31.291 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-18 17:54:31.297 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-18 17:54:31.305 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-18 17:54:31.341 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-18 17:54:31.360 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-18 17:54:31.382 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-18 17:54:31.402 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-18 17:54:31.411 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-18 17:54:31.419 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-18 17:54:31.434 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-18 17:54:31.464 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-18 17:54:31.526 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-18 17:54:31.543 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-18 17:54:31.568 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-18 17:54:31.639 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-18 17:54:31.758 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-18 17:54:31.767 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-18 17:54:31.802 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-18 17:54:31.820 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-18 17:54:31.858 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-18 17:54:31.878 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-18 17:54:31.885 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-18 17:54:31.887 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-18 17:54:31.889 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-18 17:54:31.895 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-18 17:54:31.897 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-18 17:54:31.914 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-18 17:54:31.920 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-18 17:54:31.926 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-18 17:54:31.932 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-18 17:54:31.937 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-18 17:54:31.943 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-18 17:54:31.950 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-18 17:54:31.962 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-18 17:54:31.970 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-18 17:54:31.977 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-18 17:54:31.995 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-18 17:54:32.044 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-18 17:54:32.072 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-18 17:54:32.107 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-18 17:54:32.112 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-18 17:54:32.120 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-18 17:54:32.129 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-18 17:54:32.132 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-18 17:54:32.140 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-18 17:54:32.144 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-18 17:54:32.148 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-18 17:54:32.161 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-18 17:54:32.165 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-18 17:54:32.182 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-18 17:54:32.190 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-18 17:54:32.200 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-18 17:54:32.216 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-18 17:54:32.252 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-18 17:54:32.295 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-18 17:54:32.320 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-18 17:54:32.328 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-18 17:54:32.356 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-18 17:54:32.362 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-18 17:54:32.464 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-18 17:54:32.496 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-18 17:54:32.501 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-18 17:54:32.521 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-18 17:54:32.560 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-18 17:54:32.591 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-18 17:54:32.594 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-18 17:54:32.610 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-18 17:54:32.634 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-18 17:54:32.655 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-18 17:54:32.667 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-18 17:54:32.670 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-18 17:54:32.680 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-18 17:54:32.684 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-18 17:54:32.688 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-18 17:54:32.698 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-18 17:54:32.818 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-18 17:54:32.868 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-18 17:54:32.940 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-18 17:54:32.945 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 17:54:32.952 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-18 17:54:32.967 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-18 17:54:32.970 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-18 17:54:32.973 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-18 17:54:32.986 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-18 17:54:32.989 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 7.981 seconds (JVM running for 9.833)
2020-12-18 17:54:34.089 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-18 17:54:34.097 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 17:54:34.106 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:54:34.120 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 17:54:34.120 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 17:54:34.130 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:54:34.131 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 17:54:34.146 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:54:34.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 17:54:34.149 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 17:54:34.151 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 17:54:34.152 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 17:54:34.152 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 17:54:34.154 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 17:54:34.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 17:54:34.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 17:54:34.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 17:54:34.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 17:54:34.159 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 17:54:34.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 17:54:34.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 17:54:34.160 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 17:54:34.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 17:54:34.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 17:54:34.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 17:54:34.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.167 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 17:54:34.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 17:54:34.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 17:54:34.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 17:54:34.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 17:54:34.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 17:54:34.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 17:54:34.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 17:54:34.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 17:54:34.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 17:54:34.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 17:54:34.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 17:54:34.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:34.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:34.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 17:54:34.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:54:35.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:54:35.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 17:54:35.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 17:54:35.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 17:54:35.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:54:35.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:54:35.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:54:35.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:35.486 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 17:54:35.486 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:54:35.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 17:54:35.486 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 17:54:35.489 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:35.489 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:54:35.489 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:54:35.489 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:54:35.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:54:35.492 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 17:54:35.494 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 17:54:35.516 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:54:35.516 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:54:35.516 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 17:54:35.517 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:54:35.517 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:54:35.517 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:54:35.517 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 17:54:35.517 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:54:35.517 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 17:54:35.519 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:54:35.519 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:54:35.521 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 17:54:35.521 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 17:54:35.526 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 17:54:35.539 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 17:54:35.540 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:54:35.540 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:35.541 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 17:54:35.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:54:35.543 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 17:54:35.544 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 17:54:35.566 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 17:54:35.566 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:54:35.568 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:54:35.568 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:54:35.568 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:54:35.568 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:54:35.570 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:54:35.570 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:54:35.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:54:35.587 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:35.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 17:54:35.590 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:54:35.606 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 17:54:35.606 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:54:35.606 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 17:54:35.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:54:35.629 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 17:54:35.630 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:54:35.630 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:54:35.633 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:54:35.840 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 17:54:35.840 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 17:54:35.840 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 17:54:37.438 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:54:37.463 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:54:37.474 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:55:12.666 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-18 17:55:12.667 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-18 17:55:12.679 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 12 ms
2020-12-18 17:55:12.789 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-18 17:55:12.790 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-18 17:55:12.837 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 4
2020-12-18 17:55:12.843 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-18 17:55:12.845 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String)
2020-12-18 17:55:12.889 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-18 17:55:12.957 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 17:55:12.957 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 17:55:12.960 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 17:55:12.968 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 17:55:12.969 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 17:55:12.973 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 17:57:15.599 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-18 17:57:15.600 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-18 17:57:15.631 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 4
2020-12-18 17:57:15.632 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-18 17:57:15.634 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-18(String), 2020-12-19(String), 2020-11-18(String), 2020-12-19(String), hualanlan(String)
2020-12-18 17:57:15.678 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-18 17:57:15.799 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 17:57:15.800 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 17:57:15.805 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 17:57:15.810 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 17:57:15.811 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 17:57:15.819 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 17:57:31.853 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 17:57:31.855 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: SMT ENG(String), COMMON(String)
2020-12-18 17:57:31.860 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 1
2020-12-18 17:57:50.448 DEBUG c.j.q.d.WorkflowVariableReflectMapper.getVariables[145]  ==>  Preparing: SELECT variable from workflow_variable_reflect where template_key = ? and node = ? 
2020-12-18 17:57:50.450 DEBUG c.j.q.d.WorkflowVariableReflectMapper.getVariables[145]  ==> Parameters: QMSEcnProcess(String), Apply(String)
2020-12-18 17:57:50.453 DEBUG c.j.q.d.WorkflowVariableReflectMapper.getVariables[145]  <==      Total: 3
2020-12-18 17:57:50.460 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getItemNumber[145]  ==>  Preparing: SELECT ecn_number_generator() 
2020-12-18 17:57:50.460 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getItemNumber[145]  ==> Parameters: 
2020-12-18 17:57:50.464 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getItemNumber[145]  <==      Total: 1
2020-12-18 17:57:50.465 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.insert[145]  ==>  Preparing: insert into ecn_info (id, item_number, item_type, file_name, file_oid, sender_side, document_originator, model_name, change_type, posting_time, works_section, works_head, quality_head, status, involved_area, change_import_scheme, change_import_time, change_import_mode, ipqc_handler, ipqc_verification_results, ipqc_verification_reason, ipqc_verifier, ipqc_verification_time, project_approval_result, project_approval_opinion, project_approver, project_approver_time, odm_approval_result, odm_approval_opinion, odm_approver, odm_approver_time, sqe_approval_result, sqe_approval_opinion, sqe_approver, sqe_approver_time, file_address, assignee, remark, creator, create_date, update_date ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 17:57:50.491 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.insert[145]  ==> Parameters: 1339872492369477632(String), 20201218001(String), ECN(String), LCFC-logo.jpg(String), 1339872330837389312(String), HQ(String), 111(String), 111(String), BOM,软件(String), 2020-12-18 00:00:00.0(Timestamp), SMT ENG(String), hualanlan(String), hualanlan(String), Apply(String), null, null, null, null, hualanlan(String), null, null, null, null, null, null, null, null, null, null, hualanlan(String), null, null, null, hualanlan(String), null, (String), null, (String), hualanlan(String), null, null
2020-12-18 17:57:50.506 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.insert[145]  <==    Updates: 1
2020-12-18 17:57:51.607 DEBUG c.j.q.d.H.deleteApplyRecord[145]  ==>  Preparing: DELETE from history_process_record where workflow_type = ? and creator = ? and type = 'SAVE' and workflow_node = 'Apply' and workflow_businessId is NULL 
2020-12-18 17:57:51.609 DEBUG c.j.q.d.H.deleteApplyRecord[145]  ==> Parameters: QMSEcnProcess(String), hualanlan(String)
2020-12-18 17:57:51.619 DEBUG c.j.q.d.H.deleteApplyRecord[145]  <==    Updates: 0
2020-12-18 17:57:51.619 DEBUG c.j.q.d.W.getWorkflowMapping[145]  ==>  Preparing: SELECT * from workflow_handle_mapping where workflow_type = ? and workflow_node = ? limit 1 
2020-12-18 17:57:51.621 DEBUG c.j.q.d.W.getWorkflowMapping[145]  ==> Parameters: QMSEcnProcess(String), Apply(String)
2020-12-18 17:57:51.623 DEBUG c.j.q.d.W.getWorkflowMapping[145]  <==      Total: 0
2020-12-18 17:57:51.625 DEBUG c.j.q.dao.HistoryProcessRecordMapper.insert[145]  ==>  Preparing: insert into history_process_record (id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason, content ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 17:57:51.627 DEBUG c.j.q.dao.HistoryProcessRecordMapper.insert[145]  ==> Parameters: 1339872497230675968(String), QMSEcnProcess(String), Apply(String), 1339872492369477632(String), COMMIT(String), hualanlan(String), null, null, null, null, null, java.io.StringReader@1d10c38b(StringReader)
2020-12-18 17:57:51.631 DEBUG c.j.q.dao.HistoryProcessRecordMapper.insert[145]  <==    Updates: 1
2020-12-18 17:57:51.950 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==>  Preparing: select id, item_number, item_type, file_name, file_oid, sender_side, document_originator, model_name, change_type, posting_time, works_section, works_head, quality_head, status, involved_area, change_import_scheme, change_import_time, change_import_mode, ipqc_handler, ipqc_verification_results, ipqc_verification_reason, ipqc_verifier, ipqc_verification_time, project_approval_result, project_approval_opinion, project_approver, project_approver_time, odm_approval_result, odm_approval_opinion, odm_approver, odm_approver_time, sqe_approval_result, sqe_approval_opinion, sqe_approver, sqe_approver_time, file_address, assignee, remark, creator, create_date, update_date from ecn_info where id = ? 
2020-12-18 17:57:51.951 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:57:51.957 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  <==      Total: 1
2020-12-18 17:57:51.964 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==>  Preparing: insert into task_record ( id, template_key, process_instance_id, assignee, workflow_business_id, task_state, task_name, task_id, item_number, creator ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 17:57:51.965 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==> Parameters: 1339872498631573504(String), QMSEcnProcess(String), 5508203(String), hualanlan(String), 1339872492369477632(String), Close(String), Apply(String), 5508208(String), 20201218001(String), hualanlan(String)
2020-12-18 17:57:51.969 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  <==    Updates: 1
2020-12-18 17:57:51.986 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  ==>  Preparing: SELECT count(*) from task_record where task_id = ? 
2020-12-18 17:57:51.987 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  ==> Parameters: 5508233(String)
2020-12-18 17:57:51.991 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  <==      Total: 1
2020-12-18 17:57:51.992 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==>  Preparing: insert into task_record ( id, template_key, process_instance_id, assignee, workflow_business_id, task_state, task_name, task_id, item_number, creator ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 17:57:51.994 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==> Parameters: 1339872498774179840(String), QMSEcnProcess(String), 5508203(String), hualanlan(String), 1339872492369477632(String), OnGoing(String), Plan(String), 5508233(String), 20201218001(String), hualanlan(String)
2020-12-18 17:57:51.998 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  <==    Updates: 1
2020-12-18 17:57:51.998 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.updateByPrimaryKey[145]  ==>  Preparing: update ecn_info set item_number = ?, item_type = ?, file_name = ?, file_oid = ?, sender_side = ?, document_originator = ?, model_name = ?, change_type = ?, posting_time = ?, works_section = ?, works_head = ?, quality_head = ?, status = ?, involved_area = ?, change_import_scheme = ?, change_import_time = ?, change_import_mode = ?, ipqc_handler = ?, ipqc_verification_results = ?, ipqc_verification_reason = ?, ipqc_verifier = ?, ipqc_verification_time = ?, project_approval_result = ?, project_approval_opinion = ?, project_approver = ?, project_approver_time = ?, odm_approval_result = ?, odm_approval_opinion = ?, odm_approver = ?, odm_approver_time = ?, sqe_approval_result = ?, sqe_approval_opinion = ?, sqe_approver = ?, sqe_approver_time = ?, file_address = ?, assignee = ?, remark = ?, creator = ?, create_date = ?, update_date = ? where id = ? 
2020-12-18 17:57:51.999 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.updateByPrimaryKey[145]  ==> Parameters: 20201218001(String), ECN(String), LCFC-logo.jpg(String), 1339872330837389312(String), HQ(String), 111(String), 111(String), BOM,软件(String), 2020-12-18 00:00:00.0(Timestamp), SMT ENG(String), hualanlan(String), hualanlan(String), Plan(String), null, null, null, null, hualanlan(String), null, null, null, null, null, null, null, null, null, null, hualanlan(String), null, null, null, hualanlan(String), null, (String), hualanlan(String), (String), hualanlan(String), null, null, 1339872492369477632(String)
2020-12-18 17:57:52.003 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.updateByPrimaryKey[145]  <==    Updates: 1
2020-12-18 17:57:52.004 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==>  Preparing: SELECT DISTINCT task_name from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 17:57:52.004 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:57:52.006 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  <==      Total: 1
2020-12-18 17:57:52.007 DEBUG c.j.q.d.T.getUncloseTaskByBusinessId[145]  ==>  Preparing: Select * from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 17:57:52.007 DEBUG c.j.q.d.T.getUncloseTaskByBusinessId[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:57:52.009 DEBUG c.j.q.d.T.getUncloseTaskByBusinessId[145]  <==      Total: 1
2020-12-18 17:57:52.010 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==>  Preparing: select id, item_number, item_type, file_name, file_oid, sender_side, document_originator, model_name, change_type, posting_time, works_section, works_head, quality_head, status, involved_area, change_import_scheme, change_import_time, change_import_mode, ipqc_handler, ipqc_verification_results, ipqc_verification_reason, ipqc_verifier, ipqc_verification_time, project_approval_result, project_approval_opinion, project_approver, project_approver_time, odm_approval_result, odm_approval_opinion, odm_approver, odm_approver_time, sqe_approval_result, sqe_approval_opinion, sqe_approver, sqe_approver_time, file_address, assignee, remark, creator, create_date, update_date from ecn_info where id = ? 
2020-12-18 17:57:52.010 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:57:52.015 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  <==      Total: 1
2020-12-18 17:57:52.016 DEBUG c.j.q.d.H.getNewlyRecordByIdAndNode[145]  ==>  Preparing: SELECT * from history_process_record where workflow_businessId=? and workflow_node = ? and type ='COMMIT' order by create_date desc limit 1 
2020-12-18 17:57:52.016 DEBUG c.j.q.d.H.getNewlyRecordByIdAndNode[145]  ==> Parameters: 1339872492369477632(String), Apply(String)
2020-12-18 17:57:52.023 DEBUG c.j.q.d.H.getNewlyRecordByIdAndNode[145]  <==      Total: 1
2020-12-18 17:57:52.185 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 17:57:52.280 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn fail, because null
2020-12-18 17:57:52.796 ERROR cn.jwis.qualityworkflow.util.ReflectUtil[271]  workflow send email fail, cause: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

2020-12-18 17:57:53.041 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-18 17:57:53.041 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-18 17:57:53.043 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 17:57:53.043 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 17:57:53.044 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-18 17:57:53.044 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 17:57:53.046 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-18 17:57:53.047 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 17:57:53.072 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-18 17:57:53.073 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-18 17:57:53.073 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-18 17:57:53.073 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-18 17:57:53.136 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-18 17:57:53.137 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-19(String), 2020-12-19(String)
2020-12-18 17:57:53.160 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-18 17:57:53.176 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-18 17:57:53.177 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-19(String), 2020-12-19(String), 10(Integer)
2020-12-18 17:57:53.204 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-18 17:57:53.236 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-18 17:57:53.237 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-18 17:57:53.241 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-18 17:58:00.801 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 17:58:00.803 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 17:58:00.806 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 17:58:00.811 DEBUG c.j.q.d.H.getRecordByBusinessId[145]  ==>  Preparing: SELECT * from history_process_record where workflow_businessId = ? and type = 'COMMIT' order by create_date desc 
2020-12-18 17:58:00.815 DEBUG c.j.q.d.H.getRecordByBusinessId[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:58:00.817 DEBUG c.j.q.d.H.getWorkflowOperationRecord[145]  ==>  Preparing: SELECT * from history_process_record where workflow_businessId = ? and type = "COMMIT" order by update_date, id 
2020-12-18 17:58:00.818 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-18 17:58:00.818 DEBUG c.j.q.d.H.getWorkflowOperationRecord[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:58:00.818 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-18 17:58:00.821 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-18 17:58:00.822 DEBUG c.j.q.dao.TaskRecordMapper.selectByExample[145]  ==>  Preparing: select id, template_key, process_instance_id, assignee, workflow_business_id, task_state, state, task_name, task_id, create_date, update_date from task_record WHERE ( workflow_business_id = ? ) 
2020-12-18 17:58:00.822 DEBUG c.j.q.dao.TaskRecordMapper.selectByExample[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:58:00.824 DEBUG c.j.q.d.H.getRecordByBusinessId[145]  <==      Total: 1
2020-12-18 17:58:00.824 DEBUG c.j.q.d.H.getWorkflowOperationRecord[145]  <==      Total: 1
2020-12-18 17:58:00.826 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==>  Preparing: SELECT DISTINCT task_name from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 17:58:00.827 DEBUG c.j.q.dao.TaskRecordMapper.selectByExample[145]  <==      Total: 2
2020-12-18 17:58:00.827 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:58:00.828 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==>  Preparing: SELECT DISTINCT task_name from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 17:58:00.829 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:58:00.829 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  <==      Total: 1
2020-12-18 17:58:00.831 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  <==      Total: 1
2020-12-18 17:58:00.831 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==>  Preparing: SELECT DISTINCT task_name from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 17:58:00.831 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 17:58:00.833 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  <==      Total: 1
2020-12-18 17:58:00.838 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==>  Preparing: select id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason , content from history_process_record WHERE ( type = ? and workflow_businessId = ? and creator = ? ) 
2020-12-18 17:58:00.839 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==> Parameters: SAVE(String), 1339872492369477632(String), hualanlan(String)
2020-12-18 17:58:00.844 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  <==      Total: 0
2020-12-18 17:58:00.846 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  ==>  Preparing: SELECT * from task_record WHERE task_id = ? 
2020-12-18 17:58:00.846 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  ==> Parameters: 5508233(String)
2020-12-18 17:58:00.884 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  <==      Total: 1
2020-12-18 17:58:00.884 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfoByTaskId[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState FROM ecn_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 17:58:00.885 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfoByTaskId[145]  ==> Parameters: 5508233(String)
2020-12-18 17:58:00.890 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfoByTaskId[145]  <==      Total: 1
2020-12-18 17:59:32.957 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 17:59:32.959 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 17:59:32.959 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:59:32.959 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:59:32.959 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 17:59:32.959 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 17:59:32.960 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 17:59:32.960 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 17:59:32.960 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 17:59:32.963 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 17:59:32.964 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 17:59:32.964 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 17:59:32.966 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 17:59:32.966 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 17:59:32.966 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 17:59:32.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 17:59:32.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 17:59:32.967 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 17:59:32.968 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 17:59:32.969 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.969 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.969 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 17:59:32.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 17:59:32.970 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 17:59:32.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.969 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 17:59:32.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 17:59:32.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 17:59:32.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 17:59:32.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 17:59:32.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 17:59:32.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 17:59:32.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 17:59:32.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 17:59:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 17:59:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 17:59:32.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 17:59:32.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 17:59:32.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 17:59:32.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 17:59:32.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:32.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:32.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 17:59:32.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:59:34.010 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 17:59:34.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:34.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 17:59:34.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:34.069 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 17:59:34.071 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:59:34.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:59:34.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 17:59:34.072 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:59:34.072 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:59:34.074 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:59:34.074 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:59:34.074 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:59:34.074 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 17:59:34.076 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 17:59:34.078 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 17:59:34.078 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:59:34.078 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:59:34.079 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:59:34.079 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 17:59:34.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:59:34.082 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:59:34.082 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:59:34.093 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:59:34.093 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 17:59:34.163 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 17:59:34.164 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 17:59:34.165 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:59:34.165 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:59:34.165 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:59:34.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:34.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 17:59:34.167 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:59:34.168 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 17:59:34.168 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 17:59:34.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 17:59:34.173 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 17:59:34.175 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 17:59:34.180 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 17:59:34.181 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 17:59:34.181 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 17:59:34.183 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 17:59:34.183 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:59:34.183 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:59:34.184 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:59:34.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 17:59:34.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 17:59:34.185 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:59:34.186 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 17:59:34.187 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 17:59:34.201 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 17:59:34.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:34.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 17:59:34.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:59:34.220 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 17:59:34.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 17:59:34.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 17:59:34.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 17:59:34.240 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 17:59:34.241 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 17:59:34.241 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 17:59:34.243 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 17:59:34.245 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 17:59:34.748 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:59:34.825 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 17:59:34.879 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:00:00.013 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 18:00:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 18:00:00.020 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 18:00:00.022 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 18:00:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 18:00:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 18:00:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 18:00:00.025 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 18:00:00.025 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 18:00:00.084 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 18:00:00.121 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:04:32.967 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:04:32.969 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:04:32.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:04:32.969 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:04:32.970 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:04:32.970 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:04:32.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:04:32.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:04:32.971 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:04:32.973 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:04:32.974 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:04:32.974 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:04:32.975 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:04:32.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:04:32.975 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:04:32.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.976 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:04:32.976 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:04:32.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:04:32.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:04:32.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:04:32.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:04:32.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:04:32.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:04:32.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:04:32.980 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:04:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:04:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:04:32.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.981 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:04:32.981 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:04:32.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:04:32.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:04:32.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:04:32.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:04:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:04:32.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:04:32.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:04:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:04:33.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:33.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:33.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:04:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:04:34.023 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:04:34.024 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:04:34.024 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:04:34.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:34.026 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:04:34.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:04:34.026 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:04:34.026 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:04:34.026 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:04:34.028 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:04:34.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:34.028 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:04:34.029 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:04:34.030 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:04:34.030 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:04:34.031 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:04:34.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:04:34.033 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:04:34.033 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:04:34.069 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:04:34.069 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:04:34.070 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:04:34.070 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:04:34.071 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:04:34.072 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:04:34.072 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:04:34.072 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:04:34.072 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:04:34.073 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:04:34.077 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:04:34.077 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:04:34.077 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:04:34.082 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:04:34.083 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:04:34.091 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:04:34.091 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:04:34.091 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:04:34.091 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:04:34.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:34.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:04:34.093 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:04:34.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:04:34.094 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:04:34.094 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:04:34.095 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:04:34.097 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:04:34.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:04:34.107 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:04:34.107 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:04:34.110 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:04:34.124 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:04:34.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:34.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:04:34.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:04:34.162 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:04:34.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:04:34.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:04:34.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:04:34.182 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:04:34.182 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:04:34.183 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:04:34.185 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:04:34.186 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:04:35.611 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:04:35.620 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:04:35.684 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:09:32.978 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:09:32.980 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:09:32.980 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:09:32.981 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:09:32.981 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:09:32.981 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:09:32.982 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:09:32.985 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:09:32.986 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:09:32.986 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:09:32.988 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:09:32.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:09:32.989 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:09:32.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:09:32.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:32.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:09:32.991 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:09:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:09:32.992 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:09:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:09:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:09:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:32.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:09:32.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:32.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:09:32.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:32.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:32.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:32.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:09:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:09:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:32.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:09:33.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:09:33.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:09:33.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:09:33.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.007 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:09:33.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:09:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:09:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:09:33.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:09:33.277 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:09:33.278 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:09:33.283 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:09:33.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:09:33.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:09:33.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:33.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:33.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:09:33.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:34.035 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:09:34.035 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:09:34.036 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:09:34.038 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:09:34.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:34.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:09:34.038 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:09:34.038 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:09:34.039 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:09:34.039 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:09:34.040 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:09:34.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:34.040 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:09:34.041 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:09:34.042 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:09:34.042 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:09:34.042 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:09:34.044 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:09:34.044 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:09:34.065 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:09:34.065 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:09:34.066 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:09:34.066 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:09:34.066 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:09:34.066 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:09:34.067 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:09:34.067 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:09:34.068 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:09:34.068 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:09:34.070 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:09:34.070 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:09:34.071 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:09:34.075 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:09:34.077 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:09:34.083 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:09:34.084 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:09:34.084 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:09:34.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:34.084 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:09:34.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:09:34.086 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:09:34.087 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:09:34.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:09:34.087 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:09:34.089 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:09:34.090 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:09:34.105 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:09:34.106 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:09:34.106 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:09:34.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:09:34.124 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:09:34.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:34.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:09:34.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:09:34.142 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:09:34.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:09:34.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:09:34.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:09:34.162 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:09:34.162 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:09:34.162 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:09:34.164 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:09:34.166 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:09:34.614 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:09:34.648 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:09:34.722 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:10:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 18:10:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 18:10:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 18:10:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 18:10:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 18:10:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 18:10:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 18:10:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 18:10:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 18:10:00.090 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 18:10:00.095 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:14:32.990 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:14:32.991 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:14:32.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:14:32.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:14:32.992 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:14:32.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:14:32.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:14:32.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:14:32.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:14:32.995 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:14:32.995 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:14:32.996 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:14:32.996 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:14:32.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:32.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:14:32.997 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:14:32.997 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:14:32.997 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:14:32.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:14:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:14:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:14:32.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:14:32.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:32.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:32.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:32.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:14:33.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:14:33.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:14:33.000 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:14:32.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:14:33.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:14:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:14:33.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:14:33.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:14:33.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:14:33.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.007 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.007 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:14:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:14:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:14:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:14:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:14:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:14:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:14:33.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:14:34.042 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:14:34.042 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:14:34.043 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:14:34.044 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:14:34.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:34.044 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:14:34.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:14:34.045 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:14:34.045 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:14:34.046 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:14:34.047 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:14:34.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:34.048 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:14:34.048 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:14:34.048 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:14:34.048 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:14:34.048 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:14:34.050 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:14:34.050 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:14:34.086 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:14:34.087 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:14:34.087 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:14:34.087 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:14:34.087 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:14:34.087 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:14:34.088 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:14:34.088 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:14:34.088 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:14:34.090 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:14:34.091 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:14:34.091 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:14:34.091 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:14:34.095 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:14:34.097 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:14:34.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:14:34.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:14:34.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:34.108 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:14:34.108 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:14:34.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:14:34.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:14:34.110 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:14:34.110 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:14:34.110 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:14:34.113 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:14:34.114 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:14:34.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:14:34.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:14:34.176 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:14:34.178 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:14:34.194 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:14:34.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:34.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:14:34.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:14:34.212 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:14:34.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:14:34.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:14:34.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:14:34.229 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:14:34.230 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:14:34.230 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:14:34.232 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:14:34.233 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:14:34.671 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:14:34.703 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:14:34.760 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:19:33.001 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:19:33.002 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:19:33.003 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:19:33.003 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:19:33.003 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:19:33.003 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:19:33.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:19:33.004 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:19:33.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:19:33.007 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:19:33.007 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:19:33.007 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:19:33.008 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:19:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:19:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:19:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:19:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:19:33.009 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:19:33.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:19:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:19:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:19:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:19:33.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:19:33.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.013 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:19:33.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:19:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:19:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:19:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:19:33.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:19:33.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:19:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:19:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:19:33.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:19:33.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:33.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:33.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:19:33.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:19:34.055 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:19:34.055 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:19:34.056 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:19:34.058 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:19:34.058 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:19:34.058 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:19:34.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:34.058 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:19:34.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:19:34.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:34.060 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:19:34.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:19:34.062 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:19:34.063 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:19:34.063 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:19:34.064 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:19:34.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:19:34.066 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:19:34.068 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:19:34.092 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:19:34.092 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:19:34.092 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:19:34.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:19:34.092 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:19:34.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:19:34.093 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:19:34.093 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:19:34.093 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:19:34.095 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:19:34.095 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:19:34.095 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:19:34.096 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:19:34.101 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:19:34.102 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:19:34.179 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:19:34.179 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:19:34.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:34.179 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:19:34.179 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:19:34.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:19:34.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:19:34.181 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:19:34.181 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:19:34.182 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:19:34.184 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:19:34.185 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:19:34.197 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:19:34.197 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:19:34.198 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:19:34.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:19:34.219 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:19:34.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:34.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:19:34.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:19:34.239 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:19:34.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:19:34.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:19:34.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:19:34.257 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:19:34.258 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:19:34.258 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:19:34.260 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:19:34.261 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:19:35.564 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:19:35.578 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:19:35.609 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:20:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 18:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 18:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 18:20:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 18:20:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 18:20:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 18:20:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 18:20:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 18:20:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 18:20:00.092 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 18:20:00.097 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:24:33.012 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:24:33.014 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:24:33.015 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:24:33.014 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:24:33.015 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:24:33.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:24:33.015 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:24:33.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:24:33.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:24:33.018 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:24:33.018 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:24:33.019 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:24:33.020 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:24:33.020 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:24:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:24:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:24:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:24:33.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.021 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:24:33.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:24:33.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:24:33.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:24:33.025 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:24:33.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:24:33.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:24:33.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:24:33.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:24:33.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:24:33.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:24:33.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:24:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:24:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:24:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:24:33.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:24:33.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:24:33.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:33.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:33.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:24:33.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:24:34.064 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:24:34.064 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:24:34.065 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:24:34.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:34.067 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:24:34.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:24:34.067 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:24:34.067 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:24:34.067 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:24:34.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:34.069 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:24:34.069 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:24:34.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:24:34.071 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:24:34.071 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:24:34.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:24:34.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:24:34.073 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:24:34.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:24:34.093 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:24:34.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:24:34.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:24:34.096 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:24:34.096 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:24:34.096 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:24:34.096 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:24:34.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:24:34.097 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:24:34.097 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:24:34.100 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:24:34.100 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:24:34.100 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:24:34.105 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:24:34.107 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:24:34.115 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:24:34.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:34.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:24:34.115 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:24:34.116 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:24:34.116 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:24:34.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:24:34.119 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:24:34.119 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:24:34.119 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:24:34.121 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:24:34.122 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:24:34.133 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:24:34.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:24:34.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:24:34.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:24:34.176 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:24:34.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:34.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:24:34.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:24:34.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:24:34.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:24:34.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:24:34.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:24:34.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:24:34.221 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:24:34.221 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:24:34.223 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:24:34.224 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:24:34.726 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:24:34.726 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:24:34.738 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:29:33.022 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:29:33.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:29:33.024 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:29:33.024 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:29:33.024 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:29:33.024 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:29:33.024 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:29:33.025 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:29:33.025 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:29:33.027 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:29:33.028 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:29:33.028 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:29:33.030 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:29:33.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:29:33.031 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:29:33.032 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:29:33.031 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:29:33.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:29:33.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:29:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:29:33.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:29:33.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:29:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:29:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:29:33.036 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:29:33.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:29:33.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:29:33.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:29:33.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:29:33.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:29:33.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:29:33.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:29:33.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:29:33.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:29:33.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:29:33.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:29:33.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:29:33.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:33.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:33.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:29:33.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:29:34.074 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:29:34.075 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:29:34.076 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:29:34.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:29:34.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:34.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:29:34.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:29:34.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:29:34.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:29:34.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:34.079 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:29:34.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:29:34.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:29:34.081 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:29:34.081 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:29:34.082 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:29:34.083 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:29:34.083 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:29:34.085 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:29:34.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:29:34.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:29:34.107 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:29:34.107 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:29:34.107 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:29:34.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:29:34.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:29:34.108 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:29:34.109 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:29:34.110 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:29:34.111 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:29:34.112 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:29:34.112 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:29:34.116 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:29:34.117 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:29:34.125 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:29:34.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:34.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:29:34.127 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:29:34.127 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:29:34.127 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:29:34.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:29:34.130 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:29:34.131 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:29:34.131 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:29:34.133 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:29:34.134 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:29:34.179 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:29:34.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:29:34.180 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:29:34.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:29:34.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:29:34.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:34.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:29:34.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:29:34.217 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:29:34.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:29:34.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:29:34.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:29:34.237 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:29:34.238 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:29:34.238 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:29:34.240 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:29:34.241 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:29:34.624 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:29:34.752 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:29:34.768 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:30:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 18:30:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 18:30:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 18:30:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 18:30:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 18:30:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 18:30:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 18:30:00.032 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 18:30:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 18:30:00.090 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 18:30:00.095 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:34:33.033 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:34:33.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:34:33.040 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:34:33.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:34:33.040 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:34:33.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:34:33.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:34:33.043 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:34:33.043 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:34:33.044 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:34:33.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:34:33.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:34:33.047 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:34:33.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:34:33.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:34:33.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:34:33.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:34:33.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:34:33.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:34:33.052 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:34:33.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:34:33.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:34:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:34:33.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:34:33.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:34:33.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:34:33.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:34:33.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:34:33.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.070 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:34:33.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:34:33.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:34:33.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:34:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:34:33.337 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:34:33.338 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:34:33.343 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:34:33.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:34:33.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:34:33.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:33.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:33.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:34:33.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:34.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:34:34.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:34:34.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:34:34.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:34.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:34:34.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:34:34.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:34:34.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:34:34.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:34:34.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:34:34.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:34.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:34:34.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:34:34.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:34:34.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:34:34.195 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:34:34.195 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:34:34.197 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:34:34.198 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:34:34.277 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:34:34.277 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:34:34.277 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:34:34.278 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:34:34.278 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:34:34.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:34:34.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:34:34.278 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:34:34.279 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:34:34.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:34:34.282 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:34:34.282 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:34:34.283 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:34:34.287 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:34:34.288 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:34:34.295 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:34:34.296 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:34:34.296 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:34:34.297 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:34:34.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:34.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:34:34.298 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:34:34.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:34:34.300 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:34:34.300 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:34:34.302 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:34:34.303 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:34:34.315 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:34:34.315 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:34:34.316 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:34:34.318 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:34:34.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:34:34.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:34.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:34:34.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:34:34.352 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:34:34.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:34:34.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:34:34.354 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:34:34.384 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:34:34.385 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:34:34.385 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:34:34.387 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:34:34.388 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:34:34.894 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:34:34.904 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:34:34.922 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:39:33.044 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:39:33.046 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:39:33.046 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:39:33.046 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:39:33.046 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:39:33.047 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:39:33.047 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:39:33.047 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:39:33.048 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:39:33.049 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:39:33.050 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:39:33.050 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:39:33.050 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:39:33.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:39:33.052 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:39:33.052 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:39:33.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:39:33.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:39:33.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:39:33.052 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:39:33.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:39:33.055 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:39:33.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:39:33.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:39:33.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:39:33.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:39:33.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:39:33.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:39:33.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:39:33.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:39:33.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:39:33.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:39:33.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:39:33.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:39:33.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:39:33.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:33.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:33.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:39:33.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:39:34.101 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:39:34.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:39:34.101 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:39:34.101 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:39:34.104 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:39:34.105 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:39:34.105 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:39:34.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:34.105 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:39:34.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:39:34.106 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:39:34.106 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:39:34.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:34.141 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:39:34.141 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:39:34.141 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:39:34.142 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:39:34.143 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:39:34.146 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:39:34.179 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:39:34.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:39:34.179 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:39:34.180 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:39:34.180 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:39:34.180 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:39:34.181 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:39:34.181 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:39:34.181 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:39:34.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:39:34.182 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:39:34.183 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:39:34.183 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:39:34.187 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:39:34.188 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:39:34.199 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:39:34.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:39:34.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:34.201 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:39:34.201 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:39:34.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:39:34.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:39:34.203 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:39:34.203 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:39:34.204 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:39:34.210 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:39:34.211 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:39:34.219 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:39:34.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:39:34.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:39:34.222 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:39:34.239 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:39:34.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:34.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:39:34.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:39:34.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:39:34.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:39:34.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:39:34.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:39:34.277 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:39:34.277 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:39:34.277 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:39:34.279 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:39:34.280 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:39:35.662 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:39:35.711 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:39:35.723 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:40:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 18:40:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 18:40:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 18:40:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 18:40:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 18:40:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 18:40:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 18:40:00.032 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 18:40:00.032 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 18:40:00.090 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 18:40:00.095 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:44:33.056 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:44:33.062 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:44:33.062 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:44:33.062 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:44:33.064 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:44:33.064 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:44:33.064 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:44:33.067 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:44:33.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:44:33.072 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:44:33.072 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:44:33.072 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:44:33.078 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:44:33.078 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:44:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:44:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:44:33.079 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:44:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:44:33.081 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:44:33.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:44:33.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:44:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:44:33.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:44:33.090 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:44:33.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:44:33.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:44:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:44:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:44:33.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:44:33.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:44:33.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:44:33.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:44:33.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:44:33.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:44:33.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:44:33.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:44:33.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:33.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:33.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:44:33.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:44:34.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:44:34.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:44:34.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:44:34.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:44:34.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:34.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:44:34.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:44:34.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:44:34.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:44:34.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:44:34.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:44:34.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:44:34.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:44:34.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:34.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:44:34.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:44:34.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:44:34.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:44:34.290 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:44:34.314 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:44:34.314 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:44:34.314 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:44:34.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:44:34.318 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:44:34.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:44:34.319 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:44:34.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:44:34.322 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:44:34.322 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:44:34.323 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:44:34.323 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:44:34.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:44:34.335 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:44:34.336 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:44:34.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:44:34.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:44:34.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:34.384 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:44:34.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:44:34.384 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:44:34.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:44:34.390 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:44:34.392 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:44:34.392 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:44:34.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:44:34.400 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:44:34.415 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:44:34.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:44:34.416 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:44:34.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:44:34.600 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:44:34.600 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:34.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:44:34.609 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:44:34.629 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:44:34.629 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:44:34.629 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:44:34.635 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:44:34.686 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:44:34.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:44:34.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:44:34.693 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:44:34.693 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:44:34.997 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:44:35.069 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:44:35.301 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:46:12.676 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 18:46:12.677 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: CQM(String), COMMON(String)
2020-12-18 18:46:12.680 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 3
2020-12-18 18:46:16.292 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 18:46:16.293 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: IE(String), COMMON(String)
2020-12-18 18:46:16.296 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 13
2020-12-18 18:46:23.744 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 18:46:23.745 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: ME(String), COMMON(String)
2020-12-18 18:46:23.749 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 51
2020-12-18 18:46:30.247 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==>  Preparing: select DISTINCT user_account from department_mapping where department = ? and type = ? and user_account is not null and position is null 
2020-12-18 18:46:30.248 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  ==> Parameters: SMT(String), COMMON(String)
2020-12-18 18:46:30.252 DEBUG c.j.q.dao.UserMapper.getUserListByDepartment[145]  <==      Total: 7
2020-12-18 18:46:48.566 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  ==>  Preparing: SELECT * from task_record WHERE task_id = ? 
2020-12-18 18:46:48.567 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  ==> Parameters: 5508233(String)
2020-12-18 18:46:48.573 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  <==      Total: 1
2020-12-18 18:46:48.574 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  ==>  Preparing: SELECT * from task_record WHERE task_id = ? 
2020-12-18 18:46:48.575 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  ==> Parameters: 5508233(String)
2020-12-18 18:46:48.580 DEBUG c.j.q.dao.TaskRecordMapper.getByTaskId[145]  <==      Total: 1
2020-12-18 18:46:48.611 DEBUG c.j.q.d.WorkflowVariableReflectMapper.getVariables[145]  ==>  Preparing: SELECT variable from workflow_variable_reflect where template_key = ? and node = ? 
2020-12-18 18:46:48.611 DEBUG c.j.q.d.WorkflowVariableReflectMapper.getVariables[145]  ==> Parameters: QMSEcnProcess(String), Plan(String)
2020-12-18 18:46:48.614 DEBUG c.j.q.d.WorkflowVariableReflectMapper.getVariables[145]  <==      Total: 2
2020-12-18 18:47:50.665 WARN  com.zaxxer.hikari.pool.HikariPool[766]  HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m16s293ms946µs152ns).
2020-12-18 18:48:07.822 DEBUG c.j.q.d.W.getWorkflowMapping[145]  ==>  Preparing: SELECT * from workflow_handle_mapping where workflow_type = ? and workflow_node = ? limit 1 
2020-12-18 18:48:07.823 DEBUG c.j.q.d.W.getWorkflowMapping[145]  ==> Parameters: QMSEcnProcess(String), Plan(String)
2020-12-18 18:48:07.901 DEBUG c.j.q.d.W.getWorkflowMapping[145]  <==      Total: 1
2020-12-18 18:48:07.903 DEBUG c.j.q.dao.HistoryProcessRecordMapper.insert[145]  ==>  Preparing: insert into history_process_record (id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason, content ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 18:48:07.905 DEBUG c.j.q.dao.HistoryProcessRecordMapper.insert[145]  ==> Parameters: 1339885148417556480(String), QMSEcnProcess(String), Plan(String), 1339872492369477632(String), COMMIT(String), hualanlan(String), null, null, null, 通过(String), null, java.io.StringReader@25cf30ce(StringReader)
2020-12-18 18:48:07.910 DEBUG c.j.q.dao.HistoryProcessRecordMapper.insert[145]  <==    Updates: 1
2020-12-18 18:48:07.911 DEBUG c.j.q.dao.TaskRecordMapper.updateTaskRecord[145]  ==>  Preparing: update task_record e set e.task_state='Close' where e.workflow_business_id = ? and task_id = ? 
2020-12-18 18:48:07.912 DEBUG c.j.q.dao.TaskRecordMapper.updateTaskRecord[145]  ==> Parameters: 1339872492369477632(String), 5508233(String)
2020-12-18 18:48:07.917 DEBUG c.j.q.dao.TaskRecordMapper.updateTaskRecord[145]  <==    Updates: 1
2020-12-18 18:48:07.917 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==>  Preparing: select id, item_number, item_type, file_name, file_oid, sender_side, document_originator, model_name, change_type, posting_time, works_section, works_head, quality_head, status, involved_area, change_import_scheme, change_import_time, change_import_mode, ipqc_handler, ipqc_verification_results, ipqc_verification_reason, ipqc_verifier, ipqc_verification_time, project_approval_result, project_approval_opinion, project_approver, project_approver_time, odm_approval_result, odm_approval_opinion, odm_approver, odm_approver_time, sqe_approval_result, sqe_approval_opinion, sqe_approver, sqe_approver_time, file_address, assignee, remark, creator, create_date, update_date from ecn_info where id = ? 
2020-12-18 18:48:07.918 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 18:48:07.923 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  <==      Total: 1
2020-12-18 18:49:02.224 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  ==>  Preparing: SELECT count(*) from task_record where task_id = ? 
2020-12-18 18:49:02.226 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  ==> Parameters: 5508303(String)
2020-12-18 18:49:02.233 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  <==      Total: 1
2020-12-18 18:49:02.234 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==>  Preparing: insert into task_record ( id, template_key, process_instance_id, assignee, workflow_business_id, task_state, task_name, task_id, item_number, creator ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 18:49:02.234 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==> Parameters: 1339885376298287104(String), QMSEcnProcess(String), 5508203(String), dz_gyb1(String), 1339872492369477632(String), OnGoing(String), PQE(String), 5508303(String), 20201218001(String), hualanlan(String)
2020-12-18 18:49:02.239 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  <==    Updates: 1
2020-12-18 18:49:02.240 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  ==>  Preparing: SELECT count(*) from task_record where task_id = ? 
2020-12-18 18:49:02.240 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  ==> Parameters: 5508308(String)
2020-12-18 18:49:02.244 DEBUG c.j.q.dao.TaskRecordMapper.getCountByTaskId[145]  <==      Total: 1
2020-12-18 18:49:02.245 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==>  Preparing: insert into task_record ( id, template_key, process_instance_id, assignee, workflow_business_id, task_state, task_name, task_id, item_number, creator ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-18 18:49:02.245 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  ==> Parameters: 1339885376344424448(String), QMSEcnProcess(String), 5508203(String), hualanlan(String), 1339872492369477632(String), OnGoing(String), PQE(String), 5508308(String), 20201218001(String), hualanlan(String)
2020-12-18 18:49:02.249 DEBUG c.j.q.dao.TaskRecordMapper.insertSelective[145]  <==    Updates: 1
2020-12-18 18:49:02.256 DEBUG c.j.q.m.e.d.E.updateByPrimaryKeySelective[145]  ==>  Preparing: update ecn_info SET item_type = ?, status = ?, involved_area = ?, assignee = ? where id = ? 
2020-12-18 18:49:02.256 DEBUG c.j.q.m.e.d.E.updateByPrimaryKeySelective[145]  ==> Parameters: ECN(String), PQE(String), IQC(String), hualanlan(String), 1339872492369477632(String)
2020-12-18 18:49:02.262 DEBUG c.j.q.m.e.d.E.updateByPrimaryKeySelective[145]  <==    Updates: 1
2020-12-18 18:49:02.262 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==>  Preparing: SELECT DISTINCT task_name from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 18:49:02.263 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 18:49:02.265 DEBUG c.j.q.dao.TaskRecordMapper.getProcessCurrentState[145]  <==      Total: 1
2020-12-18 18:49:02.265 DEBUG c.j.q.d.T.getUncloseTaskByBusinessId[145]  ==>  Preparing: Select * from task_record WHERE workflow_business_id = ? and (task_state='OnGoing' or task_state is null) 
2020-12-18 18:49:02.265 DEBUG c.j.q.d.T.getUncloseTaskByBusinessId[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 18:49:02.268 DEBUG c.j.q.d.T.getUncloseTaskByBusinessId[145]  <==      Total: 2
2020-12-18 18:49:02.269 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==>  Preparing: select id, item_number, item_type, file_name, file_oid, sender_side, document_originator, model_name, change_type, posting_time, works_section, works_head, quality_head, status, involved_area, change_import_scheme, change_import_time, change_import_mode, ipqc_handler, ipqc_verification_results, ipqc_verification_reason, ipqc_verifier, ipqc_verification_time, project_approval_result, project_approval_opinion, project_approver, project_approver_time, odm_approval_result, odm_approval_opinion, odm_approver, odm_approver_time, sqe_approval_result, sqe_approval_opinion, sqe_approver, sqe_approver_time, file_address, assignee, remark, creator, create_date, update_date from ecn_info where id = ? 
2020-12-18 18:49:02.269 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  ==> Parameters: 1339872492369477632(String)
2020-12-18 18:49:02.272 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.selectByPrimaryKey[145]  <==      Total: 1
2020-12-18 18:49:02.273 DEBUG c.j.q.d.H.getNewlyRecordByIdAndNode[145]  ==>  Preparing: SELECT * from history_process_record where workflow_businessId=? and workflow_node = ? and type ='COMMIT' order by create_date desc limit 1 
2020-12-18 18:49:02.273 DEBUG c.j.q.d.H.getNewlyRecordByIdAndNode[145]  ==> Parameters: 1339872492369477632(String), Plan(String)
2020-12-18 18:49:02.283 DEBUG c.j.q.d.H.getNewlyRecordByIdAndNode[145]  <==      Total: 1
2020-12-18 18:49:03.131 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-18 18:49:03.132 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 18:49:03.133 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-18 18:49:03.134 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 18:49:03.134 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-18 18:49:03.134 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 18:49:03.137 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-18 18:49:03.137 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-18 18:49:03.300 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-18 18:49:03.300 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-18 18:49:03.300 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-18 18:49:03.301 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-18 18:49:03.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:49:03.311 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn fail, because null
2020-12-18 18:49:03.314 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:49:03.316 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn fail, because null
2020-12-18 18:49:03.324 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-18 18:49:03.325 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-19(String), 2020-12-19(String)
2020-12-18 18:49:03.348 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-18 18:49:03.356 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-18 18:49:03.357 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-19(String), 2020-12-19(String), 10(Integer)
2020-12-18 18:49:03.388 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-18 18:49:03.393 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-18 18:49:03.394 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-18 18:49:03.397 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-18 18:49:03.844 ERROR cn.jwis.qualityworkflow.util.ReflectUtil[271]  workflow send email fail, cause: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

2020-12-18 18:49:03.888 ERROR cn.jwis.qualityworkflow.util.ReflectUtil[271]  workflow send email fail, cause: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

2020-12-18 18:49:33.067 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-18 18:49:33.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:49:33.069 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-18 18:49:33.069 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-18 18:49:33.070 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:49:33.070 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-18 18:49:33.070 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-18 18:49:33.070 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-18 18:49:33.071 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-18 18:49:33.072 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-18 18:49:33.072 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-18 18:49:33.073 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-18 18:49:33.073 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-18 18:49:33.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-18 18:49:33.075 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-18 18:49:33.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-18 18:49:33.075 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-18 18:49:33.075 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 24
2020-12-18 18:49:33.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-18 18:49:33.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-18 18:49:33.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-18 18:49:33.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-18 18:49:33.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-18 18:49:33.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-18 18:49:33.079 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-18 18:49:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-18 18:49:33.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-18 18:49:33.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-18 18:49:33.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-18 18:49:33.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-18 18:49:33.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:49:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-18 18:49:33.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-18 18:49:33.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-18 18:49:33.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-18 18:49:33.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-18 18:49:33.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-18 18:49:33.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:49:33.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:49:33.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:49:33.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-18 18:49:33.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:49:33.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:49:33.109 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:49:33.110 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-18 18:49:33.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:49:33.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-18 18:49:33.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:49:33.111 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:49:33.112 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-18 18:49:33.112 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:49:33.113 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:49:33.113 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-18 18:49:33.128 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:49:33.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-18 18:49:33.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.184 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:49:33.184 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-18 18:49:33.185 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-18 18:49:33.185 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-18 18:49:33.186 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:49:33.186 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:49:33.188 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:49:33.189 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-18 18:49:33.189 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-18 18:49:33.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:49:33.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:49:33.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:49:33.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:49:33.193 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-18 18:49:33.194 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-18 18:49:33.206 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-18 18:49:33.207 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-18 18:49:33.207 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-18 18:49:33.210 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-18 18:49:33.210 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:49:33.210 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:49:33.212 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:49:33.213 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:49:33.213 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-18 18:49:33.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-18 18:49:33.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-18 18:49:33.231 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:49:33.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-18 18:49:33.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-18 18:49:33.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-18 18:49:33.250 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-18 18:49:33.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-18 18:49:33.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:49:33.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-18 18:49:33.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-18 18:49:33.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-18 18:49:33.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-18 18:49:33.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-18 18:49:33.291 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-18 18:49:33.291 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-18 18:49:33.293 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-18 18:49:33.294 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-18 18:49:33.817 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$11a36e0b.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:49:33.820 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$59127ab3.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:49:34.058 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-18 18:50:00.023 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-18 18:50:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-18 18:50:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-18 18:50:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-18 18:50:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-18 18:50:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-18 18:50:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-18 18:50:00.034 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-18 18:50:00.034 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-18 18:50:00.113 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-18 18:50:00.120 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
