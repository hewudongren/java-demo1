2020-12-05 11:35:04.141 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 11:35:04.154 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 11:35:20.574 ERROR cn.jwis.configration.clientUtil.HttpClientUtil[77]  send Http Request to:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties ,has errors:Connect to 10.159.65.221:14200 [/10.159.65.221] failed: connect timed out
2020-12-05 11:35:20.575 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :
2020-12-05 11:35:21.108 ERROR cn.jwis.configration.clientUtil.ConfigCenterHelper[56]  null
2020-12-05 11:35:22.201 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 6832 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-05 11:35:22.202 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-05 11:35:22.203 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-05 11:35:30.229 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$dcb0849] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:35:30.357 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$475f4a1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:35:31.327 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-05 11:35:31.350 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-05 11:35:31.366 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-05 11:35:31.367 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-05 11:35:31.387 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-05 11:35:31.512 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-05 11:35:31.512 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 9253 ms
2020-12-05 11:35:31.569 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-05 11:35:31.574 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-05 11:35:31.575 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-05 11:35:31.575 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-05 11:35:31.576 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-05 11:35:35.486 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 11:35:36.132 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-05 11:35:36.154 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-05 11:35:36.171 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-05 11:35:36.637 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-05 11:35:37.080 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-05 11:35:37.087 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-05 11:35:37.096 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-05 11:35:37.122 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-05 11:35:37.130 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-05 11:35:37.136 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-05 11:35:37.144 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-05 11:35:37.150 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-05 11:35:37.157 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-05 11:35:37.163 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-05 11:35:37.176 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-05 11:35:37.214 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-05 11:35:37.234 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-05 11:35:37.257 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-05 11:35:37.278 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-05 11:35:37.288 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-05 11:35:37.298 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-05 11:35:37.321 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-05 11:35:37.354 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-05 11:35:37.418 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-05 11:35:37.434 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-05 11:35:37.457 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-05 11:35:37.532 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-05 11:35:37.653 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-05 11:35:37.661 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-05 11:35:37.700 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-05 11:35:37.721 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-05 11:35:37.768 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-05 11:35:37.789 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-05 11:35:37.797 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-05 11:35:37.800 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-05 11:35:37.802 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-05 11:35:37.808 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-05 11:35:37.811 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-05 11:35:37.830 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-05 11:35:37.837 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-05 11:35:37.843 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-05 11:35:37.850 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-05 11:35:37.855 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-05 11:35:37.862 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-05 11:35:37.869 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-05 11:35:37.883 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-05 11:35:37.891 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-05 11:35:37.897 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-05 11:35:37.916 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-05 11:35:37.964 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-05 11:35:37.992 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-05 11:35:38.029 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-05 11:35:38.034 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-05 11:35:38.043 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-05 11:35:38.053 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-05 11:35:38.057 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-05 11:35:38.065 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-05 11:35:38.069 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-05 11:35:38.073 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-05 11:35:38.086 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-05 11:35:38.090 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-05 11:35:38.105 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-05 11:35:38.112 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-05 11:35:38.121 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-05 11:35:38.135 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-05 11:35:38.169 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-05 11:35:38.183 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-05 11:35:38.203 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-05 11:35:38.212 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-05 11:35:38.244 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-05 11:35:38.250 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-05 11:35:38.365 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-05 11:35:38.409 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-05 11:35:38.416 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-05 11:35:38.460 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-05 11:35:38.678 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-05 11:35:38.896 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-05 11:35:38.904 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-05 11:35:38.936 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-05 11:35:39.005 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-05 11:35:39.057 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-05 11:35:39.081 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-05 11:35:39.088 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-05 11:35:39.105 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-05 11:35:39.113 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-05 11:35:39.121 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-05 11:35:39.161 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-05 11:35:39.422 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-05 11:35:39.533 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-05 11:35:39.648 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-05 11:35:39.653 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 11:35:39.659 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-05 11:35:39.671 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-05 11:35:40.151 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-05 11:35:40.156 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 19.027 seconds (JVM running for 40.138)
2020-12-05 11:35:40.161 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-05 11:35:40.162 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-05 11:35:40.748 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-05 11:35:40.755 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 11:35:40.778 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 11:35:40.877 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 11:35:40.879 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 11:35:40.880 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 11:35:40.890 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 11:35:40.890 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 11:35:40.890 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 11:35:40.894 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 11:35:40.894 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 11:35:40.904 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 11:35:40.904 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.906 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 11:35:40.909 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 11:35:40.909 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.910 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 11:35:40.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.917 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 11:35:40.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.917 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 11:35:40.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 11:35:40.925 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 11:35:40.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 11:35:40.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 11:35:40.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 11:35:40.932 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 11:35:40.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 11:35:40.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 11:35:40.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 11:35:40.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.950 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.950 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 11:35:40.960 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 11:35:40.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 11:35:40.981 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.983 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 11:35:40.984 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 11:35:40.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 11:35:40.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 11:35:40.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:40.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:40.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 11:35:40.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 11:35:40.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:41.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:41.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 11:35:41.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:41.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:41.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 11:35:41.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 11:35:41.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:41.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 11:35:41.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.015 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 11:35:46.015 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 11:35:46.023 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 11:35:46.024 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.024 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.025 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 11:35:46.025 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 11:35:46.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 11:35:46.032 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.032 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.036 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 11:35:46.036 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.037 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 11:35:46.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.042 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.043 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.044 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 11:35:46.054 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 11:35:46.137 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 11:35:46.137 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 11:35:46.137 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 11:35:46.137 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 11:35:46.137 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 11:35:46.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 11:35:46.139 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 11:35:46.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 11:35:46.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.205 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 11:35:46.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 11:35:46.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 11:35:46.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 11:35:46.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 11:35:46.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 11:35:46.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.229 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.275 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 11:35:46.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 11:35:46.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 11:35:46.295 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 11:35:46.295 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 11:35:46.295 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 11:35:46.296 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 11:35:46.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 11:35:46.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 11:35:46.304 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 11:35:46.305 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 11:35:46.312 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.330 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 11:35:46.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 11:35:46.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 11:35:46.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 11:35:46.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 11:35:46.342 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 11:35:46.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 11:35:46.344 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.353 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 11:35:46.353 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.354 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 11:35:46.362 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 11:35:46.362 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 11:35:46.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 11:35:46.364 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 11:35:46.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 11:35:46.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 11:35:46.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 11:35:46.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 11:35:46.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.398 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 11:35:46.398 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 11:35:46.398 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.398 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 11:35:46.399 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 11:35:46.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 11:35:46.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 11:35:46.400 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.401 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 11:35:46.406 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 11:35:46.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.408 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.408 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 11:35:46.656 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 11:35:46.657 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 11:35:46.657 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 11:35:46.657 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 11:35:46.664 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 11:35:46.680 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 11:35:46.687 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 11:35:46.688 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 11:35:46.688 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 11:35:46.696 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 11:35:46.704 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 11:35:46.716 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 11:35:46.717 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 11:35:46.717 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 11:35:46.720 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 11:35:46.720 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 11:35:46.725 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 11:35:46.726 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 11:35:46.726 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 11:35:46.728 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 11:35:46.729 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 11:35:46.729 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 11:35:46.738 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 11:35:46.742 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 11:35:47.181 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 11:35:47.181 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 11:35:47.181 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 11:35:48.048 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 11:35:48.048 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 11:35:48.052 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 11:35:50.562 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 11:35:50.563 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-05 11:35:50.591 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 28 ms
2020-12-05 11:35:50.734 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 11:35:50.735 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 11:35:50.774 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 11:35:50.780 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 11:35:50.781 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 11:35:50.827 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 11:35:50.883 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 11:35:50.885 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:35:51.466 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 11:35:51.468 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 11:35:51.468 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 11:35:51.467 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 11:35:51.553 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:35:51.469 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:35:51.554 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:35:54.559 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 11:35:54.567 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 11:35:54.571 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 11:35:55.049 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 11:35:55.052 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 11:35:55.104 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 11:35:55.152 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 11:35:55.154 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 11:35:55.252 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 11:35:55.895 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 11:35:55.897 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 11:35:55.913 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 11:36:51.656 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND status IN (?) AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 11:36:51.659 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), Close(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 11:36:51.690 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 11:36:51.718 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND status IN (?) AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 11:36:51.721 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), Close(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 11:36:51.874 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 4
2020-12-05 11:36:51.905 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 11:36:51.906 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 11:36:51.925 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 11:38:40.559 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 11:38:40.561 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 11:38:40.604 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 11:38:40.606 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 11:38:40.606 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 11:38:40.641 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 11:38:40.942 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 11:38:40.943 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:38:40.988 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 11:38:40.989 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 11:38:40.989 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:38:40.990 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 11:38:40.990 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:38:40.989 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 11:38:40.991 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 11:38:41.008 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 11:38:41.011 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 11:38:41.013 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 11:38:49.927 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 11:38:49.930 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 11:38:49.982 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 11:38:50.010 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 11:38:50.012 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 11:38:50.151 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:43:00.423 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 13:43:00.424 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:00.433 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:00.433 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:00.435 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:00.436 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:00.436 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:00.437 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:00.437 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:00.437 WARN  com.zaxxer.hikari.pool.HikariPool[766]  HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h4m32s869ms607µs46ns).
2020-12-05 13:43:00.436 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:00.449 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:43:00.450 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:43:00.451 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 13:43:00.451 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 13:43:00.452 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:00.456 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:00.457 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:00.463 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:00.464 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 13:43:00.470 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:43:00.549 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.550 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:00.560 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.560 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.561 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:00.569 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.570 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.570 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:00.580 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.581 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 13:43:00.583 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 13:43:00.589 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 13:43:00.589 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 13:43:00.590 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 13:43:00.667 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:00.670 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 13:43:00.671 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 13:43:00.671 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:00.681 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:43:00.681 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 13:43:00.682 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:00.682 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 13:43:00.682 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:00.690 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:43:00.690 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 13:43:00.691 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 13:43:00.691 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:00.693 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:00.693 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:00.700 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 13:43:00.701 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:43:00.702 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:43:00.748 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.749 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:00.760 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:00.760 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.761 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 13:43:00.761 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.761 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 13:43:00.761 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:00.771 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.771 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:00.773 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:00.780 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:00.780 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:43:00.787 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:43:00.789 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:43:00.790 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 13:43:00.790 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 13:43:00.802 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:00.824 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:00.824 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 13:43:00.824 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 13:43:00.825 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:00.825 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.825 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.826 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:00.826 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:00.829 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:43:00.830 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:00.830 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:00.839 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.839 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.839 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:00.839 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:00.840 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:00.840 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:00.840 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.840 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:00.839 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:43:00.840 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:00.840 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:00.840 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:00.840 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:43:00.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.851 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.852 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:00.853 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:00.855 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:43:00.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:00.857 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:00.861 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.862 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.862 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:00.863 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:00.864 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:00.864 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.864 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:00.864 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:00.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.870 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:00.872 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:00.873 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.878 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:00.887 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.888 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.888 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:00.894 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:00.895 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:00.895 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:00.896 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:00.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.899 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:00.902 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:00.903 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:00.903 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:00.906 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:00.907 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:00.907 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.907 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:00.911 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:00.912 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:00.912 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:00.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:00.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.925 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:00.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:00.935 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:00.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:00.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:00.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.944 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:00.954 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:00.965 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:00.965 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:00.966 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:00.972 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.072 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.074 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:01.074 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:01.074 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:01.078 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.078 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.079 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.079 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.082 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.087 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:01.087 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:01.087 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:01.090 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.095 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:01.096 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:01.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:01.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.139 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.139 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.140 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.140 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.140 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.140 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.149 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.151 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.175 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.176 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.176 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.178 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:01.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:01.189 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:01.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:01.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.250 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:01.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:01.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.312 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:01.313 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:01.313 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:01.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.329 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:01.330 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:01.336 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.364 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.364 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.364 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.380 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.387 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.387 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.387 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.431 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.431 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.444 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.465 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.465 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.466 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.466 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.476 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.477 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.494 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.495 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.496 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.527 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.527 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.528 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.540 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.565 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.565 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.566 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.566 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.583 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.583 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.583 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.593 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.594 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.594 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.637 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.637 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.668 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.689 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.689 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.690 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.690 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.700 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.701 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.701 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.708 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.708 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.708 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.717 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.717 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.717 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.724 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.750 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.750 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.750 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.760 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.783 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.783 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.784 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.784 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.795 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.795 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.795 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.807 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.808 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.808 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.823 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.830 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:01.840 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:01.841 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:01.852 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.852 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:01.853 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.853 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:01.853 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:01.853 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.879 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:01.879 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.880 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:01.880 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:01.880 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:01.880 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.880 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:01.896 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:01.896 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:01.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:01.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:01.900 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:01.900 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.900 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:01.908 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.908 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:01.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.913 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:01.915 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:01.915 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:01.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:01.925 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:01.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:01.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:01.939 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:01.939 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.940 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:01.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:01.944 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:01.949 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.954 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:01.955 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.955 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:01.962 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:01.966 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.966 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.966 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:01.972 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:01.972 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:01.972 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:01.974 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:01.981 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:01.981 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:01.981 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:01.985 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:01.985 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:01.985 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:01.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:01.999 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:01.999 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:02.001 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:02.003 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:02.004 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:02.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:02.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:02.023 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:02.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:02.024 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:02.025 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:02.025 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.025 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.025 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.026 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.032 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:02.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:02.032 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:02.032 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:02.037 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.039 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:02.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:02.041 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:02.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:02.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:02.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:02.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:02.093 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:02.101 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:02.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:02.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:02.121 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.121 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.122 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.122 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.135 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.140 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:02.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:02.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.176 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.185 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.185 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.185 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.186 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.212 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:02.217 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.217 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.217 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.217 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.233 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.258 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.259 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.289 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:02.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:02.316 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.316 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.317 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.317 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.325 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.325 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:02.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:02.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:02.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:02.370 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:02.370 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:02.381 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:02.383 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:02.395 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.395 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.395 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.403 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.425 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.426 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.426 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.427 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.439 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.448 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.456 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.456 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.456 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.501 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.502 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.502 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.511 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.535 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.535 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.536 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.536 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.546 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.561 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.561 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.562 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.571 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.595 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.595 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.596 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.603 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.624 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.624 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.625 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.625 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.633 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.634 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.634 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.658 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:02.659 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.659 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:02.663 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.663 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:02.665 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:02.665 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:02.744 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.745 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.745 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:02.745 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.746 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.746 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:02.747 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:02.748 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:02.748 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:02.753 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.753 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.755 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:02.756 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:02.756 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:02.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:02.769 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:02.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:02.770 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:02.778 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.778 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.778 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.778 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.790 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:02.790 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.791 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.791 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.794 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.794 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:02.799 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.799 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.800 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.803 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.806 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.806 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.806 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.866 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:02.867 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.867 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:02.871 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:02.871 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.871 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:02.884 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.884 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.884 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.884 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.885 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.885 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:02.885 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.895 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:02.895 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:02.910 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:02.910 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:02.910 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:02.916 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:02.919 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.919 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:02.919 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:02.919 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:02.920 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:02.920 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:02.920 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:02.928 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:02.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:02.933 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:02.934 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:02.937 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:02.937 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:02.937 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:02.938 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.939 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.939 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:02.945 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:02.946 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:02.946 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:02.947 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.947 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:02.947 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:02.954 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:02.956 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:02.957 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:02.981 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:02.981 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:02.982 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:02.993 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.015 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.015 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:03.024 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:03.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:03.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:03.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:03.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.064 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.076 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.101 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:03.101 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:03.102 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.102 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:03.103 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.103 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.103 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.103 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:03.114 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:03.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.115 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:03.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:03.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:03.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:03.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:03.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:03.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:03.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:03.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:03.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:03.163 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.163 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.163 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:03.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.171 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:03.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:03.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:03.193 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.193 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:03.193 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.193 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:03.205 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:03.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:03.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:03.216 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:03.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:03.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:03.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.250 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.252 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.259 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.289 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.289 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:03.290 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:03.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.302 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:03.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:03.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:03.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:03.322 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.352 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:03.352 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.352 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:03.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.384 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:03.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:03.385 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.385 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.385 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.385 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:03.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:03.401 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:03.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:03.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:03.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:03.424 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:03.424 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:03.424 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:03.427 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.431 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:03.433 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:03.449 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.450 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.450 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.461 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.486 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.487 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.487 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.487 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:43:03.502 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:43:03.502 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.502 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:43:03.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:43:03.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:43:03.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.549 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.550 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.550 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:03.552 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:03.565 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.564 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:03.565 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:03.573 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:03.573 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:03.574 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:03.576 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:03.577 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:03.577 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:03.588 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:03.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:03.588 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:03.588 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:43:03.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:03.600 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:03.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.601 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:03.609 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:03.610 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:03.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:03.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:03.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.628 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:03.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:03.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:03.638 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:03.644 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:03.644 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.647 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:03.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.658 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:03.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:03.665 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:03.666 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:03.666 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:03.674 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:03.674 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:03.674 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:03.674 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:03.681 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:03.681 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:03.682 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:03.692 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:03.692 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:03.694 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:03.714 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:03.714 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:03.714 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:03.724 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:03.724 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:03.724 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:03.731 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:03.732 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:04.080 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:04.081 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:04.088 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:04.088 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:04.101 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:04.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:04.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:04.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:04.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:04.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:04.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:04.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:04.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:04.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:04.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:04.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:04.211 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:04.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:04.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.241 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:04.241 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:04.241 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:04.248 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:04.272 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:04.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:04.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:04.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:04.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:04.315 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:04.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:04.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:04.345 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:04.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:04.352 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:04.352 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:04.366 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:04.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:04.372 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:04.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:04.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.377 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:04.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:04.384 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:04.384 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:04.395 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:04.396 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:04.396 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:04.398 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:04.398 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:04.399 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:04.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:04.399 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:04.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:04.405 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:04.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:04.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:04.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:04.407 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:04.409 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:04.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:04.424 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:04.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:04.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:04.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:04.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:04.438 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:04.439 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:04.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:04.441 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:04.446 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:04.446 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:04.446 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:04.450 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:04.463 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:04.464 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:04.480 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:04.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:04.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:04.490 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:04.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:04.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:04.511 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:04.544 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:04.581 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:04.582 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:04.582 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:04.601 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:04.601 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:04.601 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:04.613 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:04.614 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:05.085 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:05.085 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:05.092 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:05.092 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:05.102 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:05.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:05.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:05.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:05.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:05.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:05.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:05.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:05.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:05.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:05.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:05.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:05.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:05.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:05.213 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:05.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.221 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:05.222 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:05.238 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:05.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:05.246 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:05.246 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:05.246 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:05.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.255 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:05.274 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:05.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:05.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:05.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:05.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:05.279 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:05.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:05.287 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:05.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.287 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:05.295 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:05.295 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:05.295 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:05.302 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:05.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:05.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:05.307 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:05.308 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:05.308 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:05.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:05.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:05.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:05.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:05.311 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:05.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:05.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:05.315 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:05.315 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:05.316 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:05.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:05.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:05.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:05.330 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:05.331 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:05.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:05.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:05.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:05.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:05.360 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:05.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:05.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:05.369 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:05.369 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:05.369 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:05.376 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:05.379 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:05.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:05.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:05.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:05.397 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:05.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:05.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:05.418 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:05.418 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:05.418 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:05.419 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:05.432 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:05.432 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:05.432 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:05.432 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:05.433 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:05.446 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:05.447 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:05.998 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:06.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:06.005 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:06.014 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:06.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:06.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.059 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:06.071 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:06.071 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:06.074 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:06.074 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:06.075 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:06.075 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.075 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:06.078 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:06.078 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:06.081 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:06.082 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:06.082 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:06.086 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:06.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:06.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:06.090 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:06.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:06.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:06.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:06.097 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:06.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:06.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:06.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:06.105 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:06.106 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:06.106 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:06.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:06.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:06.112 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.112 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:06.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.119 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:06.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.119 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:06.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:06.120 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:06.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:06.133 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:06.134 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:06.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:06.138 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:06.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.139 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:06.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:06.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.157 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:06.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.157 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:06.157 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:06.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:06.166 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:06.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:06.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:06.189 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:06.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:06.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:06.210 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:06.211 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:06.211 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:06.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.219 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:06.219 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:06.220 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:06.227 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:06.228 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:06.239 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:06.239 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.239 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:06.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:06.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:06.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:06.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.302 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:06.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:06.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:06.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:06.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:06.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:06.379 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:06.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:06.387 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:06.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:06.415 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:06.415 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:06.423 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:06.424 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:06.748 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:06.755 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:06.756 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:06.768 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:06.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:06.778 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.803 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:06.804 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.804 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:06.812 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:06.900 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:06.901 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:06.901 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:06.901 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:06.911 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:06.912 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:06.912 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:06.912 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:06.913 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:06.922 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:06.922 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:06.922 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:06.926 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:06.927 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:06.929 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:06.930 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:06.930 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:06.938 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:06.938 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:06.938 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:06.938 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:06.950 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:06.952 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:06.952 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:06.959 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:06.981 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:06.981 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.982 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:06.990 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:06.991 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:06.991 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:07.000 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:07.024 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:07.044 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:07.045 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:07.045 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:07.053 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:07.053 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:07.053 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:07.060 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:07.060 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:07.064 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:07.065 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:07.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:07.069 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:07.083 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:07.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:07.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:07.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:07.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:07.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:07.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:07.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:07.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:07.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:07.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:07.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:07.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:07.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:07.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.225 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:07.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:07.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:07.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:07.275 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:07.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:07.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:07.314 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:07.314 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:07.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:07.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:07.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:07.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:07.372 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:07.373 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.373 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:07.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:07.416 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:07.416 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:07.417 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:07.428 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:07.429 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:07.595 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:07.603 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:07.604 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:07.613 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:07.614 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.614 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:07.621 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.647 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:07.647 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:07.647 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:07.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:07.663 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:07.670 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:07.671 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:07.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:07.675 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:07.675 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:07.677 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:07.677 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:07.677 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:07.683 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:07.683 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:07.683 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:07.683 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:07.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:07.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:07.693 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:07.694 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:07.699 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:07.699 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:07.699 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:07.699 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:07.712 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:07.714 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:07.714 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:07.722 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:07.742 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:07.743 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:07.743 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:07.750 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:07.750 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:07.751 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:07.758 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:07.780 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:07.803 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:07.803 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:07.803 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:07.813 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:07.814 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:07.815 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:07.822 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:07.824 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:08.019 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:08.019 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:08.026 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:08.026 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:08.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:08.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:08.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:08.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:08.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:08.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:08.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:08.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:08.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:08.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:08.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:08.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:08.148 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:08.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:08.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.179 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:08.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:08.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:08.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:08.217 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:08.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:08.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.264 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:08.265 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:08.265 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:08.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:08.308 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:08.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:08.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:08.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:08.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:08.347 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:08.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:08.356 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:08.356 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:08.376 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:08.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:08.395 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:08.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.396 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:08.397 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:08.411 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:08.412 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:08.426 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:08.426 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:08.426 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:08.436 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:08.436 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:08.437 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:08.437 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:08.449 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:08.449 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:08.449 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:08.457 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:08.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:08.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:08.459 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:08.459 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:08.459 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:08.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:08.468 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:08.468 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:08.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:08.468 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:08.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:08.468 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:08.478 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:08.480 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:08.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:08.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:08.482 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:08.488 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:08.509 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:08.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:08.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:08.520 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:08.521 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:08.521 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:08.531 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:08.555 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:08.578 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:08.579 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:08.579 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:08.588 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:08.588 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:08.588 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:08.595 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:08.596 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:09.099 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:09.099 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:09.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:09.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:09.118 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:09.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:09.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:09.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:09.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:09.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:09.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:09.171 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:09.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:09.177 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:09.177 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:09.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:09.189 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:09.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:09.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:09.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:09.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:09.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:09.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:09.229 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:09.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:09.229 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:09.236 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:09.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.260 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:09.260 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:09.260 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:09.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:09.261 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:09.261 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:09.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:09.270 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:09.271 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:09.271 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:09.273 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:09.274 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:09.274 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:09.281 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:09.281 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:09.281 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:09.284 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:09.285 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:09.288 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:09.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:09.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:09.291 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:09.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:09.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:09.295 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:09.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:09.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:09.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:09.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:09.331 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:09.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:09.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:09.332 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:09.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:09.350 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:09.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:09.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:09.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:09.358 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:09.358 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:09.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:09.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:09.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:09.369 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:09.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:09.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:09.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:09.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:09.404 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:09.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:09.415 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:09.415 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:09.426 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:09.426 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:09.426 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:09.436 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:09.437 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:09.437 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:09.442 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:09.442 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:09.445 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:09.446 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:09.985 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:09.992 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:09.993 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:10.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.044 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:10.045 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:10.045 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:10.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:10.085 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:10.086 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:10.086 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:10.086 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:10.097 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:10.114 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:10.111 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:10.111 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:10.115 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:10.116 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:10.116 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:10.124 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:10.128 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:10.128 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:10.134 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:10.136 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:10.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:10.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:10.143 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:10.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:10.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:10.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:10.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:10.156 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:10.156 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:10.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:10.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:10.157 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:10.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:10.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:10.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:10.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:10.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:10.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:10.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:10.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:10.268 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:10.268 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:10.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:10.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:10.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:10.282 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:10.283 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:10.283 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:10.293 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:10.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:10.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:10.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:10.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.368 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:10.369 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:10.369 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:10.371 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:10.372 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:10.372 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:10.381 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:10.383 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:10.384 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:10.384 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:10.395 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:10.397 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:10.407 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:10.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:10.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:10.437 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:10.437 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:10.437 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:10.449 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:10.475 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:10.475 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:10.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:10.504 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:10.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:10.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:10.537 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:10.538 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:10.538 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:10.552 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:10.554 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:10.915 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:10.923 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:10.924 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:10.934 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:10.935 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:10.935 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:10.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.011 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:11.011 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.011 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:11.052 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:11.076 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:11.077 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:11.077 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:11.080 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:11.088 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:11.088 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:11.088 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:11.088 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:11.088 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:11.095 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:11.095 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:11.095 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:11.099 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:11.100 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:11.104 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:11.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:11.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:11.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:11.114 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:11.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:11.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:11.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:11.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:11.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.158 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:11.158 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.160 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:11.170 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:11.171 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.171 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:11.182 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:11.204 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:11.226 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:11.227 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:11.227 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:11.235 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:11.235 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:11.235 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:11.242 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:11.243 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:11.251 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:11.251 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:11.258 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:11.258 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:11.274 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:11.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:11.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:11.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:11.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:11.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:11.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:11.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:11.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:11.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:11.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:11.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:11.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:11.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:11.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.422 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:11.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:11.429 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:11.451 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:11.452 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.452 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:11.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:11.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:11.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:11.521 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:11.521 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.521 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:11.527 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:11.546 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:11.546 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:11.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:11.576 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:11.576 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:11.576 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:11.586 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:11.587 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:11.736 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:11.742 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:11.743 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:11.757 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:11.757 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.757 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:11.764 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.806 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:11.806 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.806 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:11.814 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:11.839 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:11.839 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:11.839 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:11.846 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:11.846 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:11.846 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:11.851 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:11.858 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:11.859 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:11.859 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:11.860 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:11.866 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:11.867 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:11.867 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:11.875 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:11.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:11.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:11.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:11.884 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:11.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:11.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:11.902 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:11.905 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:11.905 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:11.911 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:11.939 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:11.939 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.939 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:11.946 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:11.947 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:11.947 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:11.953 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:11.973 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:11.994 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:11.994 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:11.995 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:12.003 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:12.003 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:12.003 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:12.011 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:12.012 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:12.165 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:12.165 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:12.173 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:12.174 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:12.190 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:12.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:12.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:12.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:12.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:12.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:12.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:12.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:12.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:12.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:12.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:12.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:12.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:12.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:12.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.342 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:12.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:12.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:12.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:12.372 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:12.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:12.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:12.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:12.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:12.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:12.437 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:12.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:12.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:12.464 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:12.464 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:12.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:12.492 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:12.492 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:12.492 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:12.506 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:12.507 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:12.513 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:12.514 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:12.514 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:12.524 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:12.524 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.525 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:12.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.556 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:12.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:12.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:12.562 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:12.565 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:12.573 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:12.574 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:12.580 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:12.580 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:12.580 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:12.583 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:12.583 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:12.584 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:12.588 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:12.589 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:12.589 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:12.593 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:12.594 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:12.594 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:12.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:12.604 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:12.605 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:12.605 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:12.614 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:12.615 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:12.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:12.619 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:12.620 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:12.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:12.646 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:12.646 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:12.646 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:12.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:12.654 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:12.654 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:12.660 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:12.678 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:12.702 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:12.703 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:12.703 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:12.716 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:12.716 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:12.716 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:12.728 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:12.729 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:13.123 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:13.123 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:13.133 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:13.134 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:13.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:13.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:13.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:13.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:13.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:13.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:13.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:13.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:13.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:13.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:13.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:13.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:13.275 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:13.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:13.281 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:13.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.288 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:13.288 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:13.299 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:13.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:13.302 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:13.303 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:13.303 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:13.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.309 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:13.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:13.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:13.334 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:13.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.334 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:13.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:13.341 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:13.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.365 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:13.365 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:13.365 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:13.367 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:13.367 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:13.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:13.372 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:13.372 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:13.373 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:13.375 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:13.385 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:13.386 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:13.395 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:13.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:13.397 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:13.403 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:13.405 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:13.406 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:13.412 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:13.413 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:13.413 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:13.419 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:13.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:13.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:13.423 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:13.423 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.423 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:13.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:13.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:13.434 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:13.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:13.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:13.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:13.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:13.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:13.457 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:13.457 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:13.457 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:13.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:13.465 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:13.466 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:13.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:13.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:13.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:13.489 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:13.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:13.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:13.499 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:13.526 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:13.549 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:13.549 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:13.550 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:13.559 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:13.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:13.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:13.567 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:13.568 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:13.995 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:14.001 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:14.001 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:14.010 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:14.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:14.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.042 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:14.043 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:14.043 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:14.052 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:14.075 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:14.075 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:14.075 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:14.087 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:14.088 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:14.088 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:14.100 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:14.101 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:14.117 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:14.117 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:14.125 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:14.127 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:14.140 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:14.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:14.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:14.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:14.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:14.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:14.224 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:14.230 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:14.230 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:14.237 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:14.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:14.242 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:14.242 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:14.242 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:14.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.251 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:14.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:14.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:14.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:14.261 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:14.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:14.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:14.275 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:14.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:14.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:14.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:14.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:14.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:14.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:14.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:14.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:14.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.311 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:14.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:14.318 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:14.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.320 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:14.320 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:14.328 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:14.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:14.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:14.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:14.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:14.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:14.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:14.395 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:14.395 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:14.405 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:14.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:14.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:14.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:14.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:14.413 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:14.413 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:14.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:14.470 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:14.479 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:14.501 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:14.501 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:14.501 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:14.509 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:14.509 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:14.764 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:14.775 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:14.775 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:14.785 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:14.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:14.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:14.797 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:14.830 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:14.831 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:14.831 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:14.838 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:14.858 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:14.858 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:14.858 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:14.870 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:14.871 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:14.871 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:14.883 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:14.883 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:15.049 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:15.064 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:15.065 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:15.084 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:15.085 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:15.085 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:15.101 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:15.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:15.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:15.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:15.165 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:15.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:15.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:15.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:15.225 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:15.226 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:15.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.240 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:15.240 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:15.263 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:15.266 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:15.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:15.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:15.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.278 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.279 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:15.279 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:15.289 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:15.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:15.305 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.305 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:15.311 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:15.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:15.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:15.338 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:15.338 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:15.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:15.347 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:15.348 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:15.348 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:15.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:15.356 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:15.357 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:15.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:15.381 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:15.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:15.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:15.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:15.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:15.428 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:15.447 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:15.448 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.448 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.478 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:15.478 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:15.479 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:15.498 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:15.516 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:15.516 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:15.531 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:15.556 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:15.556 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.556 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:15.562 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:15.586 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:15.586 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:15.586 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:15.594 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:15.595 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:15.610 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:15.616 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:15.616 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:15.627 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:15.627 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:15.627 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:15.634 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:15.658 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:15.658 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:15.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:15.665 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:15.689 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:15.689 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:15.689 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:16.056 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:16.056 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:16.056 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:16.071 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:16.071 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:16.431 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:16.438 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:16.438 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:16.447 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:16.448 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:16.448 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:16.454 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:16.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:16.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:16.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:16.461 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:16.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:16.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:16.782 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:16.786 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:16.787 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:17.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.168 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:17.168 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.169 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:17.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:17.179 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.180 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:17.191 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:17.222 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:17.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:17.274 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:17.275 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:17.284 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:17.285 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:17.285 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:17.292 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:17.292 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:17.314 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:17.315 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:17.325 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:17.325 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:17.336 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:17.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:17.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:17.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:17.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:17.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:17.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:17.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.383 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:17.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:17.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:17.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:17.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:17.435 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:17.443 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:17.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:17.445 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:17.445 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:17.450 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.454 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:17.455 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.455 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:17.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.474 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:17.474 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.474 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:17.482 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:17.485 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:17.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:17.496 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:17.502 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:17.502 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.502 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:17.512 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.515 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:17.515 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:17.515 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:17.535 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:17.535 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:17.535 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:17.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:17.543 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.543 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:17.547 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:17.547 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:17.552 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:17.572 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:17.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:17.582 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:17.604 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:17.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:17.611 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:17.635 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:17.635 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:17.636 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:17.642 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:17.643 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:17.897 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:17.898 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:17.898 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:17.905 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:17.905 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:17.905 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:17.916 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:17.916 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:17.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:17.928 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:17.929 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:17.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:17.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:17.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:17.945 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:17.945 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:17.953 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:17.979 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:17.980 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.980 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:17.988 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:17.988 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:17.988 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:17.997 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:18.015 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:18.038 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:18.038 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:18.038 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:18.047 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:18.048 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:18.048 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:18.054 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:18.055 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:18.184 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:18.195 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:18.195 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:18.205 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:18.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:18.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.240 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:18.240 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:18.240 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:18.241 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:18.241 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:18.241 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:18.241 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:18.249 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:18.253 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:18.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:18.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:18.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:18.270 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:18.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.270 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:18.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:18.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.278 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:18.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.278 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:18.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:18.278 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:18.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:18.288 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:18.289 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:18.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:18.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:18.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:18.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:18.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:18.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:18.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:18.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:18.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.381 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:18.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:18.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:18.394 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:18.413 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:18.414 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.414 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:18.423 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.448 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:18.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:18.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:18.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:18.478 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:18.479 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.479 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:18.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:18.507 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:18.507 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.508 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:18.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:18.537 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:18.538 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:18.538 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:18.544 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:18.545 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:18.649 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:18.649 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:18.649 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:18.662 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:18.662 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:18.662 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:18.670 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:18.670 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:18.671 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:18.685 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:18.685 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:18.685 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:18.686 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:18.699 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:18.702 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.702 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:18.708 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.728 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:18.728 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:18.729 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:18.735 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:18.735 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:18.736 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:18.744 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:18.770 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:18.790 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:18.790 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:18.791 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:18.799 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:18.799 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:18.799 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:18.808 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:18.808 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:18.933 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:18.941 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:18.941 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:18.959 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:18.959 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:18.960 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:18.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:18.999 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:18.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:18.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:19.007 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:19.027 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:19.027 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:19.028 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:19.038 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:19.038 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:19.038 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:19.061 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:19.062 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:19.140 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:19.140 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:19.141 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:19.141 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:19.159 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:19.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:19.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:19.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:19.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:19.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:19.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:19.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:19.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:19.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:19.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:19.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:19.276 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:19.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:19.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.369 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:19.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:19.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:19.380 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:19.403 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:19.404 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.404 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:19.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.436 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:19.437 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:19.437 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:19.445 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:19.469 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:19.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:19.477 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:19.497 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:19.498 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.498 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:19.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:19.522 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:19.523 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:19.523 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:19.531 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:19.532 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:19.533 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:19.533 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:19.543 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:19.544 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:19.553 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:19.554 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:19.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:19.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:19.554 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:19.568 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:19.568 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:19.568 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:19.569 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:19.582 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:19.585 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.585 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:19.593 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.614 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:19.614 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:19.614 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:19.622 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:19.622 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:19.622 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:19.630 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:19.654 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:19.683 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:19.683 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:19.683 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:19.694 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:19.694 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:19.694 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:19.705 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:19.706 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:19.743 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:19.751 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:19.753 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:19.769 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:19.770 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:19.770 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:19.778 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:19.809 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:19.810 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:19.810 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:19.816 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:19.839 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:19.839 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:19.839 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:19.848 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:19.848 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:19.848 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:19.858 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:19.859 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:20.103 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:20.104 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:20.111 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:20.112 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:20.123 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:20.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:20.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:20.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:20.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:20.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:20.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:20.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:20.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:20.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:20.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:20.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:20.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:20.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:20.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.251 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:20.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:20.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:20.258 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:20.284 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:20.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:20.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:20.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:20.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:20.333 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:20.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:20.349 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:20.350 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:20.369 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:20.370 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:20.370 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:20.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:20.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:20.380 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:20.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:20.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:20.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:20.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:20.406 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:20.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:20.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:20.411 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:20.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:20.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:20.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:20.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:20.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.476 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:20.476 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:20.476 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:20.476 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:20.476 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:20.476 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:20.500 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:20.500 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:20.501 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:20.501 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:20.501 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:20.510 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:20.530 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:20.531 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:20.540 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:20.541 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:20.551 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:20.551 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:20.552 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:20.554 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:20.554 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:20.554 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:20.559 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:20.564 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:20.564 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:20.565 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:20.573 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:20.573 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:20.595 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:20.595 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:20.595 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:20.604 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:20.625 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:20.625 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:20.625 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:20.633 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:20.633 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:20.633 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:20.646 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:20.646 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:21.111 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:21.111 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:21.120 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:21.120 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:21.149 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:21.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:21.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:21.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:21.172 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:21.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:21.179 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:21.179 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:21.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:21.211 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:21.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.213 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:21.213 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:21.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:21.219 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:21.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:21.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:21.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:21.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:21.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:21.228 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:21.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:21.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:21.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:21.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:21.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:21.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:21.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:21.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.275 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:21.280 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:21.280 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:21.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:21.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.281 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:21.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:21.283 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:21.283 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:43:21.286 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:21.286 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:21.286 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:21.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.293 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:21.296 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:43:21.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:43:21.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:21.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:21.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:21.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:21.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:21.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:21.334 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:21.334 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:21.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:43:21.343 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:21.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:21.343 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:21.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:43:21.343 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:21.347 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:21.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:21.421 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:21.422 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:21.422 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:21.425 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:21.446 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:43:21.447 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:21.447 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:21.447 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:21.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:21.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:21.453 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:21.453 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:43:21.454 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:43:21.455 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:21.463 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:43:21.464 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:43:21.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:21.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:21.507 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:21.528 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:21.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:21.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:21.538 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:21.564 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:21.564 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:21.565 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:21.574 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:21.575 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:22.041 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:22.047 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:43:22.047 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:43:22.058 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:43:22.058 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:43:22.059 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:43:22.067 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:43:22.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:43:22.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:43:22.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:43:22.075 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:43:22.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:43:22.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:43:22.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:43:22.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:22.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.119 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:22.131 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:43:22.131 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:22.131 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:22.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:22.139 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:22.139 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:43:22.145 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:43:22.166 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:43:22.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:43:22.191 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:43:22.191 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:43:22.200 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:43:22.200 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:22.201 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:22.202 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:22.202 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:22.208 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:22.207 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:22.209 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:22.210 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:43:22.265 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:22.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:22.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:22.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:22.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:22.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:22.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:22.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:22.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:22.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:22.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:22.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:22.384 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:22.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:22.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.415 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:22.416 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:22.416 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:22.424 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:22.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:22.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.446 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:22.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:22.486 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:22.487 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:22.487 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:22.492 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:22.515 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:22.515 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.515 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:22.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:22.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:22.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:22.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:22.549 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:22.574 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:22.574 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:22.575 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:22.583 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:22.584 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:22.820 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:23.132 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:23.133 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:23.139 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:23.139 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:23.155 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:23.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:23.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:23.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:23.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:23.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:23.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:23.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:23.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:23.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:23.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:23.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:23.260 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:23.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:23.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.291 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:23.291 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:23.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:23.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:23.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:23.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:23.324 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:23.345 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:23.346 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:23.346 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:23.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:23.377 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:23.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:23.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:23.405 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:23.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:23.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:23.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:23.521 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:23.521 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:23.521 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:23.536 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:23.537 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:23.901 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 13:43:23.902 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 13:43:23.936 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 13:43:23.937 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 13:43:23.937 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 13:43:23.985 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 13:43:24.116 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:24.116 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:24.122 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:24.122 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:24.132 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:24.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:24.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:24.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:24.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:24.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:24.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:24.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:24.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:24.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:24.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:24.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:24.208 DEBUG c.j.q.m.e.dao.EcnInfoMapper.getPullDownValue_COUNT[145]  ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT file_name FROM ecn_info WHERE file_name IS NOT NULL) table_count 
2020-12-05 13:43:24.209 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 13:43:24.209 DEBUG c.j.q.m.e.dao.EcnInfoMapper.getPullDownValue_COUNT[145]  ==> Parameters: 
2020-12-05 13:43:24.209 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:24.216 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 13:43:24.216 DEBUG c.j.q.m.e.dao.EcnInfoMapper.getPullDownValue_COUNT[145]  <==      Total: 1
2020-12-05 13:43:24.217 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 13:43:24.217 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT DISTINCT file_name FROM ecn_info WHERE file_name IS NOT NULL order by create_date DESC LIMIT ? 
2020-12-05 13:43:24.218 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:24.218 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 10(Integer)
2020-12-05 13:43:24.219 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 13:43:24.220 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:43:24.222 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:24.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:24.234 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:43:24.235 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 13:43:24.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.237 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 10
2020-12-05 13:43:24.239 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:43:24.239 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:43:24.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:24.259 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:24.260 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:24.267 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:43:24.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:24.272 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:43:24.273 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:43:24.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:24.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:24.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:24.304 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:43:24.306 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:43:24.307 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:43:24.315 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:43:24.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:24.318 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:24.319 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:24.324 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:24.347 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:24.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:24.354 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:24.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:24.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:24.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:24.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:24.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:24.417 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:24.417 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:24.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:24.428 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:25.077 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:25.079 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:25.087 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:25.088 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:25.110 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:25.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:25.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:25.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:25.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:25.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:25.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:25.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:25.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:25.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:25.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:25.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:25.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:25.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:25.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.226 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:25.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:25.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:25.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:25.256 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:25.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:25.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:25.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:25.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:25.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:25.291 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:25.312 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:25.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:25.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:25.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:25.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:25.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:25.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:25.365 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:25.365 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:25.365 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:25.372 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:25.373 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:26.052 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:26.054 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:43:26.060 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:43:26.061 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:43:26.071 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:43:26.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:43:26.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:43:26.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:43:26.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:43:26.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:43:26.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:43:26.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:43:26.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:43:26.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:43:26.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:43:26.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:26.166 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:26.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:43:26.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.194 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:26.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:26.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:26.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:26.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:26.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:43:26.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:43:26.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:26.294 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:43:26.294 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:43:26.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:43:26.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:43:26.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:43:26.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:26.369 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:43:26.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:43:26.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:43:26.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:43:26.398 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:43:26.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:43:26.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:43:26.408 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:43:26.409 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:43:26.991 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:43:41.191 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:43:41.194 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:43:41.223 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:43:41.251 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:43:41.253 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:43:41.347 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:43:42.802 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:43:42.805 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:43:42.825 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:44:02.493 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:44:02.496 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:44:02.535 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:44:02.563 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:44:02.566 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:44:02.652 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:44:03.121 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:44:03.123 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:44:03.141 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:44:32.670 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 13:44:32.673 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 13:44:32.744 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 13:44:32.746 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 13:44:32.747 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 13:44:32.827 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 13:44:32.988 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 13:44:32.989 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:44:32.997 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 13:44:32.997 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 13:44:32.997 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:44:32.997 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:44:33.003 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 13:44:33.004 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:44:33.012 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 13:44:33.032 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 13:44:33.033 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:44:33.034 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:44:35.635 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:44:35.637 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:44:35.676 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:44:35.706 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:44:35.708 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:44:35.800 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:45:50.434 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:45:50.440 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:45:50.440 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:45:50.445 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:45:50.445 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:45:50.445 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:45:50.445 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:45:50.446 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:45:50.446 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:45:50.446 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:45:50.447 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:45:50.457 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:45:50.457 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:45:50.457 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:45:50.457 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:45:50.457 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:45:50.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:45:50.460 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:45:50.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:45:50.461 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:45:50.461 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:45:50.466 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:45:50.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:45:50.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:45:50.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:45:50.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:45:50.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:45:50.472 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:45:50.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:45:50.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:45:50.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:45:50.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:45:50.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.482 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:45:50.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:45:50.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:45:50.491 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.491 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.491 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:45:50.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.506 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.506 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:45:50.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.523 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:45:50.531 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.531 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.532 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:45:50.538 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.539 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.539 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:45:50.546 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:45:50.547 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:45:50.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:45:50.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:45:50.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:45:50.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:45:50.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:45:50.550 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:45:50.550 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:45:50.550 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:45:50.557 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:45:50.557 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:45:50.558 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:45:50.559 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:45:50.559 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:45:50.564 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:45:50.571 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:45:50.583 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:45:50.584 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:45:50.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:45:50.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:45:50.587 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.587 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:45:50.587 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:45:50.587 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:45:50.593 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.594 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:45:50.594 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:45:50.594 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 13:45:50.604 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:45:50.611 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:45:50.612 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:45:50.614 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:45:50.615 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:45:50.615 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:45:50.628 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:45:50.629 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:45:50.630 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:45:50.640 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:45:50.640 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:45:50.640 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:45:50.646 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:45:50.647 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:45:50.690 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:45:50.729 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:45:50.729 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.730 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:45:50.743 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:45:50.770 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:45:50.771 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:45:50.772 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:45:50.788 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:45:50.808 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:45:50.808 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.808 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:45:50.822 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:45:50.848 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:45:50.848 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:45:50.848 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:45:50.857 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:45:50.882 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:45:50.883 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:45:50.883 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:45:50.903 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:45:50.904 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:45:51.343 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:45:51.381 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:45:51.860 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:48:33.867 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 13:48:33.868 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 13:48:33.921 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 13:48:33.922 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 13:48:33.922 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 13:48:33.976 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 13:48:34.245 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 13:48:34.245 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:48:34.251 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 13:48:34.252 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:48:34.254 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 13:48:34.254 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 13:48:34.255 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:48:34.255 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 13:48:34.257 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 13:48:34.264 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:48:34.272 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 13:48:34.272 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 13:48:34.285 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:48:34.286 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:48:34.378 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:48:34.385 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:48:34.388 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:48:34.428 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:48:34.432 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:48:34.434 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:48:34.444 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:48:50.858 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 13:48:50.858 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 13:48:50.910 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 13:48:50.914 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 13:48:50.915 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 13:48:50.949 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 13:51:21.820 WARN  com.zaxxer.hikari.pool.HikariPool[766]  HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m28ms496µs209ns).
2020-12-05 13:51:21.821 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:51:21.820 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 13:51:21.829 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:51:21.829 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:51:21.830 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:51:21.830 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:51:21.831 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 13:51:21.831 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:51:21.831 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:51:21.831 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 13:51:21.829 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:51:21.831 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 13:51:21.831 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 13:51:21.831 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:51:21.838 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:51:21.838 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:51:21.838 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:51:21.847 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:51:21.847 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.847 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:51:21.848 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:51:21.848 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.848 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 13:51:21.848 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:51:21.848 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 13:51:21.848 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 13:51:21.848 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:51:21.849 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.849 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:51:21.849 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 13:51:21.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:51:21.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:51:21.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:51:21.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.856 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 13:51:21.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.856 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 13:51:21.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:51:21.856 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 13:51:21.856 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.857 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:51:21.858 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:51:21.859 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:51:21.860 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:51:21.860 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:51:21.866 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.866 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.866 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.866 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.867 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:51:21.867 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:51:21.872 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:51:21.874 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:51:21.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:51:21.888 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.888 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.888 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.888 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:51:21.893 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.894 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.894 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:51:21.901 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.901 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.901 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:51:21.907 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:51:21.914 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.914 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.914 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:51:21.921 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:21.921 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:21.921 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:51:21.922 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 13:51:21.927 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:51:21.928 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:51:26.879 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:51:26.879 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:51:26.888 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:51:26.891 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:26.892 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:51:26.898 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:26.898 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:51:26.905 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:26.905 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:51:26.905 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:26.905 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:26.912 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:26.913 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:26.913 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:51:26.922 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:51:26.929 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:51:26.935 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:26.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:51:26.941 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:26.943 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:51:26.943 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:51:26.943 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:51:26.944 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:26.944 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 13:51:26.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:26.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:26.951 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:51:26.952 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 13:51:26.958 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:26.974 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:51:26.974 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:26.974 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:51:26.976 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:51:26.977 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 13:51:26.977 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:26.977 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 13:51:26.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:26.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 13:51:26.979 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:26.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:26.986 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:27.009 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:51:27.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:51:27.012 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:51:27.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 13:51:27.015 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 13:51:27.015 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.015 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:51:27.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 13:51:27.023 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 13:51:27.023 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.023 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:51:27.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.029 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 13:51:27.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 13:51:27.037 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:51:27.037 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.037 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:51:27.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.045 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:27.071 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 13:51:27.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 13:51:27.075 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:51:27.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:51:27.080 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 13:51:27.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:27.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:51:27.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:51:27.088 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 13:51:27.089 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.089 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:51:27.101 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:51:27.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 13:51:27.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 13:51:27.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:51:27.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:51:27.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 13:51:27.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:51:27.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 13:51:27.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.135 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:51:27.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:51:27.143 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:51:27.143 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:51:27.144 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:51:27.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:27.145 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 13:51:27.145 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.145 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:51:27.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 13:51:27.152 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:51:27.153 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:51:27.153 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:51:27.153 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:27.174 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:51:27.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:51:27.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:51:27.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 13:51:27.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:51:27.196 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:51:27.197 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:51:27.197 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 13:51:27.206 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:51:27.207 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:51:27.207 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:51:27.216 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:51:27.217 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:51:27.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:51:27.217 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:51:27.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:51:27.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:51:27.248 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:51:27.248 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:51:27.249 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:51:27.255 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:51:27.255 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:51:27.256 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 13:51:27.266 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:51:27.267 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:51:27.814 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:51:27.911 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:51:27.958 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:55:39.745 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 13:55:39.804 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:55:39.804 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:55:39.804 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 13:55:39.804 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 13:55:39.805 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 13:55:39.805 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 13:55:39.806 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 13:55:39.806 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 13:55:39.814 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 13:55:39.814 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 13:55:39.814 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 13:55:39.814 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 13:55:39.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.815 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 13:55:39.819 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 13:55:39.820 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.820 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 13:55:39.820 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 13:55:39.820 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.820 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 13:55:39.828 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 13:55:39.828 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.828 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.828 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.828 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 13:55:39.828 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.828 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 13:55:39.829 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.829 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 13:55:39.829 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 13:55:39.834 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.834 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.835 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.835 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.835 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 13:55:39.835 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 13:55:39.835 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 13:55:39.835 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 13:55:39.835 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 13:55:39.836 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 13:55:39.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 13:55:39.850 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 13:55:39.853 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.854 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 13:55:39.863 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.863 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.863 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.863 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 13:55:39.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.872 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 13:55:39.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 13:55:39.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 13:55:39.889 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.889 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.889 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 13:55:39.895 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:39.895 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:39.895 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 13:55:39.901 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:55:44.850 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:55:44.850 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:55:44.859 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:44.859 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:55:44.859 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:44.859 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:55:44.863 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:55:44.867 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:44.867 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:44.869 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:44.869 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:55:44.877 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:44.877 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:44.878 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:55:44.884 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:55:44.901 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 13:55:44.902 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:55:44.902 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:44.902 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 13:55:44.906 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:55:44.906 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 13:55:44.911 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:44.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 13:55:44.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:44.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:44.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 13:55:44.922 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:44.922 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:44.922 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:55:44.984 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:55:44.984 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 13:55:44.984 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:44.984 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:44.984 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 13:55:44.984 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:55:44.985 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:55:44.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:44.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 13:55:44.990 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:44.991 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:44.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.024 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:55:45.025 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:55:45.025 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 13:55:45.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.026 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 13:55:45.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 13:55:45.026 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:55:45.036 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 13:55:45.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.036 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.036 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:55:45.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 13:55:45.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.050 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 13:55:45.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 13:55:45.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.071 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:55:45.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 13:55:45.073 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 13:55:45.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 13:55:45.081 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:45.081 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:45.100 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 13:55:45.100 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.100 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:55:45.104 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 13:55:45.104 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:55:45.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.119 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 13:55:45.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 13:55:45.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 13:55:45.119 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.120 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 13:55:45.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:55:45.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 13:55:45.127 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 13:55:45.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 13:55:45.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.146 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 13:55:45.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 13:55:45.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 13:55:45.160 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:55:45.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:55:45.161 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 13:55:45.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 13:55:45.167 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:45.168 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.168 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 13:55:45.169 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:45.176 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 13:55:45.178 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 13:55:45.179 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:55:45.180 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:55:45.186 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:55:45.187 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 13:55:45.189 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 13:55:45.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 13:55:45.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 13:55:45.196 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 13:55:45.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 13:55:45.219 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 13:55:45.219 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 13:55:45.219 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 13:55:45.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 13:55:45.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 13:55:45.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 13:55:45.226 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 13:55:45.226 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:55:45.227 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:55:45.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 13:55:45.233 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:55:45.234 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 13:55:45.249 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 13:55:45.250 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 13:55:45.250 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 13:55:45.258 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 13:55:45.259 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 13:55:45.259 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 13:55:45.270 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 13:55:45.270 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 13:55:45.812 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$f889848e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor230.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:55:45.829 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 13:55:45.923 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$3ff89136.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:06:43.187 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 14:06:43.191 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 14:06:58.888 ERROR cn.jwis.configration.clientUtil.HttpClientUtil[77]  send Http Request to:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties ,has errors:Connect to 10.159.65.221:14200 [/10.159.65.221] failed: connect timed out
2020-12-05 14:06:58.889 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :
2020-12-05 14:06:58.931 ERROR cn.jwis.configration.clientUtil.ConfigCenterHelper[56]  null
2020-12-05 14:06:59.262 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 9304 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-05 14:06:59.263 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-05 14:06:59.264 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-05 14:07:00.758 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$25bf6eb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 14:07:00.832 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5f53b083] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 14:07:01.364 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-05 14:07:01.377 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-05 14:07:01.382 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-05 14:07:01.384 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-05 14:07:01.390 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-05 14:07:01.495 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-05 14:07:01.495 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 2187 ms
2020-12-05 14:07:01.534 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-05 14:07:01.539 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-05 14:07:01.539 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-05 14:07:01.539 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-05 14:07:01.540 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-05 14:07:03.859 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 14:07:04.343 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-05 14:07:04.359 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-05 14:07:04.377 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-05 14:07:04.729 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-05 14:07:05.133 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-05 14:07:05.139 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-05 14:07:05.147 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-05 14:07:05.153 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-05 14:07:05.161 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-05 14:07:05.167 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-05 14:07:05.175 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-05 14:07:05.183 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-05 14:07:05.190 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-05 14:07:05.196 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-05 14:07:05.204 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-05 14:07:05.241 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-05 14:07:05.261 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-05 14:07:05.283 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-05 14:07:05.304 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-05 14:07:05.314 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-05 14:07:05.324 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-05 14:07:05.340 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-05 14:07:05.373 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-05 14:07:05.438 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-05 14:07:05.455 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-05 14:07:05.480 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-05 14:07:05.552 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-05 14:07:05.672 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-05 14:07:05.681 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-05 14:07:05.715 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-05 14:07:05.735 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-05 14:07:05.776 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-05 14:07:05.796 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-05 14:07:05.804 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-05 14:07:05.807 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-05 14:07:05.809 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-05 14:07:05.815 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-05 14:07:05.817 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-05 14:07:05.834 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-05 14:07:05.841 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-05 14:07:05.847 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-05 14:07:05.853 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-05 14:07:05.859 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-05 14:07:05.865 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-05 14:07:05.872 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-05 14:07:05.884 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-05 14:07:05.892 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-05 14:07:05.899 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-05 14:07:05.917 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-05 14:07:05.963 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-05 14:07:05.991 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-05 14:07:06.029 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-05 14:07:06.034 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-05 14:07:06.042 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-05 14:07:06.053 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-05 14:07:06.056 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-05 14:07:06.065 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-05 14:07:06.069 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-05 14:07:06.073 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-05 14:07:06.087 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-05 14:07:06.091 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-05 14:07:06.105 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-05 14:07:06.113 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-05 14:07:06.122 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-05 14:07:06.135 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-05 14:07:06.166 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-05 14:07:06.180 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-05 14:07:06.201 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-05 14:07:06.210 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-05 14:07:06.242 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-05 14:07:06.248 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-05 14:07:06.360 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-05 14:07:06.388 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-05 14:07:06.393 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-05 14:07:06.412 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-05 14:07:06.453 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-05 14:07:06.485 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-05 14:07:06.488 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-05 14:07:06.505 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-05 14:07:06.528 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-05 14:07:06.551 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-05 14:07:06.562 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-05 14:07:06.566 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-05 14:07:06.574 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-05 14:07:06.578 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-05 14:07:06.582 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-05 14:07:06.591 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-05 14:07:06.711 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-05 14:07:06.763 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-05 14:07:06.833 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-05 14:07:06.837 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:07:06.843 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-05 14:07:06.859 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-05 14:07:06.864 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-05 14:07:06.867 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-05 14:07:06.877 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-05 14:07:06.881 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 7.948 seconds (JVM running for 24.825)
2020-12-05 14:07:07.068 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-05 14:07:07.075 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:07:07.096 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:07:07.133 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:07:07.133 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:07:07.134 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:07:07.163 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:07:07.163 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:07:07.163 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:07:07.163 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:07:07.164 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:07:07.173 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:07:07.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:07:07.180 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:07:07.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:07:07.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.184 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:07:07.184 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:07:07.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:07:07.191 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:07:07.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:07:07.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:07:07.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:07:07.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:07:07.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:07:07.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:07:07.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:07:07.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.214 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:07:07.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:07:07.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:07:07.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:07:07.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:07:07.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:07:07.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:07:07.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:07:07.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:07:07.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:07:07.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:07:07.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:07.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:07.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:07:07.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:07:12.241 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:07:12.241 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:07:12.252 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:07:12.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:07:12.254 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:07:12.260 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.261 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:07:12.261 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.273 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.273 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:07:12.282 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:07:12.296 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:07:12.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:07:12.305 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:07:12.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:07:12.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:07:12.329 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:07:12.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:07:12.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:07:12.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:07:12.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:07:12.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:07:12.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:07:12.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.377 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:07:12.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:07:12.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:07:12.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:07:12.391 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.392 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:07:12.392 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.392 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:07:12.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.401 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:07:12.401 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.401 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:07:12.408 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:07:12.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:07:12.414 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.414 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:07:12.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:07:12.415 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:07:12.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:07:12.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:07:12.421 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.503 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:07:12.503 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:07:12.504 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.504 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:07:12.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:07:12.505 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:07:12.507 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.507 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:07:12.512 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:07:12.514 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:07:12.515 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.515 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:07:12.525 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:07:12.736 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:07:12.736 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:07:12.737 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.737 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.737 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:07:12.737 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:07:12.739 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.740 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:07:12.744 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.745 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:07:12.745 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.745 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:07:12.745 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.758 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.776 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:07:12.777 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:07:12.777 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:07:12.777 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:07:12.777 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.777 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.777 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:07:12.777 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:07:12.777 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:07:12.786 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.787 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:07:12.786 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.789 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.789 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:07:12.797 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:07:12.807 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:07:12.808 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:07:12.808 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:07:12.815 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:07:12.817 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:07:12.837 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:07:12.840 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:07:12.841 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:07:12.841 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:07:12.842 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:07:12.842 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:07:12.848 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:07:12.851 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:07:12.852 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:07:12.852 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:07:12.861 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:07:12.867 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:07:12.868 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:07:12.868 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:07:12.878 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:07:12.879 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:07:12.879 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:07:12.889 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:07:13.095 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:07:13.095 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:07:13.095 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:07:13.833 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:07:13.852 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$2f67ea12.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:07:13.887 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$76d6f6ba.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:07:38.136 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 14:07:38.137 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-05 14:07:38.154 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 16 ms
2020-12-05 14:07:38.228 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 14:07:38.229 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 14:07:38.264 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 14:07:38.271 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 14:07:38.271 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 14:07:38.326 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 14:07:38.453 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 14:07:38.454 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:07:38.463 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 14:07:38.463 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 14:07:38.463 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:07:38.464 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 14:07:38.464 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 14:07:38.463 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:07:38.465 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:07:38.477 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 14:07:38.477 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 14:07:38.479 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 14:07:38.575 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 14:07:38.577 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 14:07:38.604 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 14:07:38.622 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 14:07:38.624 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 14:07:38.670 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 14:10:00.003 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 14:10:00.013 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 14:10:00.013 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 14:10:00.022 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 14:10:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 14:10:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 14:10:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 14:10:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 14:10:00.032 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 14:10:00.092 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 14:10:00.128 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:12:06.841 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:12:06.852 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:12:06.852 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:12:06.852 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:12:06.853 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:12:06.852 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:12:06.853 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:12:06.854 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:12:06.854 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:12:06.862 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:12:06.862 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:12:06.862 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:12:06.867 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:12:06.867 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.868 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:12:06.868 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:12:06.868 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.868 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:12:06.869 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:12:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:12:06.870 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:12:06.870 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:12:06.870 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:12:06.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:12:06.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:12:06.878 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:12:06.879 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:12:06.879 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:12:06.880 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:12:06.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.885 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.885 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:12:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.887 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.887 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:12:06.893 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.893 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:12:06.894 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.895 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.895 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:12:06.898 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.898 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:12:06.901 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.902 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.902 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:12:06.904 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.907 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:12:06.913 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.915 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.915 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:12:06.923 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:12:06.931 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.932 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.932 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:12:06.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:06.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:06.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:12:06.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:12:11.900 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:12:11.900 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:12:11.906 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:12:11.909 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:11.909 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:11.910 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:12:11.910 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:12:11.913 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:11.913 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:12:11.918 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:11.918 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:11.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:11.920 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:11.921 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:12:11.928 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:12:11.945 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:12:11.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:11.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:12:11.957 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:11.965 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:12:11.966 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:12:11.967 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:12:11.967 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:12:11.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:11.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:12:11.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:11.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:11.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:12:11.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.000 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:12:12.001 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:12:12.001 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.001 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:12:12.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:12:12.008 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.012 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:12:12.013 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.013 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:12:12.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.030 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:12:12.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:12:12.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.038 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:12:12.038 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.039 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:12:12.041 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:12:12.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:12:12.049 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:12:12.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.050 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:12:12.050 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:12:12.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.058 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:12:12.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.061 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:12:12.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:12:12.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:12:12.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.077 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:12:12.078 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.078 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:12:12.089 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:12:12.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:12:12.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:12:12.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.109 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:12:12.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:12:12.111 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:12:12.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:12:12.116 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:12:12.117 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.117 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:12:12.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:12:12.125 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:12:12.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:12:12.129 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:12:12.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:12:12.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:12:12.150 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:12:12.150 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.150 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:12:12.158 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.187 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:12:12.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:12:12.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:12:12.188 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.188 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:12:12.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:12:12.188 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:12:12.188 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:12:12.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:12:12.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:12:12.197 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.197 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:12:12.197 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.198 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:12:12.199 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:12:12.206 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:12:12.224 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:12:12.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:12:12.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:12:12.225 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:12:12.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:12:12.252 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:12:12.252 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:12:12.253 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:12:12.254 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:12:12.254 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:12:12.254 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:12:12.260 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:12:12.260 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:12:12.260 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:12:12.260 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:12:12.261 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:12:12.261 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:12:12.270 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:12:12.271 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:12:12.273 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:12:12.274 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:12:12.800 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$2f67ea12.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:12:12.891 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$76d6f6ba.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:12:12.949 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:17:06.844 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:17:06.851 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:17:06.852 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:17:06.853 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:17:06.853 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:17:06.854 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:17:06.853 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:17:06.855 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:17:06.855 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:17:06.863 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:17:06.864 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:17:06.864 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:17:06.866 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:17:06.867 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.867 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:17:06.868 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:17:06.868 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:17:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:17:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:17:06.875 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:17:06.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:17:06.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.876 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:17:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:17:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.878 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:17:06.885 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.885 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:17:06.885 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:17:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:17:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:17:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:17:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.886 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.887 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:17:06.892 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.896 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:17:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:17:06.899 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.899 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:17:06.905 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.905 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.906 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:17:06.909 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:17:06.919 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.919 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.919 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:17:06.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.926 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:17:06.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:17:06.943 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:06.944 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:06.944 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:17:06.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:17:11.900 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:17:11.900 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:17:11.908 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:11.909 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:17:11.910 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:11.911 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:17:11.911 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:17:11.924 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:11.924 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:17:11.925 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:11.925 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:11.935 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:11.935 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:11.935 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:17:11.948 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:17:11.952 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:17:11.960 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:11.960 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:17:11.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:11.982 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:17:11.982 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:17:11.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:17:11.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:17:11.983 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:11.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:17:11.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:11.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:11.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:17:11.998 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:17:11.998 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:11.998 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:17:12.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.004 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:17:12.006 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:17:12.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.026 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:17:12.027 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.027 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:17:12.027 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:17:12.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:17:12.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.040 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:17:12.040 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.041 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:17:12.049 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:17:12.049 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.049 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:17:12.056 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:17:12.056 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:17:12.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:17:12.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:17:12.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:17:12.079 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:17:12.079 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.079 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:17:12.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.090 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.096 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:17:12.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:17:12.101 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:17:12.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:17:12.107 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:17:12.108 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.108 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:17:12.109 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:17:12.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:17:12.117 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:17:12.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:17:12.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:17:12.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.129 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:17:12.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:17:12.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:17:12.139 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:17:12.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:17:12.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:17:12.147 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:17:12.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:17:12.158 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.158 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.158 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:17:12.166 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:17:12.177 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:17:12.178 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.178 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:17:12.184 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:17:12.184 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:17:12.184 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:17:12.187 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.187 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:17:12.193 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:17:12.195 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:17:12.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:17:12.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:17:12.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:17:12.210 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:17:12.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:17:12.210 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:17:12.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:17:12.218 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:17:12.218 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:17:12.218 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:17:12.228 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:17:12.230 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:17:12.243 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:17:12.244 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:17:12.244 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:17:12.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:17:12.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:17:12.271 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:17:12.271 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:17:12.278 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:17:12.278 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:17:12.280 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:17:12.291 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:17:12.293 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:17:12.963 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$2f67ea12.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:17:13.216 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:17:13.433 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$76d6f6ba.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:20:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 14:20:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 14:20:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 14:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 14:20:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 14:20:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 14:20:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 14:20:00.036 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 14:20:00.036 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 14:20:00.104 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 14:20:00.110 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:22:06.848 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:22:06.855 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:22:06.856 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:22:06.856 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:22:06.856 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:22:06.856 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:22:06.857 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:22:06.857 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:22:06.857 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:22:06.863 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:22:06.863 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:22:06.864 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:22:06.868 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:22:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.869 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:22:06.869 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:22:06.870 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:22:06.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:22:06.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:22:06.875 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:22:06.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:22:06.875 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:22:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:22:06.877 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:22:06.878 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.882 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:22:06.883 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:22:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:22:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:22:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:22:06.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:22:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:22:06.892 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.893 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:22:06.896 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:22:06.899 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.899 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.899 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:22:06.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:22:06.924 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.924 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.924 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:22:06.932 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.933 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:22:06.939 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.939 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.939 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:22:06.947 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:06.947 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:06.947 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:22:06.953 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:22:11.894 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:22:11.895 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:22:11.901 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:11.901 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:11.902 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:22:11.902 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:22:11.909 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:11.909 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:11.918 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:22:11.929 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:11.930 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:22:11.942 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:11.943 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:11.943 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:22:11.949 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:22:11.953 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:22:11.954 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:22:11.954 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:22:11.954 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:22:11.954 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:11.955 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:22:11.960 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:11.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:22:11.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:11.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:11.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:22:11.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:11.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:11.983 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:22:11.990 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:22:11.990 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:22:11.990 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:11.990 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:11.991 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:22:11.991 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:22:11.997 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:11.998 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:12.008 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:22:12.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:22:12.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.018 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:22:12.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.020 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:22:12.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:22:12.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:22:12.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:22:12.045 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:22:12.045 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.046 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:22:12.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.055 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:22:12.055 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.055 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:22:12.062 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:22:12.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:22:12.070 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.091 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:22:12.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.092 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:22:12.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:22:12.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:22:12.095 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:22:12.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:22:12.098 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:12.099 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:12.101 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:22:12.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:22:12.108 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:22:12.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:22:12.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.119 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:22:12.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:22:12.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.131 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:22:12.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:22:12.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:22:12.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:22:12.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.139 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:22:12.139 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.139 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:22:12.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:12.148 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.148 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:22:12.155 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:22:12.184 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:22:12.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:22:12.190 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:22:12.190 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:22:12.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:22:12.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:12.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:22:12.212 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:22:12.212 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:22:12.213 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:22:12.215 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:22:12.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:22:12.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:22:12.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:22:12.221 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:22:12.221 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:22:12.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:22:12.229 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:22:12.229 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:22:12.229 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:22:12.230 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:22:12.231 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:22:12.241 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:22:12.242 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:22:12.257 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:22:12.257 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:22:12.257 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:22:12.263 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:22:12.285 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:22:12.285 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:22:12.285 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:22:12.292 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:22:12.293 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:22:12.293 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:22:12.304 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:22:12.305 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:22:12.831 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$2f67ea12.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:22:12.844 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:22:13.054 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$76d6f6ba.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:27:06.851 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:27:06.906 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:27:06.907 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:27:06.908 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:27:06.909 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:27:06.909 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:27:06.910 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:27:06.910 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:27:06.910 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:27:06.917 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:27:06.917 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:27:06.920 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:27:06.920 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:27:06.921 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:27:06.927 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.928 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:27:06.929 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:27:06.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:27:06.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:27:06.929 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:27:06.930 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:27:06.931 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:27:06.931 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:27:06.945 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.946 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.946 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:27:06.948 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.948 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.949 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:27:06.949 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.950 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:27:06.950 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:27:06.950 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:27:06.950 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:27:06.953 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.956 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.957 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.957 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:27:06.963 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:27:06.965 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.966 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.966 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:27:06.966 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.966 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:27:06.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:27:06.981 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:27:06.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:27:06.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:06.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:06.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:27:07.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:07.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:07.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:27:07.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:07.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:07.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:27:07.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:27:11.968 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:27:11.968 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:27:11.974 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:27:11.975 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:11.975 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:11.976 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:27:11.976 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:27:11.979 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:11.980 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:27:11.982 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:11.982 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:11.985 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:11.987 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:11.987 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:27:11.996 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:27:12.016 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:27:12.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:27:12.026 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:27:12.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:27:12.029 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:27:12.029 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:27:12.029 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:27:12.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:27:12.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.053 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:27:12.056 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:27:12.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.056 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:27:12.056 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:27:12.060 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:27:12.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:27:12.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.068 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.068 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.093 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:27:12.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.094 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:27:12.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:27:12.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:27:12.097 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:27:12.097 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.097 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:27:12.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:27:12.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:27:12.103 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.103 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:27:12.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.109 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:27:12.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:27:12.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.120 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:27:12.121 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.121 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:27:12.128 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.128 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:27:12.128 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.128 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:27:12.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.138 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:27:12.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:27:12.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:27:12.145 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.145 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:27:12.147 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:27:12.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:27:12.153 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:27:12.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:27:12.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:27:12.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.185 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:27:12.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:27:12.192 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:27:12.192 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:27:12.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.192 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:27:12.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:27:12.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:27:12.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:27:12.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.201 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.201 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:27:12.209 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:27:12.224 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:27:12.224 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:27:12.224 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.224 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:27:12.224 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:27:12.224 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:27:12.227 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:27:12.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.232 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:27:12.233 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:27:12.247 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:27:12.247 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:27:12.247 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:27:12.251 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:27:12.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:27:12.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:27:12.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:27:12.261 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:27:12.262 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:27:12.262 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:27:12.273 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:27:12.274 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:27:12.288 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:27:12.288 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:27:12.288 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:27:12.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:27:12.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:27:12.318 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:27:12.318 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:27:12.325 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:27:12.326 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:27:12.326 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:27:12.340 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:27:12.341 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:27:12.847 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$2f67ea12.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:27:12.909 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:27:13.037 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$76d6f6ba.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:30:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 14:30:00.049 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 14:30:00.050 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 14:30:00.059 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 14:30:00.060 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 14:30:00.060 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 14:30:00.068 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 14:30:00.068 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 14:30:00.068 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 14:30:00.213 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 14:30:00.218 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:32:06.854 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:32:06.862 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:32:06.862 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:32:06.862 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:32:06.862 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:32:06.864 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:32:06.864 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:32:06.864 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:32:06.864 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:32:06.880 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:32:06.880 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:32:06.880 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:32:06.882 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:32:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.883 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:32:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:32:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.883 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:32:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:32:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:32:06.888 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:32:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:32:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:32:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.890 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:32:06.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:32:06.896 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:32:06.896 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:32:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:32:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:32:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:32:06.898 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.898 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:32:06.907 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.909 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:32:06.912 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:32:06.914 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.915 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:32:06.915 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.915 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.915 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:32:06.920 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.922 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.922 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.922 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:32:06.928 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.928 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.928 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:32:06.936 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.937 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:32:06.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:32:06.948 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:06.948 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:06.948 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:32:06.954 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:32:11.912 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:32:11.912 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:32:11.920 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:32:11.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:11.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:32:11.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:11.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:32:11.926 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:11.926 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:32:11.930 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:11.930 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:11.934 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:11.934 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:11.934 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:32:11.942 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:32:11.955 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:32:11.963 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:11.963 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:32:11.970 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:32:11.971 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:32:11.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:11.971 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:32:11.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:11.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:32:11.973 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:32:11.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:11.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:11.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:32:11.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:11.998 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:32:11.998 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:32:11.998 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:11.999 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:32:12.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:32:12.007 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.007 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.016 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:32:12.016 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.016 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:32:12.025 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.029 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:32:12.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:32:12.031 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:32:12.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:32:12.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.038 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:32:12.039 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.039 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:32:12.047 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:32:12.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:32:12.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.084 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:32:12.084 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:32:12.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.084 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:32:12.085 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:32:12.090 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:32:12.090 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.090 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:32:12.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:32:12.101 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:32:12.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:32:12.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.111 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:32:12.112 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:32:12.112 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:32:12.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:32:12.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:32:12.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.124 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:32:12.124 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.124 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:32:12.132 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.144 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:32:12.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:32:12.147 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:32:12.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:32:12.152 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:32:12.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:32:12.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:32:12.154 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.154 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.154 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:32:12.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.164 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:32:12.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:32:12.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.178 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:32:12.178 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:32:12.178 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:32:12.190 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:32:12.190 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:32:12.191 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:32:12.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:32:12.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:32:12.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.292 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:32:12.293 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:32:12.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:32:12.300 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:32:12.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.301 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:32:12.301 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:32:12.309 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:32:12.310 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:32:12.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:32:12.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:32:12.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:32:12.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:32:12.359 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:32:12.360 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:32:12.360 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:32:12.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:32:12.395 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:32:12.396 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:32:12.397 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:32:12.403 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:32:12.403 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:32:12.404 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:32:12.421 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:32:12.422 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:32:12.868 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:32:12.893 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$2f67ea12.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:32:13.083 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$76d6f6ba.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:35:39.876 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 14:35:39.880 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 14:35:55.582 ERROR cn.jwis.configration.clientUtil.HttpClientUtil[77]  send Http Request to:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties ,has errors:Connect to 10.159.65.221:14200 [/10.159.65.221] failed: connect timed out
2020-12-05 14:35:55.584 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :
2020-12-05 14:35:55.623 ERROR cn.jwis.configration.clientUtil.ConfigCenterHelper[56]  null
2020-12-05 14:35:55.927 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 1964 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-05 14:35:55.928 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-05 14:35:55.929 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-05 14:35:57.422 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$366d8abb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 14:35:57.492 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7001cc8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 14:35:58.024 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-05 14:35:58.036 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-05 14:35:58.042 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-05 14:35:58.043 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-05 14:35:58.049 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-05 14:35:58.155 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-05 14:35:58.155 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 2190 ms
2020-12-05 14:35:58.194 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-05 14:35:58.199 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-05 14:35:58.199 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-05 14:35:58.200 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-05 14:35:58.201 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-05 14:36:00.469 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 14:36:00.947 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-05 14:36:00.961 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-05 14:36:00.978 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-05 14:36:01.327 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-05 14:36:01.730 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-05 14:36:01.736 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-05 14:36:01.744 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-05 14:36:01.749 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-05 14:36:01.757 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-05 14:36:01.763 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-05 14:36:01.771 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-05 14:36:01.778 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-05 14:36:01.784 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-05 14:36:01.791 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-05 14:36:01.798 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-05 14:36:01.836 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-05 14:36:01.855 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-05 14:36:01.878 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-05 14:36:01.899 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-05 14:36:01.908 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-05 14:36:01.915 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-05 14:36:01.931 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-05 14:36:01.962 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-05 14:36:02.026 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-05 14:36:02.043 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-05 14:36:02.067 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-05 14:36:02.140 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-05 14:36:02.259 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-05 14:36:02.269 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-05 14:36:02.302 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-05 14:36:02.321 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-05 14:36:02.360 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-05 14:36:02.380 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-05 14:36:02.388 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-05 14:36:02.391 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-05 14:36:02.393 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-05 14:36:02.398 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-05 14:36:02.402 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-05 14:36:02.419 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-05 14:36:02.425 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-05 14:36:02.431 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-05 14:36:02.437 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-05 14:36:02.443 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-05 14:36:02.449 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-05 14:36:02.456 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-05 14:36:02.468 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-05 14:36:02.476 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-05 14:36:02.482 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-05 14:36:02.500 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-05 14:36:02.546 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-05 14:36:02.573 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-05 14:36:02.611 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-05 14:36:02.616 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-05 14:36:02.624 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-05 14:36:02.636 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-05 14:36:02.639 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-05 14:36:02.647 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-05 14:36:02.651 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-05 14:36:02.656 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-05 14:36:02.669 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-05 14:36:02.673 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-05 14:36:02.688 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-05 14:36:02.695 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-05 14:36:02.704 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-05 14:36:02.736 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-05 14:36:02.766 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-05 14:36:02.781 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-05 14:36:02.807 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-05 14:36:02.816 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-05 14:36:02.848 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-05 14:36:02.853 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-05 14:36:02.951 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-05 14:36:02.979 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-05 14:36:02.984 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-05 14:36:03.003 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-05 14:36:03.044 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-05 14:36:03.076 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-05 14:36:03.079 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-05 14:36:03.096 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-05 14:36:03.120 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-05 14:36:03.143 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-05 14:36:03.154 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-05 14:36:03.158 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-05 14:36:03.166 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-05 14:36:03.170 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-05 14:36:03.174 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-05 14:36:03.184 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-05 14:36:03.304 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-05 14:36:03.356 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-05 14:36:03.425 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-05 14:36:03.430 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:36:03.435 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-05 14:36:03.448 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-05 14:36:03.451 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-05 14:36:03.454 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-05 14:36:03.464 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-05 14:36:03.467 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 7.843 seconds (JVM running for 24.645)
2020-12-05 14:36:03.641 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-05 14:36:03.650 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:36:03.680 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:36:03.706 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:36:03.708 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:36:03.715 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:36:03.718 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:36:03.718 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:36:03.730 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:36:03.731 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:36:03.732 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:36:03.741 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:36:03.742 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:36:03.744 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:36:03.744 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:36:03.745 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.745 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:36:03.759 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:36:03.759 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.760 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.760 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:36:03.760 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.760 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:36:03.766 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.766 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:36:03.767 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:36:03.768 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:36:03.776 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:36:03.777 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.777 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.777 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.778 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:36:03.778 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:36:03.784 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.784 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:36:03.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:36:03.788 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:36:03.792 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:36:03.792 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:36:03.793 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.794 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.795 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.796 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:36:03.802 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.803 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.803 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:36:03.807 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:36:03.809 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.810 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.811 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:36:03.818 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.819 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.819 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:36:03.825 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.826 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:36:03.832 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.832 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.833 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.833 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:36:03.845 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:03.846 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:03.846 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:36:03.857 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:36:08.820 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:36:08.820 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:36:08.834 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.835 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:36:08.835 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:36:08.835 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.836 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:36:08.846 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.847 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:36:08.850 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:08.850 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:08.857 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:08.857 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.858 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:36:08.859 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:36:08.859 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.859 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:36:08.865 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:36:08.867 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:08.913 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:36:08.913 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:36:08.913 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:36:08.913 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:36:08.913 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:36:08.913 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.913 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.914 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:36:08.914 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:36:08.924 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:08.925 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:08.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.925 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:36:08.930 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:08.939 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:36:08.946 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.946 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:36:08.953 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:36:08.953 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:36:08.952 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:08.953 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.953 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.953 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:36:08.954 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:36:08.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:08.961 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:08.981 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:36:08.981 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.981 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:36:08.988 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:36:08.989 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.989 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:36:08.990 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:36:08.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:36:08.991 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:36:08.991 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:08.991 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:36:08.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:08.997 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:08.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:08.997 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:36:08.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:36:09.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:09.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:36:09.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:09.018 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:36:09.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:36:09.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:36:09.029 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:36:09.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.032 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:36:09.034 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:36:09.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.035 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:36:09.043 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:09.046 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:36:09.047 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.047 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:36:09.055 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:36:09.056 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:36:09.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:36:09.251 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:36:09.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:36:09.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:36:09.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:36:09.260 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:09.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:36:09.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:09.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:09.275 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:36:09.276 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:36:09.276 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:36:09.284 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:36:09.284 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:36:09.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:36:09.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:36:09.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:36:09.291 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:09.292 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.292 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:36:09.294 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:09.298 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:36:09.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:36:09.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:36:09.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:36:09.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:36:09.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:36:09.354 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:36:09.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:36:09.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:36:09.358 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:36:09.358 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:36:09.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:36:09.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:36:09.374 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:36:09.374 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:36:09.374 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:36:09.384 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:36:09.393 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:36:09.394 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:36:09.394 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:36:09.400 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:36:09.400 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:36:09.401 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:36:09.415 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:36:09.589 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:36:09.589 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:36:09.589 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:36:10.305 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:36:10.311 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$a57b7c9d.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:36:10.349 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$ecea8945.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:36:59.534 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 14:36:59.536 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-05 14:36:59.554 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 17 ms
2020-12-05 14:36:59.640 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 14:36:59.641 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 14:36:59.683 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 14:36:59.689 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 14:36:59.690 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 14:36:59.743 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 14:36:59.874 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 14:36:59.875 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:36:59.882 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 14:36:59.882 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 14:36:59.883 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:36:59.883 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 14:36:59.883 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:36:59.885 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:36:59.885 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 14:36:59.893 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 14:36:59.893 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 14:36:59.893 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 14:37:00.043 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 14:37:00.044 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 14:37:00.079 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 14:37:00.092 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 14:37:00.092 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 14:37:00.132 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 14:37:00.168 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 14:37:00.169 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 14:37:00.179 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 14:37:50.526 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 14:37:50.531 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 14:38:06.195 ERROR cn.jwis.configration.clientUtil.HttpClientUtil[77]  send Http Request to:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties ,has errors:Connect to 10.159.65.221:14200 [/10.159.65.221] failed: connect timed out
2020-12-05 14:38:06.196 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :
2020-12-05 14:38:06.235 ERROR cn.jwis.configration.clientUtil.ConfigCenterHelper[56]  null
2020-12-05 14:38:06.548 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 8768 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-05 14:38:06.550 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-05 14:38:06.551 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-05 14:38:08.046 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$a30758a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 14:38:08.117 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dc9b9a77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 14:38:08.649 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-05 14:38:08.660 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-05 14:38:08.666 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-05 14:38:08.667 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-05 14:38:08.673 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-05 14:38:08.778 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-05 14:38:08.779 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 2191 ms
2020-12-05 14:38:08.817 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-05 14:38:08.821 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-05 14:38:08.822 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-05 14:38:08.822 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-05 14:38:08.823 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-05 14:38:11.057 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 14:38:11.541 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-05 14:38:11.555 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-05 14:38:11.573 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-05 14:38:11.922 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-05 14:38:12.319 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-05 14:38:12.326 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-05 14:38:12.334 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-05 14:38:12.340 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-05 14:38:12.349 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-05 14:38:12.356 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-05 14:38:12.364 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-05 14:38:12.371 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-05 14:38:12.378 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-05 14:38:12.385 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-05 14:38:12.393 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-05 14:38:12.435 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-05 14:38:12.456 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-05 14:38:12.480 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-05 14:38:12.503 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-05 14:38:12.513 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-05 14:38:12.521 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-05 14:38:12.538 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-05 14:38:12.573 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-05 14:38:12.644 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-05 14:38:12.662 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-05 14:38:12.688 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-05 14:38:12.774 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-05 14:38:12.930 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-05 14:38:12.939 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-05 14:38:12.974 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-05 14:38:12.994 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-05 14:38:13.032 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-05 14:38:13.052 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-05 14:38:13.060 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-05 14:38:13.063 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-05 14:38:13.065 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-05 14:38:13.070 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-05 14:38:13.073 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-05 14:38:13.094 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-05 14:38:13.100 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-05 14:38:13.106 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-05 14:38:13.112 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-05 14:38:13.118 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-05 14:38:13.125 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-05 14:38:13.131 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-05 14:38:13.143 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-05 14:38:13.151 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-05 14:38:13.157 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-05 14:38:13.175 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-05 14:38:13.223 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-05 14:38:13.252 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-05 14:38:13.288 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-05 14:38:13.294 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-05 14:38:13.301 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-05 14:38:13.312 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-05 14:38:13.315 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-05 14:38:13.323 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-05 14:38:13.326 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-05 14:38:13.331 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-05 14:38:13.343 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-05 14:38:13.346 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-05 14:38:13.360 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-05 14:38:13.368 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-05 14:38:13.376 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-05 14:38:13.389 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-05 14:38:13.421 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-05 14:38:13.437 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-05 14:38:13.457 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-05 14:38:13.466 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-05 14:38:13.497 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-05 14:38:13.504 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-05 14:38:13.600 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-05 14:38:13.628 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-05 14:38:13.633 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-05 14:38:13.652 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-05 14:38:13.694 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-05 14:38:13.726 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-05 14:38:13.729 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-05 14:38:13.746 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-05 14:38:13.770 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-05 14:38:13.792 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-05 14:38:13.803 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-05 14:38:13.807 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-05 14:38:13.815 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-05 14:38:13.819 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-05 14:38:13.823 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-05 14:38:13.833 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-05 14:38:13.952 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-05 14:38:14.003 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-05 14:38:14.071 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-05 14:38:14.075 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:38:14.078 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-05 14:38:14.091 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-05 14:38:14.096 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-05 14:38:14.098 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-05 14:38:14.109 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-05 14:38:14.112 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 7.876 seconds (JVM running for 24.682)
2020-12-05 14:38:14.294 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-05 14:38:14.301 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:38:14.325 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:38:14.395 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:38:14.398 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:38:14.398 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:38:14.408 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:38:14.408 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:38:14.409 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:38:14.414 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:38:14.414 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:38:14.422 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:38:14.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:38:14.424 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:38:14.425 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.425 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:38:14.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.432 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:38:14.432 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:38:14.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:38:14.438 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:38:14.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:38:14.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:38:14.441 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:38:14.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:38:14.449 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:38:14.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:38:14.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.455 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.455 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:38:14.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.459 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:38:14.460 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:38:14.460 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:38:14.464 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.464 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:38:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:38:14.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:38:14.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:38:14.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.488 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:38:14.494 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.494 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.495 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.495 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:38:14.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:38:14.512 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:38:14.521 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:14.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:14.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:38:14.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:38:19.486 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:38:19.486 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:38:19.494 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:38:19.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.496 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:38:19.496 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:38:19.503 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.503 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.504 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:38:19.506 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.516 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.517 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.517 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:38:19.527 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:38:19.530 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:38:19.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:38:19.538 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.570 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:38:19.570 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:38:19.570 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:38:19.570 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:38:19.570 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:38:19.570 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.570 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.571 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:38:19.571 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:38:19.578 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.579 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.579 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:38:19.579 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.585 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.592 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:38:19.599 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.600 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:38:19.607 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:38:19.607 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.608 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:38:19.619 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:38:19.620 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.622 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:38:19.623 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.629 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.654 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:38:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:38:19.661 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:38:19.661 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:38:19.661 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.661 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.661 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:38:19.661 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:38:19.665 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.666 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.667 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.667 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:38:19.668 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:38:19.669 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.669 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:38:19.676 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.677 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:38:19.683 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:38:19.685 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:38:19.685 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.686 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:38:19.692 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:38:19.692 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.698 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:38:19.698 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.699 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:38:19.708 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.717 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:38:19.718 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.719 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:38:19.723 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:38:19.723 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.724 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:38:19.725 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:38:19.725 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:38:19.726 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.726 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:38:19.730 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:38:19.731 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.731 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:38:19.740 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.740 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:38:19.741 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.741 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:38:19.745 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:38:19.746 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:38:19.746 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:38:19.746 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.747 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:38:19.749 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.753 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.753 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:38:19.771 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:38:19.771 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:38:19.772 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.772 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.772 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:38:19.772 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:38:19.779 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.779 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.779 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.780 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:38:19.788 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:38:19.797 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:38:19.798 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:38:19.798 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:38:19.805 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:38:19.812 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:38:19.830 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:38:19.831 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:38:19.831 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:38:19.832 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:38:19.836 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:38:19.836 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:38:19.837 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:38:19.848 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:38:19.848 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:38:19.849 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:38:19.855 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:38:19.861 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:38:19.861 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:38:19.861 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:38:19.868 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:38:19.869 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:38:19.869 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:38:19.881 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:38:20.272 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:38:20.272 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:38:20.273 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:38:21.040 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:38:21.043 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:38:21.203 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:38:21.504 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 14:38:21.505 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-05 14:38:21.526 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 21 ms
2020-12-05 14:38:21.605 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 14:38:21.606 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 14:38:21.646 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 14:38:21.652 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 14:38:21.653 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 14:38:21.694 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 14:38:21.857 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 14:38:21.859 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:38:21.863 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 14:38:21.864 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:38:21.867 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 14:38:21.867 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 14:38:21.869 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:38:21.869 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 14:38:21.869 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 14:38:21.880 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 14:38:21.881 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 14:38:21.881 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 14:38:21.979 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 14:38:21.981 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 14:38:22.008 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 14:38:22.024 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 14:38:22.025 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 14:38:22.068 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 14:40:00.002 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 14:40:00.069 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 14:40:00.069 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 14:40:00.079 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 14:40:00.079 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 14:40:00.080 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 14:40:00.086 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 14:40:00.087 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 14:40:00.087 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 14:40:00.148 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 14:40:00.184 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:43:14.079 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:43:14.087 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:43:14.087 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:43:14.087 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:43:14.088 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:43:14.087 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:43:14.087 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:43:14.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:43:14.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:43:14.095 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:43:14.095 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:43:14.095 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:43:14.100 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:43:14.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:43:14.104 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:43:14.104 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:43:14.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:43:14.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:43:14.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:43:14.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:43:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:43:14.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:43:14.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.112 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:43:14.113 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:43:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:43:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:43:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:43:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:43:14.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:43:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:43:14.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:43:14.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:43:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:43:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:43:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:43:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:43:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:43:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:43:14.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:43:19.138 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:43:19.138 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:43:19.138 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:43:19.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:43:19.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:43:19.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:43:19.155 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.156 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.156 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.156 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.156 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:43:19.166 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:43:19.184 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:43:19.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:43:19.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:43:19.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:43:19.201 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:43:19.201 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:43:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:43:19.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:43:19.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.232 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:43:19.232 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:43:19.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:43:19.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:43:19.242 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:43:19.242 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.242 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:43:19.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:43:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:43:19.293 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:43:19.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:43:19.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:43:19.296 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:43:19.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:43:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.305 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:43:19.306 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.306 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:43:19.314 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:43:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:43:19.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:43:19.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:43:19.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:43:19.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:43:19.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.388 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.388 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:43:19.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:43:19.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:43:19.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:43:19.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:43:19.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:43:19.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:43:19.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:43:19.421 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.421 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:43:19.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.426 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.426 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:43:19.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:43:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:43:19.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.604 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:43:19.604 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:43:19.604 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:43:19.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.604 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.604 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:43:19.604 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:43:19.604 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:43:19.611 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:43:19.611 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.612 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.612 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.612 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:43:19.622 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:43:19.636 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:43:19.637 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:43:19.637 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:43:19.643 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:43:19.694 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:43:19.695 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:43:19.695 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:43:19.700 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:43:19.703 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:43:19.704 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:43:19.704 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:43:19.704 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:43:19.705 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:43:19.711 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:43:19.723 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:43:19.723 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:43:19.724 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:43:19.730 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:43:19.730 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:43:19.730 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:43:19.736 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:43:19.736 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:43:19.736 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:43:19.739 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:43:19.739 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:43:19.740 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:43:19.745 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:43:19.746 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:43:19.754 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:43:19.756 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:43:20.330 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:43:20.349 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:43:20.412 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:48:14.082 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:48:14.088 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:48:14.088 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:48:14.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:48:14.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:48:14.090 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:48:14.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:48:14.091 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:48:14.091 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:48:14.098 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:48:14.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:48:14.102 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:48:14.102 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:48:14.102 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:48:14.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.103 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:48:14.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:48:14.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:48:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:48:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:48:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.114 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:48:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:48:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:48:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:48:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:48:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:48:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:48:14.127 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:48:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:48:14.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:48:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:48:14.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:48:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:48:14.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:48:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:48:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:48:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:48:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:48:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:48:19.135 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:48:19.135 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:48:19.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:48:19.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:48:19.150 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:48:19.152 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.152 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.157 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.157 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:48:19.163 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.163 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.163 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:48:19.179 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:48:19.182 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:48:19.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:48:19.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.201 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:48:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:48:19.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:48:19.202 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:48:19.206 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:48:19.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:48:19.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.227 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:48:19.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:48:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:48:19.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:48:19.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.236 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:48:19.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.238 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.238 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:48:19.246 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:48:19.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:48:19.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.295 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:48:19.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:48:19.299 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:48:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:48:19.301 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:48:19.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:48:19.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:48:19.304 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.304 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:48:19.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:48:19.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.311 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:48:19.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:48:19.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:48:19.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:48:19.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.333 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:48:19.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:48:19.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:48:19.341 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.345 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:48:19.346 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.346 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:48:19.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:48:19.357 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.357 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:48:19.365 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:48:19.365 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:48:19.365 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:48:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:48:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:48:19.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:48:19.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:48:19.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:48:19.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.402 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:48:19.402 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.403 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:48:19.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:48:19.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:48:19.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:48:19.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:48:19.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.409 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:48:19.409 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:48:19.415 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:48:19.416 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:48:19.416 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.417 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:48:19.500 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:48:19.500 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:48:19.500 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:48:19.501 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:48:19.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:48:19.523 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:48:19.523 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:48:19.523 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:48:19.530 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:48:19.531 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:48:19.531 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:48:19.535 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:48:19.535 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:48:19.535 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:48:19.538 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:48:19.539 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:48:19.541 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:48:19.601 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:48:19.601 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:48:19.601 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:48:19.609 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:48:19.610 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:48:19.611 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:48:19.621 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:48:19.623 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:48:20.069 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:48:20.125 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:48:20.265 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:50:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 14:50:00.726 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 14:50:00.726 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 14:50:00.733 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 14:50:00.733 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 14:50:00.734 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 14:50:00.743 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 14:50:00.743 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 14:50:00.743 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 14:50:00.810 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 14:50:00.816 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:53:14.085 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:53:14.092 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:53:14.092 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:53:14.092 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:53:14.092 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:53:14.093 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:53:14.093 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:53:14.093 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:53:14.093 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:53:14.102 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:53:14.102 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:53:14.102 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:53:14.104 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:53:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:53:14.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:53:14.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:53:14.110 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:53:14.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:53:14.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:53:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:53:14.116 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:53:14.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:53:14.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:53:14.117 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:53:14.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:53:14.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:53:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:53:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:53:14.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:53:14.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:53:14.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:53:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:53:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:53:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:53:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:53:14.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:53:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:53:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:53:14.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:53:19.133 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:53:19.134 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:53:19.141 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.141 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:53:19.141 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.142 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:53:19.143 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:53:19.148 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.149 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:53:19.149 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.150 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.156 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.156 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.157 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:53:19.165 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:53:19.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:53:19.191 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:53:19.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:53:19.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:53:19.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:53:19.196 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:53:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:53:19.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:53:19.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:53:19.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:53:19.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.229 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:53:19.229 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.229 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:53:19.234 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:53:19.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:53:19.237 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.241 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.256 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:53:19.256 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.258 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:53:19.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:53:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:53:19.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:53:19.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:53:19.265 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:53:19.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.266 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.266 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:53:19.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:53:19.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.275 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:53:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:53:19.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.309 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:53:19.309 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:53:19.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:53:19.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.311 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:53:19.315 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.321 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:53:19.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:53:19.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:53:19.331 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.332 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:53:19.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:53:19.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:53:19.338 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:53:19.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:53:19.340 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:53:19.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:53:19.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:53:19.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:53:19.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:53:19.371 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.371 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:53:19.380 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.399 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:53:19.399 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.400 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:53:19.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:53:19.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:53:19.407 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:53:19.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:53:19.407 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.408 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:53:19.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:53:19.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:53:19.417 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:53:19.418 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:53:19.507 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:53:19.507 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:53:19.507 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:53:19.508 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:53:19.510 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:53:19.511 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:53:19.511 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:53:19.516 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:53:19.517 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:53:19.517 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:53:19.602 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:53:19.602 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:53:19.603 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:53:19.605 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:53:19.605 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:53:19.605 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:53:19.612 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:53:19.612 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:53:19.612 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:53:19.617 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:53:19.618 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:53:19.618 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:53:19.622 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:53:19.623 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:53:19.628 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:53:19.629 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:53:20.079 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:53:20.235 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:53:20.268 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:58:14.089 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 14:58:14.096 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 14:58:14.097 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:58:14.097 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 14:58:14.097 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:58:14.098 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 14:58:14.098 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 14:58:14.098 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 14:58:14.098 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 14:58:14.104 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 14:58:14.104 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 14:58:14.104 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 14:58:14.112 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 14:58:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 14:58:14.115 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 14:58:14.116 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 14:58:14.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 14:58:14.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 14:58:14.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 14:58:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 14:58:14.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 14:58:14.124 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 14:58:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 14:58:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 14:58:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 14:58:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 14:58:14.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 14:58:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 14:58:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 14:58:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 14:58:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 14:58:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 14:58:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 14:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 14:58:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 14:58:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 14:58:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:58:14.359 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 14:58:14.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:14.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 14:58:14.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.152 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:58:19.152 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:58:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:58:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:58:19.172 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:58:19.180 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:58:19.182 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:58:19.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 14:58:19.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.216 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:58:19.219 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:58:19.219 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 14:58:19.250 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:58:19.250 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:58:19.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:58:19.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 14:58:19.258 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:58:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 14:58:19.293 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:58:19.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:58:19.303 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:58:19.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.304 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.304 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:58:19.317 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:58:19.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 14:58:19.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:58:19.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 14:58:19.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.334 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 14:58:19.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:58:19.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 14:58:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 14:58:19.363 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 14:58:19.363 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.364 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 14:58:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:58:19.367 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 14:58:19.373 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 14:58:19.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:58:19.375 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.375 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:58:19.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.388 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 14:58:19.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.389 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 14:58:19.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 14:58:19.405 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:58:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 14:58:19.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:58:19.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:58:19.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.417 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.417 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 14:58:19.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 14:58:19.421 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 14:58:19.421 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:58:19.422 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:58:19.425 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.428 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 14:58:19.433 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:58:19.434 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 14:58:19.614 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:58:19.614 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.615 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:58:19.615 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 14:58:19.624 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 14:58:19.638 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 14:58:19.639 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 14:58:19.645 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:58:19.645 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.645 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 14:58:19.653 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 14:58:19.654 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.654 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:58:19.654 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:58:19.654 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.654 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 14:58:19.668 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:58:19.668 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.669 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 14:58:19.688 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:58:19.688 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.689 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:58:19.695 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.718 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:58:19.718 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.718 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 14:58:19.724 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.725 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.725 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 14:58:19.738 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.758 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 14:58:19.758 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.758 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 14:58:19.767 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.790 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 14:58:19.791 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 14:58:19.791 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 14:58:19.805 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 14:58:19.829 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 14:58:19.830 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 14:58:19.830 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 14:58:19.837 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 14:58:19.858 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 14:58:19.859 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 14:58:19.859 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 14:58:19.866 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 14:58:19.867 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 14:58:19.867 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 14:58:19.880 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 14:58:19.881 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 14:58:20.052 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:58:20.343 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 14:58:20.543 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:00:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 15:00:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 15:00:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 15:00:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 15:00:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 15:00:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 15:00:00.046 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 15:00:00.046 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 15:00:00.046 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 15:00:00.110 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 15:00:00.115 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:03:14.092 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:03:14.098 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:03:14.099 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:03:14.100 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:03:14.100 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:03:14.100 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:03:14.101 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:03:14.101 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:03:14.101 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:03:14.109 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:03:14.109 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:03:14.109 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:03:14.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.110 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:03:14.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:03:14.112 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:03:14.112 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:03:14.117 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:03:14.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:03:14.118 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:03:14.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:03:14.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:03:14.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:03:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:03:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:03:14.129 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:03:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:03:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:03:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:03:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:03:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:03:14.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:03:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:03:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:03:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:03:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:03:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:03:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:03:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:03:14.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:03:20.226 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:03:20.226 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:03:20.226 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:03:20.226 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:03:20.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:03:20.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:03:20.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:03:20.236 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.236 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:03:20.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.244 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:03:20.254 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:03:20.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:03:20.301 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:03:20.301 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:03:20.301 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:03:20.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.302 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:03:20.302 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:03:20.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:03:20.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:03:20.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:03:20.332 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.332 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:03:20.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:03:20.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:03:20.347 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:03:20.347 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.348 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:03:20.354 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.354 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.419 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:03:20.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:03:20.420 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:03:20.420 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:03:20.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:03:20.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:03:20.427 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:03:20.428 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.428 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:03:20.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.428 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:03:20.437 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:03:20.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:03:20.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.456 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:03:20.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:03:20.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:03:20.465 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:03:20.465 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.465 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:03:20.475 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.509 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:03:20.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:03:20.512 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:03:20.512 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:03:20.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:03:20.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:03:20.517 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:03:20.517 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.518 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:03:20.523 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.523 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:03:20.523 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.523 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:03:20.526 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:03:20.528 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:03:20.535 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.548 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:03:20.548 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:03:20.548 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:03:20.556 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:03:20.558 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:03:20.558 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:03:20.558 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.559 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:03:20.562 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:03:20.562 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.563 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:03:20.568 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.571 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.571 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.572 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:03:20.580 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:03:20.591 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:03:20.591 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:03:20.591 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:03:20.602 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:03:20.608 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:03:20.629 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:03:20.629 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:03:20.629 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:03:20.630 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:03:20.629 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:03:20.630 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:03:20.639 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:03:20.639 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:03:20.640 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:03:20.640 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:03:20.648 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:03:20.649 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:03:20.664 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:03:20.665 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:03:20.666 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:03:20.680 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:03:20.681 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:03:20.681 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:03:20.692 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:03:20.693 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:03:21.238 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:03:21.312 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:03:21.431 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:08:14.095 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:08:14.104 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:08:14.104 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:08:14.104 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:08:14.104 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:08:14.105 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:08:14.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:08:14.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:08:14.105 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:08:14.114 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:08:14.114 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:08:14.114 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:08:14.118 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:08:14.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:08:14.121 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:08:14.121 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:08:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:08:14.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:08:14.122 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:08:14.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:08:14.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:08:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:08:14.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:08:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:08:14.138 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:08:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:08:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:08:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:08:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:08:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:08:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:08:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:08:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:08:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:08:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:08:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:08:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:08:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:08:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:08:19.155 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:08:19.155 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:08:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.165 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.166 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:08:19.166 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:08:19.166 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:08:19.171 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.171 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:08:19.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.184 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.185 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:08:19.194 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:08:19.207 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:08:19.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:08:19.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.240 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:08:19.241 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:08:19.241 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:08:19.242 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:08:19.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:08:19.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:08:19.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.268 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:08:19.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:08:19.269 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:08:19.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:08:19.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:08:19.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:08:19.316 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:08:19.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:08:19.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:08:19.319 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:08:19.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:08:19.328 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.328 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:08:19.336 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:08:19.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:08:19.342 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:08:19.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:08:19.345 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:08:19.345 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.345 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:08:19.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:08:19.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.410 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:08:19.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:08:19.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:08:19.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:08:19.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:08:19.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:08:19.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:08:19.418 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.418 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:08:19.423 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:08:19.424 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.426 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:08:19.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:08:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.517 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:08:19.517 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:08:19.517 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:08:19.517 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.517 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:08:19.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:08:19.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:08:19.525 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:08:19.525 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.526 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.526 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:08:19.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:08:19.535 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:08:19.535 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.549 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:08:19.549 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:08:19.550 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:08:19.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:08:19.561 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:08:19.632 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:08:19.634 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:08:19.634 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.634 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:08:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.669 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:08:19.669 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:08:19.669 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:08:19.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:08:19.676 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:08:19.676 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:08:19.679 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:08:19.680 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:08:19.680 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:08:19.683 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:08:19.688 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:08:19.689 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:08:19.715 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:08:19.715 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:08:19.715 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:08:19.723 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:08:19.743 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:08:19.744 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:08:19.744 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:08:19.752 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:08:19.753 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:08:19.753 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:08:19.762 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:08:19.763 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:08:20.214 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:08:20.273 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:08:20.470 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:10:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 15:10:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 15:10:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 15:10:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 15:10:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 15:10:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 15:10:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 15:10:00.034 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 15:10:00.036 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 15:10:00.096 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 15:10:00.101 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:13:14.098 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:13:14.106 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:13:14.106 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:13:14.106 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:13:14.106 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:13:14.106 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:13:14.106 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:13:14.108 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:13:14.108 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:13:14.115 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:13:14.115 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:13:14.115 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:13:14.117 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:13:14.118 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:13:14.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:13:14.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:13:14.122 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:13:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:13:14.123 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:13:14.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:13:14.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:13:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:13:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:13:14.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:13:14.134 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:13:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:13:14.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:13:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:13:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:13:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:13:14.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:13:14.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:13:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:13:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:13:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:13:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:13:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:13:14.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:14.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:14.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:13:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:13:19.152 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:13:19.152 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:13:19.158 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:13:19.160 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.160 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:13:19.160 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:13:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.164 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:13:19.199 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:13:19.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:13:19.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.231 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:13:19.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.246 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:13:19.284 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:13:19.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:13:19.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:13:19.286 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:13:19.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:13:19.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:13:19.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:13:19.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:13:19.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:13:19.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:13:19.317 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:13:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:13:19.322 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:13:19.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:13:19.324 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.356 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:13:19.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:13:19.357 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:13:19.357 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:13:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.357 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:13:19.357 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:13:19.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:13:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:13:19.365 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.366 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:13:19.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.373 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:13:19.375 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.375 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:13:19.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.609 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:13:19.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.610 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:13:19.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:13:19.610 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.610 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:13:19.615 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:13:19.615 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.615 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:13:19.617 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:13:19.625 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:13:19.625 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.626 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:13:19.635 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:13:19.638 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.638 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:13:19.639 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:13:19.640 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.640 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:13:19.646 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.646 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.646 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.647 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:13:19.655 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.709 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:13:19.710 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.710 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:13:19.714 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:13:19.714 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.714 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:13:19.714 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:13:19.714 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.714 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:13:19.716 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:13:19.720 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.720 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.720 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:13:19.721 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.731 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:13:19.743 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:13:19.743 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:13:19.743 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:13:19.746 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:13:19.747 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:13:19.747 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:13:19.750 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:13:19.753 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:13:19.754 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:13:19.755 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:13:19.774 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:13:19.775 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:13:19.775 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:13:19.779 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:13:19.779 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:13:19.779 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:13:19.784 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:13:19.784 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:13:19.784 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:13:19.786 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:13:19.792 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:13:19.793 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:13:19.809 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:13:19.809 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:13:19.809 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:13:19.816 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:13:19.816 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:13:19.816 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:13:19.828 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:13:19.829 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:13:20.377 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:13:20.466 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:13:20.506 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:18:14.101 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:18:14.127 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:18:14.129 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:18:14.132 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:18:14.132 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:18:14.133 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:18:14.134 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:18:14.135 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:18:14.135 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:18:14.141 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:18:14.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:18:14.142 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:18:14.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.143 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:18:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:18:14.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:18:14.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:18:14.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:18:14.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:18:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:18:14.153 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:18:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:18:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:18:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:18:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:18:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:18:14.170 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:18:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:18:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:18:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:18:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:18:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:18:14.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:18:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:18:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:18:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:18:14.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:18:14.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:18:14.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:14.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:14.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:18:14.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:18:19.184 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:18:19.184 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:18:19.194 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:18:19.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:18:19.197 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.197 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:18:19.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:18:19.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.207 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.207 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.208 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:18:19.215 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:18:19.243 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:18:19.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:18:19.254 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:18:19.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:18:19.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:18:19.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:18:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.258 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:18:19.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:18:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:18:19.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:18:19.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:18:19.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:18:19.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.331 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:18:19.332 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.332 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:18:19.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.352 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:18:19.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:18:19.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:18:19.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:18:19.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:18:19.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:18:19.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:18:19.383 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.383 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.384 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:18:19.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:18:19.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.390 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:18:19.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:18:19.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:18:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.401 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.401 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:18:19.406 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:18:19.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:18:19.429 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.431 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:18:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.432 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:18:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:18:19.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.434 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:18:19.441 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:18:19.444 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:18:19.445 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.445 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:18:19.456 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:18:19.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:18:19.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.518 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:18:19.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:18:19.521 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:18:19.521 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:18:19.521 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.521 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.521 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:18:19.521 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:18:19.529 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:18:19.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.529 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.529 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:18:19.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:18:19.540 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.540 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:18:19.623 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:18:19.624 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:18:19.624 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:18:19.624 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:18:19.625 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:18:19.625 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.625 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:18:19.635 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:18:19.636 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.636 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:18:19.712 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:18:19.713 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:18:19.713 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:18:19.721 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:18:19.721 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:18:19.721 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:18:19.722 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:18:19.722 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:18:19.722 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:18:19.731 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:18:19.731 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:18:19.732 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:18:19.760 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:18:19.760 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:18:19.761 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:18:19.770 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:18:19.791 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:18:19.791 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:18:19.791 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:18:19.797 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:18:19.798 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:18:19.798 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:18:19.810 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:18:19.811 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:18:20.269 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:18:20.339 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:18:20.475 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:20:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 15:20:00.014 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 15:20:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 15:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 15:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 15:20:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 15:20:00.047 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 15:20:00.049 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 15:20:00.049 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 15:20:00.115 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 15:20:00.120 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:23:14.104 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:23:14.112 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:23:14.112 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:23:14.112 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:23:14.113 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:23:14.113 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:23:14.113 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:23:14.114 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:23:14.114 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:23:14.122 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:23:14.123 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:23:14.123 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:23:14.128 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:23:14.129 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:23:14.129 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:23:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:23:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:23:14.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:23:14.136 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:23:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:23:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:23:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:23:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:23:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:23:14.146 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:23:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:23:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:23:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:23:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:23:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:23:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:23:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.201 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:23:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:23:14.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:23:14.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:23:14.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:23:14.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:23:14.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:14.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:14.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:23:14.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:23:19.204 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:23:19.204 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:23:19.213 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.213 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:23:19.213 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.213 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:23:19.220 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.235 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:23:19.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:23:19.249 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.250 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.250 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:23:19.256 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:23:19.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:23:19.261 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:23:19.263 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:23:19.263 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:23:19.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:23:19.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.282 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:23:19.282 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:23:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:23:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.301 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:23:19.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:23:19.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:23:19.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:23:19.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.315 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.342 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:23:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:23:19.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:23:19.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:23:19.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:23:19.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:23:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:23:19.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:23:19.358 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.358 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:23:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.364 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:23:19.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:23:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:23:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:23:19.382 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:23:19.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:23:19.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.393 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.407 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:23:19.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:23:19.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:23:19.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:23:19.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:23:19.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:23:19.426 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:23:19.427 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.427 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:23:19.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.437 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:23:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:23:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:23:19.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.512 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:23:19.512 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:23:19.515 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:23:19.515 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.516 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:23:19.516 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:23:19.516 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.516 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:23:19.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:23:19.522 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.522 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.522 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.522 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:23:19.528 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:23:19.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:23:19.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:23:19.550 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:23:19.613 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:23:19.613 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:23:19.613 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:23:19.617 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:23:19.622 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:23:19.622 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:23:19.622 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:23:19.624 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:23:19.633 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:23:19.634 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:23:19.645 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:23:19.645 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:23:19.645 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:23:19.650 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:23:19.650 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:23:19.650 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:23:19.653 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:23:19.653 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:23:19.653 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:23:19.655 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:23:19.661 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:23:19.662 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:23:19.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:23:19.676 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:23:19.676 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:23:19.684 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:23:19.685 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:23:19.685 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:23:19.697 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:23:19.698 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:23:20.240 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:23:20.304 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:23:20.386 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:28:14.107 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:28:14.121 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:28:14.122 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:28:14.123 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:28:14.123 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:28:14.123 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:28:14.123 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:28:14.125 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:28:14.125 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:28:14.136 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:28:14.136 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:28:14.137 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:28:14.154 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:28:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:28:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:28:14.160 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:28:14.160 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:28:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:28:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:28:14.161 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:28:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:28:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:28:14.163 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:28:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:28:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:28:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:28:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:28:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:28:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:28:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:28:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:28:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:28:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:28:14.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:28:14.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:28:14.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:28:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:28:14.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:28:19.193 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:28:19.193 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:28:19.193 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:28:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:28:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:28:19.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:28:19.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.209 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.210 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:28:19.213 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.221 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:28:19.239 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:28:19.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:28:19.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.268 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:28:19.268 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:28:19.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:28:19.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:28:19.271 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:28:19.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:28:19.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:28:19.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:28:19.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:28:19.438 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.438 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.439 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:28:19.439 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:28:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:28:19.446 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.447 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.447 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.528 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:28:19.528 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.528 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:28:19.528 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:28:19.528 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:28:19.531 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:28:19.531 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.531 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:28:19.534 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.534 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.535 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.535 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:28:19.539 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:28:19.539 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.539 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:28:19.540 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.551 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:28:19.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:28:19.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.627 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:28:19.627 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.627 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:28:19.630 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:28:19.630 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.630 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:28:19.635 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:28:19.635 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.635 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.636 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:28:19.641 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.645 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:28:19.645 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.645 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:28:19.655 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:28:19.656 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.656 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:28:19.658 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:28:19.660 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.661 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:28:19.662 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:28:19.666 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.727 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:28:19.727 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:28:19.727 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.727 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:28:19.727 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:28:19.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:28:19.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:28:19.732 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:28:19.733 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.734 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.734 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.734 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:28:19.735 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.736 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:28:19.741 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.745 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:28:19.753 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:28:19.753 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:28:19.754 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:28:19.760 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:28:19.761 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:28:19.763 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:28:19.764 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.764 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:28:19.767 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:28:19.771 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.789 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:28:19.790 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:28:19.790 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:28:19.791 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:28:19.791 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:28:19.792 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:28:19.798 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:28:19.798 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:28:19.798 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:28:19.799 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:28:19.805 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:28:19.806 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:28:19.826 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:28:19.827 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:28:19.827 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:28:19.834 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:28:19.855 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:28:19.857 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:28:19.857 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:28:19.865 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:28:19.866 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:28:19.866 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:28:19.879 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:28:19.880 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:28:20.410 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:28:20.451 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:28:20.561 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:30:00.009 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 15:30:00.018 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 15:30:00.018 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 15:30:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 15:30:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 15:30:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 15:30:00.036 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 15:30:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 15:30:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 15:30:00.100 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 15:30:00.104 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:33:14.112 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:33:14.118 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:33:14.118 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:33:14.124 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:33:14.124 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:33:14.124 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:33:14.124 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:33:14.124 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:33:14.124 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:33:14.133 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:33:14.133 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:33:14.134 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:33:14.134 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:33:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:33:14.135 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:33:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:33:14.137 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:33:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:33:14.143 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:33:14.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:33:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:33:14.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:33:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:33:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:33:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:33:14.153 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:33:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:33:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:33:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:33:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:33:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:33:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:33:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:33:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:33:14.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:33:14.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:33:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:33:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:33:14.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:33:19.164 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:33:19.164 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:33:19.171 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:33:19.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:33:19.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.174 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:33:19.176 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.176 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:33:19.180 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.181 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.183 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.183 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.184 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:33:19.191 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:33:19.209 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:33:19.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:33:19.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:33:19.221 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:33:19.222 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:33:19.222 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:33:19.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:33:19.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:33:19.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.248 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:33:19.248 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:33:19.249 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.249 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:33:19.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:33:19.257 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.260 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:33:19.260 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.261 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:33:19.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.281 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:33:19.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:33:19.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.325 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:33:19.325 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:33:19.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:33:19.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:33:19.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:33:19.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.327 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:33:19.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:33:19.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.335 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.335 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:33:19.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:33:19.345 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:33:19.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:33:19.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:33:19.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:33:19.365 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:33:19.365 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:33:19.367 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:33:19.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:33:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:33:19.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:33:19.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:33:19.392 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:33:19.392 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.392 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:33:19.392 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:33:19.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:33:19.397 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:33:19.399 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:33:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:33:19.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:33:19.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.427 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:33:19.428 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:33:19.428 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:33:19.429 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:33:19.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:33:19.430 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:33:19.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:33:19.438 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.438 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.438 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:33:19.439 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.439 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:33:19.439 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:33:19.451 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:33:19.462 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:33:19.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:33:19.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:33:19.470 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:33:19.470 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:33:19.527 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:33:19.528 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:33:19.528 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:33:19.529 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:33:19.529 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:33:19.529 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:33:19.540 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:33:19.540 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:33:19.540 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:33:19.540 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:33:19.549 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:33:19.549 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:33:19.651 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:33:19.651 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:33:19.652 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:33:19.675 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:33:19.676 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:33:19.676 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:33:19.687 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:33:19.689 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:33:20.120 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:33:20.175 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:33:20.342 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:38:14.115 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:38:14.130 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:38:14.130 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:38:14.130 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:38:14.130 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:38:14.131 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:38:14.131 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:38:14.131 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:38:14.131 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:38:14.138 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:38:14.138 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:38:14.138 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:38:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:38:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:38:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:38:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:38:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:38:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:38:14.151 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:38:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:38:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:38:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:38:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:38:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:38:14.158 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:38:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:38:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:38:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:38:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:38:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:38:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:38:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:38:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:38:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:38:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:38:14.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:38:14.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:38:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:14.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:14.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:38:14.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:38:19.208 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:38:19.208 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:38:19.208 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:38:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:38:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:38:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:38:19.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.228 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.228 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:38:19.233 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:38:19.238 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:38:19.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:38:19.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:38:19.273 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:38:19.279 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:38:19.279 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:38:19.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:38:19.285 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:38:19.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:38:19.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:38:19.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:38:19.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:38:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.321 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:38:19.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:38:19.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:38:19.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:38:19.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.336 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.342 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:38:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:38:19.354 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:38:19.354 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.354 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:38:19.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:38:19.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:38:19.356 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:38:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:38:19.362 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:38:19.362 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:38:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:38:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:38:19.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:38:19.396 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:38:19.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:38:19.396 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.397 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:38:19.404 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.420 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:38:19.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.421 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:38:19.429 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:38:19.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:38:19.435 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:38:19.435 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.435 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:38:19.435 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:38:19.435 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.435 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:38:19.438 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:38:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.441 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:38:19.442 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:38:19.442 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.442 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.442 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:38:19.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.464 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:38:19.464 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:38:19.464 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:38:19.472 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:38:19.472 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:38:19.472 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.473 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:38:19.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:38:19.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:38:19.473 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:38:19.480 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.481 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.481 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:38:19.489 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:38:19.718 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:38:19.719 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:38:19.719 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:38:19.719 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:38:19.726 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:38:19.741 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:38:19.742 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:38:19.742 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:38:19.752 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:38:19.752 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:38:19.752 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:38:19.752 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:38:19.752 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:38:19.752 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:38:19.763 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:38:19.763 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:38:19.764 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:38:19.792 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:38:19.792 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:38:19.793 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:38:19.802 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:38:19.802 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:38:19.802 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:38:19.814 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:38:19.815 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:38:20.147 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:38:20.363 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:38:20.560 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:40:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 15:40:00.020 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 15:40:00.020 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 15:40:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 15:40:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 15:40:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 15:40:00.041 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 15:40:00.042 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 15:40:00.042 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 15:40:00.109 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 15:40:00.114 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:43:14.118 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:43:14.125 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:43:14.126 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:43:14.127 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:43:14.127 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:43:14.127 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:43:14.127 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:43:14.127 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:43:14.128 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:43:14.136 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:43:14.137 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:43:14.137 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:43:14.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:43:14.138 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:43:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:43:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:43:14.139 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:43:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:43:14.145 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:43:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:43:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:43:14.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:43:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.149 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:43:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:43:14.155 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:43:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:43:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:43:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:43:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:43:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:43:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:43:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:43:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:43:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:43:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:43:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:43:14.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:43:14.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:14.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:14.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:43:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:43:19.171 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:43:19.171 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:43:19.182 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:43:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:43:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:43:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:43:19.231 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:43:19.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.237 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.237 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.237 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:43:19.239 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.239 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:43:19.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.248 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:43:19.282 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:43:19.283 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:43:19.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:43:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:43:19.285 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:43:19.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:43:19.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:43:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:43:19.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.309 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:43:19.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:43:19.317 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:43:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:43:19.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:43:19.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:43:19.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.333 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.350 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:43:19.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:43:19.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.366 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:43:19.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.366 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:43:19.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:43:19.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:43:19.373 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:43:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:43:19.374 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.374 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:43:19.380 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:43:19.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:43:19.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.384 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:43:19.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:43:19.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:43:19.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.407 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:43:19.407 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:43:19.408 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.408 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:43:19.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:43:19.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:43:19.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.421 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:43:19.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:43:19.429 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:43:19.430 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.430 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:43:19.436 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:43:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.439 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:43:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:43:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:43:19.442 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:43:19.442 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:43:19.442 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:43:19.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.454 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:43:19.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.455 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:43:19.456 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:43:19.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.477 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:43:19.477 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.477 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:43:19.487 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:43:19.487 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.487 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:43:19.490 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:43:19.494 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.498 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:43:19.530 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:43:19.530 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:43:19.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:43:19.531 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:43:19.542 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:43:19.554 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:43:19.554 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:43:19.555 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:43:19.563 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:43:19.563 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:43:19.564 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:43:19.570 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:43:19.571 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:43:19.634 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:43:19.634 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:43:19.635 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:43:19.647 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:43:19.669 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:43:19.669 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:43:19.669 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:43:19.676 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:43:19.677 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:43:19.677 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:43:19.690 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:43:19.691 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:43:20.057 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:43:20.161 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:43:20.284 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:48:14.121 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:48:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:48:14.146 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:48:14.146 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:48:14.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:48:14.147 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:48:14.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:48:14.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:48:14.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:48:14.154 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:48:14.155 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:48:14.156 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:48:14.158 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:48:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:48:14.158 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:48:14.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:48:14.159 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:48:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:48:14.164 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:48:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:48:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:48:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:48:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:48:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:48:14.172 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:48:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:48:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:48:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:48:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:48:14.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:48:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:48:14.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:48:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:48:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:48:14.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:48:14.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:48:14.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:14.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:14.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:48:14.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:48:19.186 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:48:19.186 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:48:19.191 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:48:19.198 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:48:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:48:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:48:19.218 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.224 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.224 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.224 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:48:19.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:48:19.235 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:48:19.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:48:19.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.264 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:48:19.264 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:48:19.264 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:48:19.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:48:19.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:48:19.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:48:19.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.286 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:48:19.286 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.286 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:48:19.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:48:19.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:48:19.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.297 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:48:19.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:48:19.306 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.331 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:48:19.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:48:19.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:48:19.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:48:19.334 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:48:19.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:48:19.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:48:19.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.343 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.343 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:48:19.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:48:19.349 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:48:19.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:48:19.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:48:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:48:19.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:48:19.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.370 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:48:19.379 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:48:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:48:19.392 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:48:19.392 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:48:19.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.392 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.392 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:48:19.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:48:19.399 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:48:19.399 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.399 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:48:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:48:19.401 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:48:19.403 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.403 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:48:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:48:19.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.440 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:48:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:48:19.442 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:48:19.442 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:48:19.442 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.442 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.442 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:48:19.442 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:48:19.446 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:48:19.450 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.450 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.451 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.451 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:48:19.461 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:48:19.472 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:48:19.472 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:48:19.472 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:48:19.473 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:48:19.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:48:19.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:48:19.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:48:19.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:48:19.485 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:48:19.486 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:48:19.531 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:48:19.531 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:48:19.532 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:48:19.538 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:48:19.538 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:48:19.538 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:48:19.539 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:48:19.539 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:48:19.539 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:48:19.545 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:48:19.545 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:48:19.546 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:48:19.629 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:48:19.629 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:48:19.630 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:48:19.637 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:48:19.638 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:48:19.638 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:48:19.650 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:48:19.651 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:48:20.067 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:48:20.169 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:48:20.251 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:50:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 15:50:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 15:50:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 15:50:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 15:50:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 15:50:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 15:50:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 15:50:00.035 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 15:50:00.035 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 15:50:00.100 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 15:50:00.104 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:53:14.124 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:53:14.132 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:53:14.132 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:53:14.132 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:53:14.132 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:53:14.135 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:53:14.135 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:53:14.135 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:53:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:53:14.144 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:53:14.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:53:14.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:53:14.146 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:53:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:53:14.147 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:53:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:53:14.152 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:53:14.152 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:53:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:53:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:53:14.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:53:14.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:53:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:53:14.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:53:14.159 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:53:14.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:53:14.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:53:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:53:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:53:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:53:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:53:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:53:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:53:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:53:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:53:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:53:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:53:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:53:14.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:53:19.179 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:53:19.179 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:53:19.180 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:53:19.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:53:19.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:53:19.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:53:19.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.201 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.202 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:53:19.210 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:53:19.217 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 15:53:19.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:53:19.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.240 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:53:19.240 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:53:19.241 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:53:19.269 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:53:19.269 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:53:19.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:53:19.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 15:53:19.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.322 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:53:19.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:53:19.350 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:53:19.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:53:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.360 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:53:19.360 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.360 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:53:19.366 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:53:19.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 15:53:19.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:53:19.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:53:19.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.404 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:53:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.405 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 15:53:19.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:53:19.405 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.405 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:53:19.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:53:19.415 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 15:53:19.415 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.415 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 15:53:19.422 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 15:53:19.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:53:19.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.432 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:53:19.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:53:19.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:53:19.449 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:53:19.450 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.450 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:53:19.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.458 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.458 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:53:19.461 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:53:19.461 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:53:19.461 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:53:19.468 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:53:19.469 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:53:19.470 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:53:19.488 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.490 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:53:19.641 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:53:19.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 15:53:19.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 15:53:19.665 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.729 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:53:19.729 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:53:19.729 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 15:53:19.733 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:53:19.733 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.733 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:53:19.743 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.743 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:53:19.743 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:53:19.744 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:53:19.753 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:53:19.754 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:53:19.764 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:53:19.764 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.765 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 15:53:19.771 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.771 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.771 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 15:53:19.777 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.796 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:53:19.796 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.796 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:53:19.804 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.823 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:53:19.823 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.823 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 15:53:19.833 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.833 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.833 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 15:53:19.840 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.862 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 15:53:19.863 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.863 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 15:53:19.872 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.897 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:53:19.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:53:19.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 15:53:19.908 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:53:19.935 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:53:19.935 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:53:19.935 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:53:19.948 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:53:19.974 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:53:19.975 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:53:19.975 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:53:19.982 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:53:19.982 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:53:19.983 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 15:53:19.998 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:53:19.999 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:53:20.119 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:53:20.320 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:53:20.639 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:57:46.840 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==>  Preparing: select id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason , content from history_process_record WHERE ( type = ? and workflow_type = ? and workflow_businessId is null and workflow_node = ? and creator = ? ) 
2020-12-05 15:57:46.841 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==> Parameters: SAVE(String), QMSEcnProcess(String), Apply(String), hualanlan(String)
2020-12-05 15:57:46.871 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  <==      Total: 0
2020-12-05 15:57:47.670 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 15:57:47.671 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 15:57:47.678 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 15:57:47.682 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 15:57:47.683 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 15:57:47.692 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 15:58:14.127 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 15:58:14.136 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 15:58:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:58:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:58:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 15:58:14.136 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 15:58:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 15:58:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 15:58:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 15:58:14.144 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 15:58:14.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 15:58:14.144 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 15:58:14.151 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 15:58:14.151 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 15:58:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.151 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 15:58:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 15:58:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 15:58:14.152 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 15:58:14.156 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 15:58:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 15:58:14.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 15:58:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 15:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 15:58:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 15:58:14.167 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 15:58:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 15:58:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 15:58:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 15:58:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 15:58:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 15:58:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 15:58:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:58:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 15:58:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 15:58:14.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 15:58:14.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:58:14.273 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:58:14.274 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:58:14.277 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 15:58:14.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.277 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:58:14.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.277 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 15:58:14.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 15:58:14.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:58:14.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:58:14.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 15:58:14.293 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 15:58:14.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:58:14.294 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:58:14.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 15:58:14.305 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:58:14.305 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:58:14.305 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:58:14.305 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 15:58:14.305 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 15:58:14.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:58:14.312 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 15:58:14.312 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:58:14.313 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:58:14.314 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 15:58:14.323 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:58:14.323 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 15:58:14.324 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 15:58:14.335 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 15:58:14.336 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 15:58:14.336 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:58:14.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 15:58:14.337 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 15:58:14.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:58:14.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:58:14.375 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:58:14.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 15:58:14.376 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 15:58:14.377 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 15:58:14.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:58:14.386 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 15:58:14.386 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:58:14.386 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:58:14.398 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:58:14.399 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 15:58:14.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:58:14.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 15:58:14.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 15:58:14.441 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:58:14.441 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 15:58:14.441 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 15:58:14.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 15:58:14.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 15:58:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 15:58:14.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:58:14.503 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 15:58:14.503 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 15:58:14.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 15:58:14.514 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 15:58:14.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 15:58:14.543 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 15:58:14.543 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 15:58:14.550 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 15:58:14.551 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 15:58:14.998 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:58:14.999 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:58:15.119 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 15:59:10.965 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 15:59:10.965 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 15:59:10.966 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 15:59:10.966 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 15:59:10.974 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 15:59:10.993 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 15:59:10.997 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 15:59:10.997 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 15:59:11.023 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 15:59:11.023 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 15:59:11.030 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 15:59:11.036 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 15:59:11.036 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 15:59:11.039 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 15:59:11.045 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 15:59:11.475 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 15:59:11.476 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 15:59:11.482 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 15:59:53.869 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==>  Preparing: select id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason , content from history_process_record WHERE ( type = ? and workflow_type = ? and workflow_businessId is null and workflow_node = ? and creator = ? ) 
2020-12-05 15:59:53.870 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==> Parameters: SAVE(String), QMSEcnProcess(String), Apply(String), hualanlan(String)
2020-12-05 15:59:53.885 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  <==      Total: 0
2020-12-05 15:59:54.620 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 15:59:54.621 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 15:59:54.630 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 15:59:54.634 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 15:59:54.634 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 15:59:54.641 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 16:00:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 16:00:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 16:00:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 16:00:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 16:00:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 16:00:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 16:00:00.036 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 16:00:00.036 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 16:00:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 16:00:00.103 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 16:00:00.108 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:00:03.538 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 16:00:03.538 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 16:00:03.539 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 16:00:03.539 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 16:00:03.540 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 16:00:03.541 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 16:00:03.541 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 16:00:03.541 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 16:00:03.548 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 16:00:03.548 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 16:00:03.554 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 16:00:03.554 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 16:00:03.612 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 16:00:03.614 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 16:00:03.664 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 16:00:03.667 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 16:00:03.667 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 16:00:03.731 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 16:01:23.847 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==>  Preparing: select id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date, update_date, department, handle_opinion, reject_reason , content from history_process_record WHERE ( type = ? and workflow_type = ? and workflow_businessId is null and workflow_node = ? and creator = ? ) 
2020-12-05 16:01:23.848 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  ==> Parameters: SAVE(String), QMSEcnProcess(String), Apply(String), hualanlan(String)
2020-12-05 16:01:23.866 DEBUG c.j.q.d.HistoryProcessRecordMapper.selectByExample[145]  <==      Total: 0
2020-12-05 16:01:24.616 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 16:01:24.617 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 16:01:24.630 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 16:01:24.647 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 16:01:24.648 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 16:01:24.656 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 16:03:14.131 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:03:14.136 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:03:14.137 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:03:14.137 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:03:14.137 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:03:14.137 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:03:14.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:03:14.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:03:14.138 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:03:14.145 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:03:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:03:14.146 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:03:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.146 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:03:14.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:03:14.160 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:03:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:03:14.160 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:03:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:03:14.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.160 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:03:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:03:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:03:14.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.167 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:03:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:03:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:03:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:03:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:03:14.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.196 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:03:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:03:14.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:03:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.230 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:03:14.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:03:14.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:14.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:14.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:03:14.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:03:19.194 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:03:19.194 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:03:19.199 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:03:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:03:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:03:19.207 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.207 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:03:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.216 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.216 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:03:19.224 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:03:19.252 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:03:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:03:19.265 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:03:19.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.265 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:03:19.266 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:03:19.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.265 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:03:19.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:03:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:03:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:03:19.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:03:19.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:03:19.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:03:19.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.334 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:03:19.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.335 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:03:19.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.350 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:03:19.350 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:03:19.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.351 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:03:19.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:03:19.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.360 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:03:19.361 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.361 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:03:19.369 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:03:19.370 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:03:19.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:03:19.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:03:19.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.381 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:03:19.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.381 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:03:19.381 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:03:19.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.434 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:03:19.435 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:03:19.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:03:19.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:03:19.437 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:03:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:03:19.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:03:19.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.446 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.446 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:03:19.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:03:19.456 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:03:19.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:03:19.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.467 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:03:19.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:03:19.476 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:03:19.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:03:19.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:03:19.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:03:19.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:03:19.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:03:19.494 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.495 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.495 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:03:19.503 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:03:19.509 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:03:19.509 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:03:19.510 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:03:19.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.510 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:03:19.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:03:19.517 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:03:19.518 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.518 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:03:19.532 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:03:19.549 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:03:19.549 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:03:19.549 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:03:19.585 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:03:19.585 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:03:19.585 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:03:19.665 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:03:19.666 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:03:19.667 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:03:19.667 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:03:19.680 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:03:19.680 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:03:19.691 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:03:19.692 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:03:19.692 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:03:19.700 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:03:19.721 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:03:19.722 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:03:19.722 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:03:19.729 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:03:19.729 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:03:19.729 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:03:19.740 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:03:19.741 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:03:20.148 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:03:20.285 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:03:20.431 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:08:14.134 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:08:14.148 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:08:14.148 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:08:14.148 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:08:14.148 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:08:14.148 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:08:14.149 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:08:14.149 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:08:14.149 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:08:14.159 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:08:14.159 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:08:14.160 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:08:14.161 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:08:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:08:14.162 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:08:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:08:14.166 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:08:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.166 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:08:14.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:08:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:08:14.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:08:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:08:14.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:08:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.189 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:08:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:08:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:08:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:08:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:08:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:08:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:08:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:08:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:08:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:08:14.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:08:14.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:08:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:08:14.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:08:14.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:14.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:14.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:08:14.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:08:19.187 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:08:19.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:08:19.206 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:08:19.212 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.212 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:08:19.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.220 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:08:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:08:19.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:08:19.251 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:08:19.254 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:08:19.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:08:19.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:08:19.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:08:19.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:08:19.287 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:08:19.287 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:08:19.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.309 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:08:19.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:08:19.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:08:19.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:08:19.341 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.341 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:08:19.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:08:19.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:08:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.350 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.379 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:08:19.379 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:08:19.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:08:19.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:08:19.382 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:08:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:08:19.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:08:19.388 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:08:19.388 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.389 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:08:19.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.398 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:08:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:08:19.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:08:19.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:08:19.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:08:19.414 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.414 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:08:19.421 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.421 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.441 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:08:19.442 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.442 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:08:19.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:08:19.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:08:19.446 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:08:19.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:08:19.449 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:08:19.449 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.449 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:08:19.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:08:19.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:08:19.456 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:08:19.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:08:19.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.464 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.473 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:08:19.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:08:19.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:08:19.542 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:08:19.542 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.542 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:08:19.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:08:19.543 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.543 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:08:19.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:08:19.544 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:08:19.544 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:08:19.558 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.558 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.558 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:08:19.558 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.559 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:08:19.559 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:08:19.569 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:08:19.642 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:08:19.642 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:08:19.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:08:19.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:08:19.651 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:08:19.741 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:08:19.741 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:08:19.741 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:08:19.749 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:08:19.749 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:08:19.749 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:08:19.752 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:08:19.752 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:08:19.753 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:08:19.761 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:08:19.761 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:08:19.762 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:08:19.794 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:08:19.794 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:08:19.794 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:08:19.801 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:08:19.801 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:08:19.802 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:08:19.813 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:08:19.814 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:08:20.269 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:08:20.355 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:08:20.548 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:10:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 16:10:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 16:10:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 16:10:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 16:10:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 16:10:00.035 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 16:10:00.048 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 16:10:00.049 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 16:10:00.049 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 16:10:00.115 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 16:10:00.119 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:13:14.137 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:13:14.144 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:13:14.145 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:13:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:13:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:13:14.145 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:13:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:13:14.145 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:13:14.146 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:13:14.156 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:13:14.156 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:13:14.156 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:13:14.163 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:13:14.163 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:13:14.163 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:13:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:13:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:13:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:13:14.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:13:14.179 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:13:14.179 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:13:14.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:13:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:13:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:13:14.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:13:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:13:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:13:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:13:14.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:13:14.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:13:14.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:13:14.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:13:14.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:14.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:14.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:13:14.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:13:19.211 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:13:19.211 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:13:19.213 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:13:19.218 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.218 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:13:19.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:13:19.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:13:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.227 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.228 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:13:19.235 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:13:19.255 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:13:19.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:13:19.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:13:19.273 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:13:19.274 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:13:19.274 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:13:19.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:13:19.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:13:19.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.298 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:13:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.301 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:13:19.301 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:13:19.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:13:19.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.311 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.311 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:13:19.312 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.312 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:13:19.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:13:19.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:13:19.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:13:19.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:13:19.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:13:19.352 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.352 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:13:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:13:19.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:13:19.358 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.358 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:13:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.366 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:13:19.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:13:19.373 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.382 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:13:19.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:13:19.385 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:13:19.385 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.385 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:13:19.388 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.392 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.397 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:13:19.398 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.398 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:13:19.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:13:19.407 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.407 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:13:19.419 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:13:19.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.423 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:13:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.436 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:13:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:13:19.437 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:13:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:13:19.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:13:19.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:13:19.452 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:13:19.452 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.453 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:13:19.461 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.461 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.461 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:13:19.465 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:13:19.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:13:19.467 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:13:19.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:13:19.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:13:19.475 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:13:19.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.490 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:13:19.495 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:13:19.495 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:13:19.496 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:13:19.503 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:13:19.504 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:13:19.510 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:13:19.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:13:19.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:13:19.515 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:13:19.516 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:13:19.516 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:13:19.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:13:19.524 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:13:19.525 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:13:19.525 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:13:19.532 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:13:19.532 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:13:19.550 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:13:19.550 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:13:19.551 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:13:19.557 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:13:19.638 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:13:19.638 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:13:19.639 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:13:19.647 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:13:19.647 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:13:19.648 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:13:19.658 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:13:19.659 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:13:20.165 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:13:20.166 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:13:20.367 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:18:14.140 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:18:14.377 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:18:14.378 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:18:14.389 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:18:14.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:18:14.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.430 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:18:14.430 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:18:14.430 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:18:14.430 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:18:14.437 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:18:14.437 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:18:14.437 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:18:14.438 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:18:14.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:18:14.440 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:18:14.441 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:18:14.443 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:18:14.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:18:14.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:18:14.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:18:14.450 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:18:14.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:18:14.452 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.452 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.452 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:18:14.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:18:14.453 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:18:14.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:18:14.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:18:14.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:18:14.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:18:14.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:18:14.470 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:18:14.478 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.478 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.478 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.478 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:18:14.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:18:14.492 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:18:14.503 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:18:14.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.514 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.514 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:18:14.525 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.525 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.525 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:18:14.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:14.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:14.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:18:14.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:18:19.430 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:18:19.451 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.451 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:18:19.458 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.459 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:18:19.467 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.467 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:18:19.477 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.478 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:18:19.492 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.492 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:18:19.499 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:18:19.499 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.500 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:18:19.508 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.508 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.508 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:18:19.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:18:19.517 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:18:19.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.519 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:18:19.519 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:18:19.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:18:19.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:18:19.544 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.544 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:18:19.548 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:18:19.551 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:18:19.560 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.563 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:18:19.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:18:19.570 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.570 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:18:19.571 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.571 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:18:19.579 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.579 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.580 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:18:19.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.653 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:18:19.653 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:18:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:18:19.654 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:18:19.655 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:18:19.655 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.655 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:18:19.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.660 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.661 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:18:19.661 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.661 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:18:19.675 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:18:19.677 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.677 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:18:19.683 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.749 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:18:19.749 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:18:19.749 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.749 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.749 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:18:19.749 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:18:19.757 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:18:19.757 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.758 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.758 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.758 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:18:19.758 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:18:19.759 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.764 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.764 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:18:19.765 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.765 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:18:19.778 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:18:19.780 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.780 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:18:19.788 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:18:19.788 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.788 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.788 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:18:19.790 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:18:19.790 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.790 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:18:19.801 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.802 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.812 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:18:19.812 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.813 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:18:19.823 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.823 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.823 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:18:19.829 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:18:19.841 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:18:19.841 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:18:19.841 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.841 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.841 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:18:19.841 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:18:19.851 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:18:19.851 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:18:19.851 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:18:19.883 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:18:19.883 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:18:19.883 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:18:19.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:18:19.883 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:18:19.883 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:18:19.884 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:18:19.884 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:18:19.884 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:18:19.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:18:19.891 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:18:19.892 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:18:19.892 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:18:19.892 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:18:19.905 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:18:19.906 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:18:19.914 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:18:19.915 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:18:19.915 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:18:19.915 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:18:19.915 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:18:19.915 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:18:19.922 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:18:19.922 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:18:19.922 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:18:19.922 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:18:19.923 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:18:19.937 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:18:19.937 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:18:20.568 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:18:20.624 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:18:20.624 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:20:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 16:20:00.014 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 16:20:00.014 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 16:20:00.022 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 16:20:00.022 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 16:20:00.022 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 16:20:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 16:20:00.029 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 16:20:00.029 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 16:20:00.092 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 16:20:00.096 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:23:14.143 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:23:15.381 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:23:15.383 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:23:15.430 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:23:15.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.431 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:23:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:23:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:23:15.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:23:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.459 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:23:15.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.465 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:23:15.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.473 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:23:15.480 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.480 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:23:15.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:23:15.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.493 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:23:15.503 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:23:15.506 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:23:15.506 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:23:15.517 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:23:15.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:23:15.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.527 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.527 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:23:15.533 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.533 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.533 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:23:15.533 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:23:15.534 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:23:15.540 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.540 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:23:15.541 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:23:15.541 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:23:15.554 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:23:15.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:23:15.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:23:15.563 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:23:15.563 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:23:15.563 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:23:15.563 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:23:15.575 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:23:15.575 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:23:15.586 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:23:15.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.589 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:23:15.593 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:23:15.593 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:15.594 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:23:15.595 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:15.600 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.524 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:23:20.538 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.538 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:23:20.542 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:23:20.597 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:23:20.602 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:23:20.616 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.616 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:23:20.616 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.616 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:23:20.617 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.617 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:23:20.618 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.631 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.631 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.631 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.631 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.631 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:23:20.646 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:23:20.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:23:20.675 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.675 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:23:20.676 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:23:20.676 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.676 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:23:20.680 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:23:20.680 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:23:20.683 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:23:20.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.684 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:23:20.693 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.768 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:23:20.769 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:23:20.769 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:23:20.769 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.770 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.770 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:23:20.770 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:23:20.770 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.770 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:23:20.779 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.779 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.780 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.809 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:23:20.809 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.809 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:23:20.809 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:23:20.810 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.810 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:23:20.813 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:23:20.814 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.814 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:23:20.817 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.817 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.817 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.818 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:23:20.825 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:23:20.825 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.825 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:23:20.831 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.834 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:23:20.836 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.836 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:23:20.843 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:23:20.843 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.843 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.844 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:23:20.851 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:23:20.852 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:23:20.852 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.852 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:23:20.861 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.867 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:23:20.867 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.867 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:23:20.872 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:23:20.872 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.872 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:23:20.877 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:23:20.877 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.878 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:23:20.881 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:23:20.881 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:23:20.881 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.882 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:23:20.883 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:23:20.885 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.885 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:23:20.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.891 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:23:20.895 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.897 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:20.908 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:23:20.908 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:23:20.908 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:23:20.918 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:23:20.918 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:23:20.941 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:23:20.941 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:23:20.941 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.941 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.941 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:23:20.941 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:23:20.948 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.948 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:20.948 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:20.948 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:23:20.955 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:23:20.971 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:23:20.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:23:20.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:23:20.973 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:23:20.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:23:21.064 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:23:21.064 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:23:21.064 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:23:21.064 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:23:21.065 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:23:21.065 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:23:21.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:23:21.075 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:23:21.075 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:23:21.076 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:23:21.084 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:23:21.085 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:23:21.094 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:23:21.094 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:23:21.094 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:23:21.115 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:23:21.116 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:23:21.116 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:23:21.127 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:23:21.128 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:23:21.625 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:23:21.737 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:23:21.792 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:28:14.146 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:28:14.154 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:28:14.154 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:28:14.154 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:28:14.154 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:28:14.154 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:28:14.154 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:28:14.155 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:28:14.156 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:28:14.167 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:28:14.167 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:28:14.167 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:28:14.167 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:28:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.168 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:28:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:28:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:28:14.169 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:28:14.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:28:14.181 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:28:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:28:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:28:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:28:14.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:28:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:28:14.189 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:28:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:28:14.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:28:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:28:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:28:14.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:28:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:28:14.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:28:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:28:14.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:28:14.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:14.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:14.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:28:14.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:28:19.201 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:28:19.201 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:28:19.208 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:28:19.209 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:28:19.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:28:19.215 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.215 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:28:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.222 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.222 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.222 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:28:19.229 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:28:19.248 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:28:19.254 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.255 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:28:19.257 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:28:19.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:28:19.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:28:19.261 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:28:19.261 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:28:19.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.263 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:28:19.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.288 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:28:19.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:28:19.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:28:19.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:28:19.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:28:19.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.305 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:28:19.313 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:28:19.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:28:19.348 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:28:19.348 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.348 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:28:19.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:28:19.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:28:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:28:19.356 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.357 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:28:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:28:19.364 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:28:19.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:28:19.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:28:19.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:28:19.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.384 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.389 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:28:19.389 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.389 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:28:19.396 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.407 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:28:19.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:28:19.408 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:28:19.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:28:19.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:28:19.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:28:19.422 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:28:19.422 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.422 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:28:19.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:28:19.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.430 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:28:19.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:28:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:28:19.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:28:19.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:28:19.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:28:19.460 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:28:19.460 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:28:19.460 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.460 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.460 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:28:19.460 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:28:19.469 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.469 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.469 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.469 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:28:19.477 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:28:19.477 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:28:19.477 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:28:19.480 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:28:19.491 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:28:19.491 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:28:19.491 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:28:19.491 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:28:19.492 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:28:19.498 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:28:19.499 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:28:19.523 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:28:19.524 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:28:19.524 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:28:19.524 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:28:19.525 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:28:19.525 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:28:19.535 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:28:19.535 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:28:19.535 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:28:19.535 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:28:19.547 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:28:19.548 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:28:19.559 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:28:19.559 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:28:19.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:28:19.567 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:28:19.567 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:28:19.567 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:28:19.580 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:28:19.581 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:28:20.192 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:28:20.204 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:28:20.244 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:30:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 16:30:00.013 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 16:30:00.013 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 16:30:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 16:30:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 16:30:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 16:30:00.037 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 16:30:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 16:30:00.038 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 16:30:00.099 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 16:30:00.105 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:33:14.150 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 16:33:14.156 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 16:33:14.157 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:33:14.157 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:33:14.157 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 16:33:14.157 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 16:33:14.157 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 16:33:14.157 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 16:33:14.158 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 16:33:14.163 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 16:33:14.164 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 16:33:14.164 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 16:33:14.169 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 16:33:14.170 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 16:33:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.170 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 16:33:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.170 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 16:33:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 16:33:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 16:33:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 16:33:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 16:33:14.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 16:33:14.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 16:33:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 16:33:14.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 16:33:14.181 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 16:33:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 16:33:14.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 16:33:14.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 16:33:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 16:33:14.198 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 16:33:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 16:33:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 16:33:14.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 16:33:14.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 16:33:14.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 16:33:14.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 16:33:14.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 16:33:14.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:14.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:14.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 16:33:14.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:33:19.200 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:33:19.200 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:33:19.208 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.208 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.208 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:33:19.208 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:33:19.213 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:33:19.216 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.220 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.220 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:33:19.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:33:19.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:33:19.263 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 16:33:19.265 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:33:19.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 16:33:19.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:33:19.270 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 16:33:19.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 16:33:19.274 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:33:19.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.274 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 16:33:19.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.298 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:33:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 16:33:19.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:33:19.304 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:33:19.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:33:19.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:33:19.312 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.314 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.314 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.352 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:33:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 16:33:19.353 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:33:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 16:33:19.357 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:33:19.357 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:33:19.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 16:33:19.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:33:19.364 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.364 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:33:19.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.372 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:33:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 16:33:19.381 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:33:19.381 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.381 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 16:33:19.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.389 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:33:19.389 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.389 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.389 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:33:19.395 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 16:33:19.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:33:19.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 16:33:19.412 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 16:33:19.416 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:33:19.416 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 16:33:19.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 16:33:19.416 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.417 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 16:33:19.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:33:19.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 16:33:19.425 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 16:33:19.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:33:19.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.455 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 16:33:19.455 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 16:33:19.456 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.456 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.456 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 16:33:19.456 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 16:33:19.458 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:33:19.459 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.459 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:33:19.463 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 16:33:19.465 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.465 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.465 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 16:33:19.474 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 16:33:19.485 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 16:33:19.486 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:33:19.486 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 16:33:19.486 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:33:19.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 16:33:19.486 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 16:33:19.492 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 16:33:19.493 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:33:19.493 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 16:33:19.498 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 16:33:19.521 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 16:33:19.522 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 16:33:19.522 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 16:33:19.526 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 16:33:19.526 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 16:33:19.526 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 16:33:19.539 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 16:33:19.539 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 16:33:19.540 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:33:19.540 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:33:19.548 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:33:19.549 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 16:33:19.559 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 16:33:19.559 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 16:33:19.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 16:33:19.566 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 16:33:19.566 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 16:33:19.566 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 16:33:19.577 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 16:33:19.578 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 16:33:20.174 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:33:20.182 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$9bd28931.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 16:33:20.277 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$e34195d9.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:01:46.328 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[40]  Loading config by :http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 20:01:46.331 INFO  cn.jwis.configration.clientUtil.HttpClientUtil[51]  Http Request:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties
2020-12-05 20:02:01.998 ERROR cn.jwis.configration.clientUtil.HttpClientUtil[77]  send Http Request to:http://10.159.65.221:14200/configCenter/findConfig?side=server&serviceName=pqm-quality-workflow-service&env=dev&configType=properties ,has errors:Connect to 10.159.65.221:14200 [/10.159.65.221] failed: connect timed out
2020-12-05 20:02:01.999 INFO  cn.jwis.configration.clientUtil.ConfigCenterHelper[43]  Get config :
2020-12-05 20:02:02.039 ERROR cn.jwis.configration.clientUtil.ConfigCenterHelper[56]  null
2020-12-05 20:02:02.359 INFO  cn.jwis.qualityworkflow.Application[50]  Starting Application on THINK-Lx with PID 9288 (C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service\target\classes started by THINK in C:\Users\THINK\Desktop\QMS-Server\quality-workflow-service)
2020-12-05 20:02:02.360 DEBUG cn.jwis.qualityworkflow.Application[53]  Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2020-12-05 20:02:02.361 INFO  cn.jwis.qualityworkflow.Application[679]  The following profiles are active: dev
2020-12-05 20:02:03.874 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$857e314c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 20:02:03.946 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[330]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bf12731e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 20:02:04.480 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[90]  Tomcat initialized with port(s): 8115 (http)
2020-12-05 20:02:04.492 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Initializing ProtocolHandler ["http-nio-8115"]
2020-12-05 20:02:04.497 INFO  org.apache.catalina.core.StandardService[173]  Starting service [Tomcat]
2020-12-05 20:02:04.499 INFO  org.apache.catalina.core.StandardEngine[173]  Starting Servlet Engine: Apache Tomcat/9.0.12
2020-12-05 20:02:04.505 INFO  org.apache.catalina.core.AprLifecycleListener[173]  The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_192\bin;C:\Program Files\Java\jdk1.8.0_192\jre\bin;D:\java\apache-maven-3.6.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\job\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;D:\java\mysql\mysql-5.7.11-winx64\bin;D:\job\Microsoft VS Code\bin;C:\Program Files\Microsoft VS Code\bin;C:\Users\THINK\AppData\Roaming\npm;.]
2020-12-05 20:02:04.610 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring embedded WebApplicationContext
2020-12-05 20:02:04.611 INFO  org.springframework.web.context.ContextLoader[285]  Root WebApplicationContext: initialization completed in 2213 ms
2020-12-05 20:02:04.650 INFO  o.s.boot.web.servlet.ServletRegistrationBean[186]  Servlet dispatcherServlet mapped to [/]
2020-12-05 20:02:04.655 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'characterEncodingFilter' to: [/*]
2020-12-05 20:02:04.656 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-12-05 20:02:04.656 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'formContentFilter' to: [/*]
2020-12-05 20:02:04.657 INFO  o.s.boot.web.servlet.FilterRegistrationBean[248]  Mapping filter: 'requestContextFilter' to: [/*]
2020-12-05 20:02:06.960 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor[171]  Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 20:02:07.442 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[120]  Context refreshed
2020-12-05 20:02:07.456 INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper[123]  Found 1 custom documentation plugin(s)
2020-12-05 20:02:07.474 INFO  s.d.spring.web.scanners.ApiListingReferenceScanner[41]  Scanning for api listing references
2020-12-05 20:02:07.827 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_1
2020-12-05 20:02:08.234 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_1
2020-12-05 20:02:08.240 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_1
2020-12-05 20:02:08.248 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_1
2020-12-05 20:02:08.253 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_1
2020-12-05 20:02:08.262 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getBlackDetailsUsingPOST_1
2020-12-05 20:02:08.268 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_1
2020-12-05 20:02:08.276 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_1
2020-12-05 20:02:08.282 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_1
2020-12-05 20:02:08.288 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_1
2020-12-05 20:02:08.295 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_1
2020-12-05 20:02:08.302 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_2
2020-12-05 20:02:08.340 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_1
2020-12-05 20:02:08.358 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_1
2020-12-05 20:02:08.380 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_1
2020-12-05 20:02:08.401 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_3
2020-12-05 20:02:08.410 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_2
2020-12-05 20:02:08.417 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_2
2020-12-05 20:02:08.432 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdAdministrationUsingPOST_1
2020-12-05 20:02:08.463 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_3
2020-12-05 20:02:08.528 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_4
2020-12-05 20:02:08.544 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_4
2020-12-05 20:02:08.569 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_3
2020-12-05 20:02:08.640 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEsdInStanInfoTemplateUsingGET_1
2020-12-05 20:02:08.759 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_5
2020-12-05 20:02:08.768 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_5
2020-12-05 20:02:08.802 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_6
2020-12-05 20:02:08.821 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: findTableNameBySampleNameUsingGET_1
2020-12-05 20:02:08.859 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: commonExportTemplateUsingPOST_1
2020-12-05 20:02:08.879 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_7
2020-12-05 20:02:08.886 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportEcnInfoUsingPOST_1
2020-12-05 20:02:08.889 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_1
2020-12-05 20:02:08.891 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_4
2020-12-05 20:02:08.896 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_1
2020-12-05 20:02:08.899 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_2
2020-12-05 20:02:08.915 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportDetailsUsingPOST_1
2020-12-05 20:02:08.922 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalBolaUsingGET_2
2020-12-05 20:02:08.927 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportUnseasonalListUsingPOST_2
2020-12-05 20:02:08.934 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllAndCloseUsingPOST_2
2020-12-05 20:02:08.939 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAllDataUsingPOST_2
2020-12-05 20:02:08.946 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCloseUsingPOST_2
2020-12-05 20:02:08.952 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardNotCloseUsingPOST_2
2020-12-05 20:02:08.964 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueUsingPOST_2
2020-12-05 20:02:08.972 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalBolaUsingGET_2
2020-12-05 20:02:08.979 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getUnseasonalListUsingPOST_2
2020-12-05 20:02:08.998 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_6
2020-12-05 20:02:09.048 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_8
2020-12-05 20:02:09.076 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_7
2020-12-05 20:02:09.111 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_1
2020-12-05 20:02:09.116 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAddCountUsingPOST_1
2020-12-05 20:02:09.123 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDashBoardCountUsingPOST_1
2020-12-05 20:02:09.133 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_1
2020-12-05 20:02:09.137 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_5
2020-12-05 20:02:09.144 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getOverdueCountUsingPOST_1
2020-12-05 20:02:09.148 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProcessingCountUsingPOST_1
2020-12-05 20:02:09.152 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_2
2020-12-05 20:02:09.164 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_1
2020-12-05 20:02:09.167 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_3
2020-12-05 20:02:09.184 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_2
2020-12-05 20:02:09.192 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_3
2020-12-05 20:02:09.201 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: insertUsingPOST_2
2020-12-05 20:02:09.216 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getAuditListInfoByIdUsingPOST_1
2020-12-05 20:02:09.249 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_9
2020-12-05 20:02:09.264 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingPOST_1
2020-12-05 20:02:09.283 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_4
2020-12-05 20:02:09.292 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_10
2020-12-05 20:02:09.335 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_8
2020-12-05 20:02:09.341 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_6
2020-12-05 20:02:09.438 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_11
2020-12-05 20:02:09.467 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDropdownValueUsingGET_9
2020-12-05 20:02:09.472 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_7
2020-12-05 20:02:09.491 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_1
2020-12-05 20:02:09.534 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_12
2020-12-05 20:02:09.564 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_2
2020-12-05 20:02:09.567 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getLatestRecordContentUsingGET_8
2020-12-05 20:02:09.583 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_4
2020-12-05 20:02:09.606 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_5
2020-12-05 20:02:09.628 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: confirmUsingPOST_13
2020-12-05 20:02:09.639 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportInfoUsingPOST_2
2020-12-05 20:02:09.643 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getDetailednessInfoUsingPOST_3
2020-12-05 20:02:09.652 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getInfoListUsingPOST_3
2020-12-05 20:02:09.656 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getPullDownValueUsingGET_5
2020-12-05 20:02:09.660 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: saveRecordContentUsingPOST_6
2020-12-05 20:02:09.671 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getProgressUsingGET_1
2020-12-05 20:02:09.788 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: exportTraceablityManUsingPOST_1
2020-12-05 20:02:09.838 INFO  s.d.s.w.r.operation.CachingOperationNameGenerator[40]  Generating unique operation named: getSuperiorUsingGET_2
2020-12-05 20:02:09.916 INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler[171]  Initializing ExecutorService
2020-12-05 20:02:09.922 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:02:09.925 INFO  org.apache.coyote.http11.Http11NioProtocol[173]  Starting ProtocolHandler ["http-nio-8115"]
2020-12-05 20:02:09.939 INFO  org.apache.tomcat.util.net.NioSelectorPool[173]  Using a shared selector for servlet write/read
2020-12-05 20:02:09.944 INFO  com.zaxxer.hikari.HikariDataSource[110]  HikariPool-1 - Starting...
2020-12-05 20:02:09.947 WARN  com.zaxxer.hikari.util.DriverDataSource[68]  Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-05 20:02:09.956 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer[204]  Tomcat started on port(s): 8115 (http) with context path ''
2020-12-05 20:02:09.959 INFO  cn.jwis.qualityworkflow.Application[59]  Started Application in 7.92 seconds (JVM running for 24.723)
2020-12-05 20:02:10.165 INFO  com.zaxxer.hikari.HikariDataSource[123]  HikariPool-1 - Start completed.
2020-12-05 20:02:10.171 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:02:10.193 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:02:10.236 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:02:10.239 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:02:10.239 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:02:10.255 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:02:10.255 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:02:10.261 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:02:10.261 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:02:10.262 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:02:10.276 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:02:10.277 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:02:10.277 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:02:10.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.278 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:02:10.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:02:10.287 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:02:10.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:02:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:02:10.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:02:10.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:02:10.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:02:10.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:02:10.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:02:10.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:02:10.319 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:02:10.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:02:10.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:02:10.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:02:10.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:02:10.336 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:02:10.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.348 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:02:10.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:02:10.356 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:02:10.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:02:10.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:02:10.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:02:10.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:02:10.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:02:10.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:02:10.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:02:10.417 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:02:10.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:02:10.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:02:10.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:02:10.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:02:10.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:02:10.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:02:10.426 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:02:10.428 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:02:10.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:02:10.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:02:10.434 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:02:10.438 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:02:10.452 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:02:10.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.453 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:02:10.458 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:02:10.458 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:02:10.459 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:02:10.459 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:02:10.459 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:02:10.464 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.479 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:02:10.480 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:02:10.480 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 20:02:10.489 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:02:10.500 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:02:10.506 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:02:10.507 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:02:10.507 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:02:10.701 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:02:10.701 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:02:10.711 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:02:10.711 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:02:10.725 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:02:10.725 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:02:10.726 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:02:10.727 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:02:10.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:02:10.741 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:02:10.742 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:02:10.770 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:02:10.770 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:02:10.770 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:02:10.784 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:02:10.814 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:02:10.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.814 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:02:10.833 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:02:10.860 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:02:10.860 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:02:10.861 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:02:10.871 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:02:10.895 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:02:10.896 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:02:10.896 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:02:10.904 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:02:10.990 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:02:10.990 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:02:10.990 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:02:11.740 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:02:11.740 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:02:11.776 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:07:09.926 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:07:09.934 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:07:09.935 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:07:09.935 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:07:09.935 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:07:09.935 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:07:09.935 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:07:09.936 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:07:09.937 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:07:09.948 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:07:09.948 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:07:09.949 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.949 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:07:09.949 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:07:09.949 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:07:09.951 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:07:09.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.951 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:07:09.954 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:07:09.954 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.954 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:07:09.956 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:07:09.957 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.957 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:07:09.958 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:07:09.958 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.959 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:07:09.964 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.964 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.964 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.964 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:07:09.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:07:09.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:07:09.973 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:07:09.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:07:09.973 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:07:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:07:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:07:09.981 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:07:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:07:09.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:07:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:07:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:07:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:07:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:07:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:07:14.982 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:07:14.982 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:07:14.992 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:14.992 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:14.994 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:07:14.994 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:07:15.003 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.003 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.008 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:07:15.015 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.015 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:07:15.028 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.028 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.028 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:07:15.040 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:07:15.050 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:07:15.054 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:07:15.054 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:07:15.054 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:07:15.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:07:15.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:07:15.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:07:15.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.070 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:07:15.070 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:07:15.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:07:15.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:07:15.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:07:15.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.104 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:07:15.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:07:15.113 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.113 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.158 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:07:15.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:07:15.162 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:07:15.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:07:15.164 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:07:15.165 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.165 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:07:15.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.166 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:07:15.168 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:07:15.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:07:15.180 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:07:15.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:07:15.193 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:07:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:07:15.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:07:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.197 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:07:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.207 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.224 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:07:15.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:07:15.226 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:07:15.227 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:07:15.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:07:15.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:07:15.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:07:15.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:07:15.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.234 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:07:15.234 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:07:15.244 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:07:15.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:07:15.255 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:07:15.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:07:15.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.263 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:07:15.263 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.264 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:07:15.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:07:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.276 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:07:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:07:15.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.284 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.284 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:07:15.287 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:07:15.288 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:07:15.288 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:07:15.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:07:15.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:07:15.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:07:15.294 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:07:15.295 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:07:15.297 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:07:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:07:15.375 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:07:15.382 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:07:15.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:07:15.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:07:15.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:07:15.460 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:07:15.461 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:07:15.461 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:07:15.464 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:07:15.464 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:07:15.465 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:07:15.470 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:07:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:07:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:07:15.472 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:07:15.472 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:07:15.474 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:07:15.478 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:07:15.479 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:07:15.487 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:07:15.488 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:07:15.930 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:07:16.111 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:07:16.139 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:08:08.960 INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/][173]  Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 20:08:08.962 INFO  org.springframework.web.servlet.DispatcherServlet[521]  Initializing Servlet 'dispatcherServlet'
2020-12-05 20:08:08.986 INFO  org.springframework.web.servlet.DispatcherServlet[543]  Completed initialization in 23 ms
2020-12-05 20:08:09.086 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 20:08:09.086 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 20:08:09.154 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 20:08:09.160 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 20:08:09.160 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 20:08:09.217 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 20:08:09.315 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct document_originator from ecn_info where document_originator is not null 
2020-12-05 20:08:09.315 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 20:08:09.325 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct file_name from ecn_info where file_name is not null 
2020-12-05 20:08:09.325 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct sender_side from ecn_info where sender_side is not null 
2020-12-05 20:08:09.326 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 20:08:09.326 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 20:08:09.327 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==>  Preparing: SELECT distinct model_name from ecn_info where model_name is not null 
2020-12-05 20:08:09.328 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 35
2020-12-05 20:08:09.328 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  ==> Parameters: 
2020-12-05 20:08:09.337 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 7
2020-12-05 20:08:09.339 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 20:08:09.339 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getPullDownValue[145]  <==      Total: 32
2020-12-05 20:08:09.505 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==>  Preparing: SELECT count(0) FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') 
2020-12-05 20:08:09.506 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String)
2020-12-05 20:08:09.546 DEBUG c.j.q.m.ecn.dao.EcnInfoMapper.getEcnInfo_COUNT[145]  <==      Total: 1
2020-12-05 20:08:09.564 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==>  Preparing: SELECT e.*, ar.process_instance_id, ar.task_id, ar.task_state FROM ecn_info e, (SELECT t1.process_instance_id, t1.task_id, t1.task_state, t1.workflow_business_id FROM task_record t1 INNER JOIN ((SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) UNION (SELECT process_instance_id, max(task_id) AS task_id, assignee FROM task_record WHERE template_key = 'QMSEcnProcess' AND process_instance_id NOT IN (SELECT process_instance_id FROM task_record WHERE template_key = 'QMSEcnProcess' AND assignee = ? GROUP BY process_instance_id) GROUP BY process_instance_id)) t2 ON t1.process_instance_id = t2.process_instance_id AND t1.task_id = t2.task_id) ar WHERE e.id = ar.workflow_business_id AND posting_time >= DATE_FORMAT(?, '%Y-%m-%d') AND posting_time <= DATE_FORMAT(?, '%Y-%m-%d') order by create_date DESC LIMIT ? 
2020-12-05 20:08:09.566 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  ==> Parameters: hualanlan(String), hualanlan(String), 2019-12-06(String), 2020-12-06(String), 10(Integer)
2020-12-05 20:08:09.605 DEBUG c.j.q.modules.ecn.dao.EcnInfoMapper.getEcnInfo[145]  <==      Total: 10
2020-12-05 20:08:09.638 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==>  Preparing: select * from import_export_parameter_mapping b where b.table_name = ? and update_time = (SELECT max( update_time ) FROM import_export_parameter_mapping a where a.table_name = b.table_name AND a.parameter = b.parameter AND a.db_data= b.db_data) 
2020-12-05 20:08:09.638 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  ==> Parameters: ecn_info(String)
2020-12-05 20:08:09.649 DEBUG c.j.q.dao.CommonMapper.getTransferParameter[145]  <==      Total: 9
2020-12-05 20:10:00.005 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 20:10:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 20:10:00.021 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 20:10:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 20:10:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 20:10:00.033 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 20:10:00.039 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 20:10:00.040 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 20:10:00.040 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 20:10:00.108 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 20:10:00.152 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:10:00.355 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==>  Preparing: select count(*) from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:10:00.355 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:10:00.356 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.356 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.364 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  <==      Total: 1
2020-12-05 20:10:00.366 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==>  Preparing: select count(*) from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:10:00.366 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.366 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  <==      Total: 4
2020-12-05 20:10:00.367 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:10:00.367 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.389 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  <==      Total: 1
2020-12-05 20:10:00.390 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==>  Preparing: select count(*) from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:10:00.390 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.416 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  <==      Total: 3
2020-12-05 20:10:00.419 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 20:10:00.421 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.426 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  <==      Total: 1
2020-12-05 20:10:00.427 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==>  Preparing: select count(*) from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:10:00.427 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.434 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  <==      Total: 2
2020-12-05 20:10:00.435 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  <==      Total: 1
2020-12-05 20:10:00.435 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 20:10:00.436 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.436 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==>  Preparing: SELECT count(*) from ecn_info where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:10:00.436 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.442 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  <==      Total: 0
2020-12-05 20:10:00.443 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  <==      Total: 1
2020-12-05 20:10:00.443 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==>  Preparing: SELECT count(*) from external_document where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:10:00.444 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:10:00.444 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.444 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.450 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  <==      Total: 1
2020-12-05 20:10:00.451 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from ecn_info WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 20:10:00.452 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.453 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  <==      Total: 2
2020-12-05 20:10:00.454 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:10:00.454 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.464 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  <==      Total: 2
2020-12-05 20:10:00.465 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from ecn_info where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSEcnProcess' AND task_name = 'Plan' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 20:10:00.466 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.481 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  <==      Total: 1
2020-12-05 20:10:00.482 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from external_document WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 20:10:00.482 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.484 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  <==      Total: 3
2020-12-05 20:10:00.484 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from external_document where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSExternalDocuments' AND task_name = 'Confirm' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 20:10:00.485 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:10:00.493 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  <==      Total: 1
2020-12-05 20:10:00.493 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  <==      Total: 3
2020-12-05 20:11:05.558 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 20:11:05.562 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 20:11:05.609 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 20:11:05.610 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 20:11:05.611 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 20:11:05.666 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 20:11:05.941 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==>  Preparing: select count(*) from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:11:05.942 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.947 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:11:05.947 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.950 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  <==      Total: 1
2020-12-05 20:11:05.951 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==>  Preparing: select count(*) from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:11:05.952 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.955 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  <==      Total: 4
2020-12-05 20:11:05.956 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:11:05.957 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.960 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  <==      Total: 1
2020-12-05 20:11:05.961 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==>  Preparing: select count(*) from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:11:05.961 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.966 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  <==      Total: 3
2020-12-05 20:11:05.968 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 20:11:05.969 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.978 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  <==      Total: 1
2020-12-05 20:11:05.978 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  <==      Total: 2
2020-12-05 20:11:05.979 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==>  Preparing: select count(*) from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:11:05.979 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 20:11:05.980 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.980 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.994 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  <==      Total: 1
2020-12-05 20:11:05.994 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  <==      Total: 0
2020-12-05 20:11:05.996 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==>  Preparing: SELECT count(*) from ecn_info where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:11:05.996 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:11:05.997 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:05.997 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.008 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  <==      Total: 2
2020-12-05 20:11:06.008 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  <==      Total: 1
2020-12-05 20:11:06.009 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 20:11:06.009 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==>  Preparing: SELECT count(*) from external_document where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 20:11:06.010 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.010 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.019 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  <==      Total: 1
2020-12-05 20:11:06.019 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  <==      Total: 2
2020-12-05 20:11:06.020 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from ecn_info WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 20:11:06.020 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from ecn_info where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSEcnProcess' AND task_name = 'Plan' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 20:11:06.020 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.020 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.031 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  <==      Total: 1
2020-12-05 20:11:06.032 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from external_document WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 20:11:06.032 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  <==      Total: 3
2020-12-05 20:11:06.032 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.032 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from external_document where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSExternalDocuments' AND task_name = 'Confirm' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 20:11:06.033 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 20:11:06.048 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  <==      Total: 1
2020-12-05 20:11:06.059 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  <==      Total: 3
2020-12-05 20:12:09.929 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:12:09.990 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:12:09.990 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:12:09.990 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:12:09.991 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:12:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:12:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:12:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:12:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:12:10.000 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:12:10.000 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:12:10.000 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:12:10.004 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:12:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:12:10.005 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:12:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:12:10.006 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:12:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:12:10.010 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:12:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:12:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:12:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:12:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:12:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:12:10.022 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:12:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:12:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:12:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:12:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:12:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:12:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:12:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:12:10.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:12:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:12:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:12:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:12:15.037 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:12:15.037 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:12:15.046 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.046 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.047 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:12:15.047 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:12:15.048 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:12:15.056 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.056 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:12:15.059 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.059 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.065 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.065 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:12:15.072 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:12:15.088 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:12:15.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:12:15.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:12:15.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:12:15.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:12:15.108 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:12:15.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:12:15.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:12:15.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.169 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:12:15.171 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:12:15.171 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.172 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:12:15.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:12:15.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:12:15.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.177 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:12:15.178 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.186 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.211 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:12:15.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.212 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:12:15.213 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:12:15.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.214 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:12:15.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:12:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:12:15.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:12:15.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:12:15.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.232 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:12:15.240 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:12:15.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.243 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:12:15.249 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:12:15.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:12:15.271 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.271 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.271 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:12:15.271 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:12:15.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:12:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:12:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.288 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:12:15.289 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.289 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:12:15.297 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:12:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:12:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.309 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:12:15.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:12:15.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:12:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:12:15.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:12:15.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:12:15.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:12:15.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:12:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.332 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.333 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.333 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:12:15.343 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:12:15.362 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:12:15.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:12:15.368 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:12:15.368 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:12:15.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:12:15.373 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:12:15.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.397 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:12:15.398 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:12:15.398 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:12:15.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:12:15.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:12:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:12:15.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:12:15.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:12:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:12:15.408 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:12:15.408 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:12:15.409 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:12:15.412 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:12:15.413 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:12:15.414 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:12:15.415 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:12:15.415 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:12:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:12:15.472 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:12:15.472 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:12:15.489 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:12:15.518 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:12:15.519 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:12:15.519 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:12:15.531 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:12:15.532 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:12:15.532 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:12:15.551 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:12:15.553 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:12:16.151 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:12:16.207 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:12:16.264 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:17:09.932 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:17:09.938 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:17:09.938 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:17:09.940 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:17:09.940 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:17:09.941 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:17:09.941 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:17:09.941 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:17:09.942 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:17:09.948 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:17:09.950 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:17:09.950 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:17:09.954 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:17:09.955 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.955 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:17:09.958 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:17:09.958 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.958 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:17:09.971 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:17:09.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:17:09.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:17:09.972 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:17:09.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:17:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:17:09.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:09.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:17:09.986 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:17:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:17:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:17:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:17:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:17:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:17:09.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:17:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:17:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:17:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:17:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:17:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:17:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:17:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:17:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:17:15.000 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:17:15.000 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:17:15.005 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:17:15.008 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.009 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:17:15.009 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.010 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:17:15.013 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.013 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:17:15.016 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.019 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.020 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.020 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.020 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:17:15.027 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:17:15.057 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:17:15.058 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:17:15.058 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:17:15.058 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:17:15.059 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:17:15.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:17:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:17:15.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:17:15.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.086 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:17:15.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:17:15.094 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:17:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:17:15.095 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:17:15.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.096 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:17:15.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.127 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:17:15.128 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.128 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:17:15.135 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:17:15.136 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.136 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:17:15.146 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:17:15.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:17:15.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.160 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:17:15.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:17:15.164 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:17:15.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:17:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:17:15.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.178 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:17:15.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:17:15.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:17:15.185 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.185 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:17:15.192 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:17:15.193 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:17:15.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.193 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:17:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:17:15.198 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:17:15.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.199 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:17:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.229 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:17:15.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:17:15.237 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.238 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.238 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:17:15.245 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:17:15.265 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:17:15.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:17:15.269 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:17:15.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:17:15.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:17:15.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:17:15.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:17:15.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.296 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:17:15.296 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:17:15.297 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:17:15.297 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:17:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:17:15.303 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:17:15.303 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:17:15.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:17:15.307 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:17:15.307 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:17:15.307 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:17:15.317 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.322 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:17:15.324 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:17:15.329 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:17:15.329 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:17:15.330 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:17:15.340 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:17:15.340 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:17:15.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:17:15.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:17:15.341 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:17:15.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:17:15.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:17:15.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:17:15.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:17:15.382 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:17:15.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:17:15.401 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:17:15.401 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:17:15.407 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:17:15.408 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:17:15.408 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:17:15.421 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:17:15.422 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:17:15.966 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:17:16.024 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:17:16.037 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:20:00.009 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 20:20:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 20:20:00.018 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 20:20:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 20:20:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 20:20:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 20:20:00.036 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 20:20:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 20:20:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 20:20:00.107 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 20:20:00.112 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:22:09.935 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:22:09.944 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:22:09.945 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:22:09.947 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:22:09.948 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:22:09.952 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:22:09.952 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:22:09.952 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:22:09.953 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:22:09.958 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:22:09.958 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:22:09.959 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:22:09.960 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:22:09.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.961 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:22:09.966 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:22:09.967 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:22:09.966 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:22:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:22:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:22:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:22:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:22:09.969 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:22:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:22:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:22:09.975 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.975 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:22:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:22:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:22:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:22:09.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:22:09.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:22:09.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:22:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:22:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:22:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:22:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:10.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:10.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:22:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:22:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:22:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:22:15.004 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:22:15.004 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:22:15.004 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:22:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:22:15.023 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.023 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:22:15.029 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.029 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:22:15.033 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.033 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.039 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.040 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.040 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:22:15.051 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:22:15.056 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:22:15.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:22:15.072 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:22:15.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:22:15.076 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:22:15.076 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:22:15.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:22:15.085 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:22:15.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.100 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:22:15.101 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.101 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:22:15.107 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:22:15.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:22:15.112 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:22:15.112 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.112 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:22:15.115 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.122 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.178 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:22:15.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:22:15.180 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:22:15.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:22:15.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:22:15.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.284 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:22:15.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:22:15.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:22:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:22:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:22:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:22:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:22:15.293 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.293 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:22:15.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.303 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:22:15.305 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:22:15.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.322 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:22:15.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:22:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:22:15.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:22:15.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.375 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:22:15.377 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:22:15.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:22:15.385 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:22:15.385 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:22:15.386 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.386 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:22:15.397 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:22:15.397 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.397 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:22:15.405 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:22:15.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:22:15.416 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:22:15.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.416 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:22:15.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:22:15.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:22:15.417 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.417 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:22:15.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:22:15.426 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:22:15.477 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:22:15.477 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:22:15.477 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.477 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:22:15.477 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:22:15.477 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:22:15.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:22:15.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:22:15.487 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.487 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:22:15.487 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:22:15.487 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:22:15.489 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:22:15.493 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:22:15.498 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:22:15.519 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:22:15.520 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:22:15.520 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:22:15.520 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:22:15.527 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:22:15.530 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:22:15.530 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:22:15.542 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:22:15.542 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:22:15.542 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:22:15.543 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:22:15.543 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:22:15.557 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:22:15.557 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:22:15.557 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:22:15.565 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:22:15.566 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:22:16.214 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:22:16.259 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:22:16.261 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:27:09.938 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:27:09.948 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:27:09.949 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:27:09.949 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:27:09.949 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:27:09.950 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:27:09.950 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:27:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:27:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:27:09.961 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:27:09.962 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.962 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:27:09.964 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:27:09.964 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:27:09.964 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:27:09.965 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:27:09.966 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:27:09.967 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:27:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:27:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:09.971 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:27:09.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:27:09.972 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:27:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:27:09.980 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:27:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:27:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:27:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:27:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.981 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:27:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:27:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:27:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:27:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:27:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:27:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:27:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:27:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:27:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:27:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:27:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:27:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:27:14.998 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:27:15.000 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:27:15.006 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.006 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.006 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:27:15.006 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:27:15.011 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:27:15.017 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.018 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:27:15.043 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.043 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.044 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.044 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.046 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:27:15.060 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:27:15.066 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:27:15.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:27:15.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.088 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:27:15.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:27:15.096 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:27:15.096 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:27:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:27:15.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:27:15.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:27:15.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:27:15.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:27:15.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:27:15.211 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.222 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:27:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:27:15.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.247 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:27:15.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:27:15.250 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:27:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.251 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:27:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:27:15.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:27:15.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:27:15.266 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.266 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:27:15.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:27:15.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.281 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:27:15.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:27:15.287 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:27:15.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:27:15.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.408 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:27:15.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:27:15.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:27:15.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:27:15.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:27:15.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:27:15.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:27:15.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:27:15.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.424 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.424 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:27:15.438 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:27:15.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:27:15.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.462 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:27:15.462 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:27:15.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:27:15.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:27:15.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:27:15.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:27:15.494 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:27:15.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:27:15.497 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.503 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.503 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.504 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:27:15.510 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:27:15.510 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:27:15.511 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:27:15.511 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:27:15.611 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:27:15.611 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:27:15.611 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.611 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:27:15.612 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:27:15.611 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:27:15.622 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.640 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:27:15.640 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:27:15.640 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:27:15.642 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:27:15.643 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:27:15.643 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:27:15.647 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:27:15.648 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:27:15.648 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:27:15.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:27:15.655 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:27:15.657 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:27:15.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:27:15.675 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:27:15.676 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:27:15.684 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:27:15.706 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:27:15.706 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:27:15.707 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:27:15.715 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:27:15.715 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:27:15.715 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:27:15.818 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:27:15.819 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:27:16.513 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:27:16.636 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:27:16.840 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:30:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 20:30:00.014 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 20:30:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 20:30:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 20:30:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 20:30:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 20:30:00.039 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 20:30:00.039 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 20:30:00.040 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 20:30:00.119 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 20:30:00.126 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:32:09.941 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:32:09.947 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:32:09.947 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:32:09.949 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:32:09.949 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:32:09.948 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:32:09.950 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:32:09.953 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:32:09.953 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:32:09.964 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:32:09.964 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:09.964 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:32:09.967 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:32:09.967 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:32:09.967 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:32:09.967 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:32:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:09.967 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:32:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:32:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:32:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:32:09.993 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:32:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:32:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:32:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:32:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:32:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:32:10.006 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:32:10.007 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:32:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:32:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:32:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:32:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:32:10.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:32:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:32:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:32:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:32:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:32:15.023 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:32:15.023 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:32:15.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.031 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.032 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:32:15.032 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:32:15.035 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:32:15.046 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.046 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:32:15.062 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.064 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.064 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:32:15.074 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:32:15.075 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:32:15.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:32:15.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.116 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:32:15.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:32:15.120 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:32:15.120 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:32:15.121 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:32:15.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:32:15.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.136 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:32:15.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:32:15.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.144 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:32:15.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:32:15.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.180 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:32:15.181 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.181 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:32:15.182 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:32:15.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:32:15.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:32:15.189 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.189 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.189 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:32:15.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:32:15.197 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.197 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:32:15.206 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:32:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:32:15.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.220 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:32:15.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:32:15.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:32:15.221 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.221 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:32:15.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:32:15.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.272 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:32:15.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:32:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:32:15.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.281 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:32:15.288 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:32:15.288 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:32:15.289 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.289 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:32:15.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:32:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:32:15.297 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:32:15.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:32:15.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:32:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:32:15.321 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:32:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:32:15.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:32:15.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.329 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:32:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:32:15.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:32:15.338 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.339 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.339 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:32:15.348 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:32:15.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:32:15.351 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:32:15.351 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:32:15.360 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:32:15.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.361 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:32:15.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:32:15.362 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:32:15.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.369 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:32:15.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:32:15.391 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:32:15.391 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:32:15.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:32:15.394 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:32:15.395 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:32:15.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:32:15.414 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:32:15.414 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:32:15.414 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:32:15.423 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:32:15.424 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:32:15.439 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:32:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:32:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:32:15.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:32:15.469 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:32:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:32:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:32:15.476 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:32:15.477 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:32:15.477 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:32:15.489 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:32:15.490 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:32:16.041 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:32:16.041 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:32:16.168 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:37:09.945 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:37:09.953 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:37:09.954 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:37:09.954 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:37:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:37:09.956 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:37:09.956 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:37:09.956 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:37:09.957 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:37:09.973 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:37:09.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.974 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:37:09.975 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:37:09.975 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:37:09.976 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:37:09.976 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:37:09.976 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:37:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:37:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:37:09.983 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:09.983 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.983 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:37:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:09.987 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:37:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:37:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:37:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:37:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:37:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:37:09.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:37:09.997 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:37:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:37:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:37:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:37:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:37:10.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.017 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:37:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:37:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:37:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:37:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:37:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:37:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:37:15.008 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:37:15.008 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:37:15.021 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:37:15.023 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:37:15.030 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:37:15.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.039 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.040 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:37:15.055 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.056 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.056 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:37:15.062 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:37:15.064 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:37:15.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:37:15.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.088 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:37:15.088 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:37:15.088 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:37:15.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:37:15.099 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:37:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:37:15.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.124 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:37:15.125 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.125 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:37:15.129 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:37:15.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:37:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.176 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:37:15.183 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:37:15.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.183 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:37:15.184 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:37:15.190 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:37:15.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:37:15.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:37:15.201 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.201 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:37:15.207 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:37:15.209 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.210 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:37:15.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:37:15.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:37:15.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.218 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:37:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:37:15.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:37:15.227 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.251 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:37:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:37:15.253 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:37:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:37:15.259 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:37:15.259 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.259 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:37:15.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:37:15.266 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:37:15.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:37:15.275 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:37:15.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:37:15.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:37:15.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:37:15.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:37:15.296 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:37:15.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.296 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:37:15.306 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.307 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.307 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:37:15.314 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:37:15.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.315 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:37:15.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:37:15.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:37:15.320 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:37:15.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.322 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:37:15.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:37:15.332 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.332 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:37:15.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:37:15.333 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:37:15.357 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:37:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:37:15.359 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:37:15.359 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:37:15.359 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:37:15.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.369 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:37:15.369 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:37:15.369 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:37:15.378 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:37:15.379 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:37:15.387 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:37:15.387 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:37:15.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:37:15.395 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:37:15.422 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:37:15.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:37:15.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:37:15.431 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:37:15.454 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:37:15.455 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:37:15.455 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:37:15.465 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:37:15.467 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:37:15.467 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:37:15.480 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:37:15.482 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:37:15.962 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:37:16.009 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:37:16.134 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:40:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 20:40:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 20:40:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 20:40:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 20:40:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 20:40:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 20:40:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 20:40:00.032 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 20:40:00.032 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 20:40:00.109 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 20:40:00.114 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:42:09.948 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:42:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:42:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:42:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:42:09.955 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:42:09.956 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:42:09.956 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:42:09.957 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:42:09.957 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:42:09.967 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:42:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.967 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:42:09.968 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:42:09.968 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.968 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:42:09.970 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:42:09.970 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:42:09.970 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:42:09.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:42:09.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:42:09.978 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:42:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:42:09.984 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:42:09.984 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:42:09.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:42:09.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:42:09.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.985 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:42:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:42:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:42:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:42:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:42:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:42:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:42:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:42:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:42:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:42:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:42:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:42:14.998 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:42:14.998 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:42:15.006 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:42:15.008 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.008 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.008 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:42:15.008 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:42:15.013 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.013 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:42:15.017 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.017 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.023 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.023 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:42:15.034 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:42:15.051 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:42:15.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:42:15.062 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:42:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:42:15.065 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:42:15.065 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:42:15.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.066 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:42:15.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:42:15.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.091 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:42:15.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:42:15.094 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:42:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.095 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:42:15.098 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:42:15.098 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.098 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:42:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.104 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.105 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.132 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:42:15.133 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:42:15.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:42:15.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:42:15.135 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:42:15.135 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.135 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:42:15.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:42:15.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:42:15.146 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.146 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:42:15.154 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:42:15.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:42:15.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.170 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:42:15.170 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.171 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:42:15.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:42:15.179 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.194 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:42:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:42:15.251 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:42:15.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:42:15.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.269 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.271 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:42:15.284 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:42:15.285 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:42:15.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.285 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:42:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:42:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:42:15.297 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:42:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:42:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:42:15.325 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:42:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:42:15.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:42:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:42:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:42:15.336 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.337 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.337 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:42:15.345 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:42:15.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:42:15.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:42:15.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.359 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:42:15.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:42:15.360 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:42:15.371 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.371 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:42:15.371 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:42:15.372 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:42:15.428 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:42:15.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:42:15.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:42:15.430 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:42:15.430 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:42:15.430 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:42:15.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:42:15.441 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:42:15.441 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:42:15.441 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:42:15.450 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:42:15.451 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:42:15.465 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:42:15.466 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:42:15.466 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:42:15.472 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:42:15.493 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:42:15.493 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:42:15.494 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:42:15.514 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:42:15.515 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:42:15.515 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:42:15.527 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:42:15.528 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:42:16.034 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:42:16.058 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:42:16.192 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:47:09.951 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:47:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:47:10.011 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:47:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:47:10.010 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:47:10.011 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:47:10.011 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:47:10.017 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:47:10.017 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:47:10.034 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:47:10.034 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:47:10.034 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:47:10.035 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:47:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:47:10.035 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:47:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:47:10.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:47:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:47:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.045 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:47:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:47:10.054 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:47:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:47:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:47:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:47:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:47:10.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:47:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:47:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:47:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:47:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:47:10.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:47:10.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:10.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:10.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:47:10.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:47:15.098 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:47:15.098 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:47:15.098 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:47:15.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.108 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:47:15.109 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.109 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:47:15.113 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.113 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:47:15.119 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.119 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.121 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.121 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:47:15.123 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.135 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:47:15.162 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:47:15.173 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:47:15.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:47:15.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:47:15.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:47:15.175 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:47:15.178 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:47:15.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.191 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:47:15.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.206 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:47:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:47:15.212 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:47:15.212 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.212 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:47:15.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.220 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:47:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:47:15.230 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.280 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:47:15.280 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:47:15.281 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.281 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:47:15.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:47:15.282 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:47:15.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:47:15.289 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:47:15.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.289 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.290 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.290 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:47:15.290 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:47:15.301 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:47:15.301 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:47:15.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.324 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:47:15.324 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.324 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:47:15.327 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:47:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:47:15.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.336 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.345 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:47:15.345 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.345 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:47:15.352 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:47:15.352 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.352 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:47:15.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:47:15.356 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.356 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:47:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:47:15.362 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:47:15.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.365 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:47:15.389 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.389 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:47:15.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:47:15.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:47:15.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:47:15.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:47:15.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:47:15.419 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:47:15.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:47:15.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.430 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.430 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:47:15.442 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:47:15.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:47:15.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:47:15.446 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:47:15.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.446 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:47:15.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:47:15.458 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.458 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:47:15.459 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:47:15.577 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:47:15.581 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:47:15.581 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:47:15.582 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:47:15.599 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:47:15.600 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:47:15.600 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:47:15.611 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:47:15.612 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:47:15.613 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:47:15.613 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:47:15.625 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:47:15.626 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:47:15.642 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:47:15.643 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:47:15.643 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:47:15.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:47:15.685 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:47:15.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:47:15.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:47:15.697 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:47:15.697 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:47:15.697 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:47:15.714 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:47:15.715 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:47:16.202 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:47:16.250 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:47:16.441 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:50:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 20:50:00.014 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 20:50:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 20:50:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 20:50:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 20:50:00.028 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 20:50:00.037 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 20:50:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 20:50:00.038 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 20:50:00.107 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 20:50:00.111 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:52:09.954 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:52:09.960 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:52:09.960 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:52:09.961 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:52:09.961 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:52:09.962 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:52:09.962 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:52:09.962 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:52:09.962 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:52:09.968 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:52:09.968 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:52:09.969 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:52:09.975 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:52:09.976 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:52:09.975 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:52:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:52:09.975 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:52:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:52:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:52:09.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.976 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:52:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:52:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:52:09.987 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:52:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:52:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:52:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:52:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:52:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:52:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:52:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:09.998 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:52:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:52:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:52:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:52:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:52:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:52:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:52:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:52:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:52:10.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:52:15.187 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:52:15.187 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:52:15.187 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:52:15.187 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:52:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:52:15.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:52:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:52:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:52:15.205 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.205 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.205 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.206 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.206 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:52:15.216 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:52:15.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:52:15.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:52:15.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:52:15.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:52:15.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:52:15.263 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:52:15.263 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:52:15.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.271 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:52:15.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:52:15.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:52:15.295 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:52:15.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:52:15.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:52:15.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:52:15.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:52:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:52:15.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:52:15.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:52:15.333 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.333 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:52:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:52:15.338 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.343 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:52:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.343 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.344 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:52:15.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:52:15.351 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:52:15.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:52:15.359 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:52:15.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.359 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:52:15.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:52:15.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:52:15.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:52:15.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:52:15.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.391 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:52:15.393 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.393 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:52:15.393 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.393 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:52:15.398 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:52:15.403 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:52:15.403 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.403 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:52:15.418 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:52:15.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:52:15.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:52:15.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:52:15.424 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:52:15.424 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:52:15.424 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:52:15.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:52:15.436 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:52:15.437 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:52:15.439 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.479 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:52:15.479 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.479 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:52:15.483 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:52:15.483 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.483 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:52:15.490 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.490 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.491 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:52:15.492 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.501 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:52:15.516 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:52:15.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:52:15.517 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:52:15.520 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:52:15.524 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:52:15.545 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:52:15.545 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:52:15.545 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:52:15.550 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:52:15.551 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:52:15.551 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:52:15.553 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:52:15.553 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:52:15.553 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:52:15.557 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:52:15.561 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:52:15.562 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:52:15.584 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:52:15.585 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:52:15.585 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:52:15.592 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:52:15.592 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:52:15.592 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:52:15.605 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:52:15.606 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:52:16.096 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:52:16.171 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:52:16.247 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:57:09.957 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 20:57:09.963 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:57:09.963 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 20:57:09.963 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 20:57:09.963 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 20:57:09.964 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:57:09.965 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 20:57:09.966 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 20:57:09.966 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 20:57:09.970 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 20:57:09.970 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 20:57:09.970 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 20:57:09.978 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 20:57:09.978 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 20:57:09.978 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 20:57:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.978 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 20:57:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 20:57:09.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 20:57:09.979 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 20:57:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 20:57:09.980 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 20:57:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 20:57:09.987 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 20:57:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 20:57:09.988 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 20:57:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 20:57:09.989 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 20:57:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 20:57:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 20:57:09.999 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 20:57:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 20:57:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 20:57:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 20:57:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.021 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 20:57:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 20:57:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 20:57:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 20:57:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 20:57:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:57:15.006 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:57:15.006 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:57:15.010 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:57:15.014 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.014 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:57:15.014 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.014 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:57:15.015 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.016 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:57:15.021 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.022 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.022 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.022 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:57:15.030 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:57:15.056 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 20:57:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 20:57:15.068 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:57:15.068 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 20:57:15.069 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:57:15.069 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:57:15.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 20:57:15.070 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 20:57:15.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.092 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:57:15.092 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:57:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:57:15.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 20:57:15.099 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.103 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:57:15.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.104 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:57:15.112 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.123 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:57:15.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 20:57:15.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.133 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:57:15.133 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:57:15.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:57:15.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 20:57:15.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 20:57:15.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:57:15.147 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.147 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:57:15.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.155 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:57:15.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.157 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 20:57:15.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.189 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:57:15.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.190 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 20:57:15.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:57:15.192 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.192 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:57:15.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 20:57:15.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:57:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.203 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 20:57:15.203 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.204 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 20:57:15.216 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 20:57:15.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:57:15.226 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 20:57:15.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 20:57:15.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:57:15.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 20:57:15.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:57:15.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.236 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 20:57:15.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.249 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:57:15.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.250 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:57:15.252 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 20:57:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 20:57:15.256 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.257 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.257 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 20:57:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 20:57:15.264 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 20:57:15.289 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 20:57:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 20:57:15.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 20:57:15.295 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 20:57:15.295 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:57:15.296 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:57:15.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.308 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:57:15.309 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 20:57:15.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 20:57:15.328 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 20:57:15.330 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 20:57:15.330 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 20:57:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 20:57:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 20:57:15.337 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 20:57:15.338 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:57:15.338 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:57:15.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 20:57:15.351 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:57:15.352 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 20:57:15.366 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 20:57:15.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 20:57:15.367 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 20:57:15.372 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 20:57:15.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 20:57:15.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 20:57:15.406 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 20:57:15.415 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 20:57:15.415 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 20:57:15.416 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 20:57:15.425 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 20:57:15.426 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 20:57:15.919 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:57:15.929 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 20:57:16.101 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:00:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 21:00:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 21:00:00.020 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 21:00:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 21:00:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 21:00:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 21:00:00.040 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 21:00:00.041 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 21:00:00.041 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 21:00:00.107 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 21:00:00.112 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:02:09.960 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:02:09.969 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:02:09.969 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:02:09.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:02:09.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:02:09.970 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:02:09.970 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:02:09.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:02:09.970 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:02:09.980 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:02:09.981 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:02:09.981 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:02:09.985 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:02:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:09.986 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:02:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:02:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:09.986 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:02:09.988 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:02:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:09.988 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:02:09.991 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:02:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:02:09.992 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:02:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:09.993 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:02:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:02:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:02:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:02:10.001 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:02:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:02:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:02:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:02:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:02:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:02:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:02:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:02:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:02:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:02:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:02:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:02:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:02:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:02:15.021 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:02:15.022 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:02:15.031 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:02:15.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:02:15.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.034 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:02:15.041 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.042 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.042 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.042 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:02:15.050 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.050 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.051 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:02:15.067 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:02:15.084 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:02:15.085 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:02:15.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.085 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:02:15.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:02:15.086 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:02:15.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:02:15.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:02:15.095 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:02:15.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.126 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:02:15.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:02:15.129 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:02:15.129 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.130 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:02:15.132 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:02:15.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:02:15.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.161 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:02:15.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:02:15.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.172 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:02:15.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.184 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:02:15.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:02:15.185 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:02:15.185 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.185 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:02:15.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.195 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:02:15.195 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.195 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:02:15.201 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:02:15.201 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:02:15.209 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:02:15.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.211 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:02:15.212 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:02:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:02:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.295 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:02:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:02:15.303 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:02:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:02:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.304 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:02:15.308 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:02:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:02:15.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:02:15.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.316 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:02:15.316 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.316 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:02:15.326 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:02:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:02:15.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:02:15.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:02:15.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:02:15.391 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:02:15.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:02:15.394 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.394 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:02:15.401 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:02:15.401 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.401 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.402 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:02:15.412 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:02:15.426 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:02:15.426 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:02:15.427 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:02:15.427 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:02:15.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:02:15.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:02:15.432 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:02:15.436 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:02:15.437 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:02:15.438 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:02:15.460 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:02:15.460 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:02:15.460 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:02:15.466 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:02:15.466 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:02:15.466 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:02:15.478 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:02:15.478 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:02:15.478 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:02:15.478 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:02:15.492 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:02:15.493 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:02:15.501 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:02:15.501 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:02:15.501 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:02:15.508 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:02:15.508 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:02:15.509 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:02:15.529 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:02:15.530 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:02:16.117 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:02:16.133 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:02:16.224 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:07:09.964 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:07:09.971 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:07:09.972 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:07:09.972 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:07:09.972 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:07:09.972 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:07:09.974 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:07:09.974 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:07:09.974 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:07:09.982 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:07:09.982 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:07:09.982 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:07:09.988 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:07:09.989 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:07:09.989 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:07:09.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:09.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:09.990 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:07:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:07:09.991 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:07:10.005 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:07:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:07:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:07:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:07:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:07:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:07:10.013 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:07:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:07:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:07:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:07:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:07:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.028 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:07:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:07:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:07:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:07:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:07:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:07:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:07:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:07:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:10.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:10.079 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:07:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:07:15.043 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:07:15.043 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:07:15.043 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:07:15.051 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.051 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:07:15.051 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.051 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:07:15.052 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.052 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:07:15.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.060 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.060 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:07:15.068 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:07:15.088 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:07:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:07:15.106 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:07:15.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.106 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:07:15.106 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:07:15.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:07:15.108 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:07:15.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:07:15.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.132 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:07:15.132 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.133 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:07:15.135 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:07:15.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:07:15.142 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:07:15.142 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:07:15.143 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.145 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.155 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:07:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:07:15.197 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:07:15.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:07:15.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:07:15.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.202 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:07:15.204 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:07:15.210 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:07:15.210 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.211 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:07:15.218 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:07:15.218 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:07:15.231 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:07:15.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:07:15.241 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:07:15.241 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.241 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:07:15.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.249 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:07:15.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:07:15.267 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:07:15.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.268 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:07:15.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:07:15.269 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:07:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:07:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:07:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:07:15.276 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.276 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:07:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.286 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:07:15.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:07:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.299 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:07:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:07:15.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:07:15.311 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.311 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:07:15.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:07:15.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.322 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:07:15.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:07:15.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.331 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.331 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:07:15.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:07:15.338 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:07:15.338 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:07:15.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:07:15.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:07:15.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:07:15.342 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:07:15.345 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:07:15.346 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:07:15.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:07:15.366 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:07:15.372 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:07:15.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:07:15.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:07:15.381 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:07:15.387 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:07:15.388 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:07:15.388 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:07:15.397 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:07:15.397 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:07:15.397 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:07:15.408 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:07:15.408 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:07:15.408 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:07:15.408 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:07:15.409 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:07:15.415 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:07:15.415 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:07:15.416 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:07:15.425 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:07:15.426 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:07:15.965 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:07:16.069 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:07:16.092 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:08:21.767 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==>  Preparing: select count(*) from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:08:21.768 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.769 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:08:21.769 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.775 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  <==      Total: 1
2020-12-05 21:08:21.777 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==>  Preparing: select count(*) from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:08:21.777 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  <==      Total: 4
2020-12-05 21:08:21.777 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.778 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 21:08:21.778 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.784 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  <==      Total: 1
2020-12-05 21:08:21.785 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==>  Preparing: SELECT count(*) from ecn_info where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:08:21.785 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.789 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  <==      Total: 2
2020-12-05 21:08:21.791 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:08:21.791 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.793 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  <==      Total: 1
2020-12-05 21:08:21.794 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from ecn_info WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 21:08:21.794 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.799 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  <==      Total: 2
2020-12-05 21:08:21.799 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from ecn_info where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSEcnProcess' AND task_name = 'Plan' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 21:08:21.800 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:21.803 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  <==      Total: 1
2020-12-05 21:08:21.810 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  <==      Total: 3
2020-12-05 21:08:32.372 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==>  Preparing: select count(*) from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:08:32.372 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:08:32.374 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.374 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.381 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  <==      Total: 1
2020-12-05 21:08:32.382 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  <==      Total: 3
2020-12-05 21:08:32.382 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==>  Preparing: select count(*) from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:08:32.384 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.385 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 21:08:32.385 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.391 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  <==      Total: 1
2020-12-05 21:08:32.391 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==>  Preparing: SELECT count(*) from external_document where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:08:32.392 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.393 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  <==      Total: 0
2020-12-05 21:08:32.394 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:08:32.394 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.397 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  <==      Total: 1
2020-12-05 21:08:32.397 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from external_document WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 21:08:32.398 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.402 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  <==      Total: 2
2020-12-05 21:08:32.403 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from external_document where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSExternalDocuments' AND task_name = 'Confirm' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 21:08:32.403 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:08:32.406 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  <==      Total: 1
2020-12-05 21:08:32.418 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  <==      Total: 3
2020-12-05 21:10:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 21:10:01.403 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 21:10:01.405 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 21:10:01.420 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 21:10:01.422 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 21:10:01.422 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 21:10:01.433 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 21:10:01.434 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 21:10:01.434 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 21:10:01.507 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 21:10:01.512 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:12:09.967 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:12:10.066 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:12:10.066 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:12:10.067 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:12:10.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:12:10.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:12:10.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:12:10.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:12:10.069 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:12:10.075 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:12:10.075 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:12:10.076 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:12:10.086 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:12:10.086 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:12:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:12:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:12:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:12:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:12:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.095 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:12:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:12:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:12:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:12:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:12:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:12:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:12:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:12:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:12:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:12:10.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:12:10.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:12:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:12:10.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:12:10.169 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:12:10.271 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:12:10.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:12:10.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.281 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:12:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:12:10.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:10.356 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:12:10.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:10.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:12:10.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.142 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:12:15.155 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.155 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:12:15.167 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.168 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.168 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:12:15.169 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:12:15.177 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:12:15.176 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.177 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:12:15.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:12:15.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:12:15.221 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.221 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:12:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.246 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:12:15.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:12:15.257 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:12:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:12:15.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.291 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:12:15.291 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:12:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:12:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:12:15.297 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:12:15.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:12:15.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.304 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:12:15.304 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.305 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:12:15.311 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:12:15.311 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:12:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.331 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:12:15.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:12:15.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:12:15.341 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:12:15.344 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:12:15.359 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:12:15.359 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.360 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:12:15.366 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:12:15.366 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:12:15.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.366 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.367 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:12:15.367 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:12:15.368 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:12:15.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.374 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:12:15.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:12:15.375 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:12:15.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:12:15.380 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.399 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:12:15.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:12:15.399 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:12:15.402 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:12:15.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:12:15.404 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:12:15.404 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.404 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:12:15.407 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:12:15.408 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:12:15.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:12:15.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.412 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.413 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:12:15.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.421 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:12:15.435 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:12:15.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.435 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:12:15.441 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:12:15.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.464 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:12:15.465 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:12:15.465 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:12:15.468 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:12:15.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:12:15.471 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:12:15.472 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:12:15.472 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:12:15.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.475 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:12:15.478 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:12:15.479 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:12:15.483 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.506 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:12:15.506 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.506 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:12:15.513 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.530 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:12:15.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:12:15.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.536 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:12:15.547 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.565 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:12:15.565 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.565 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:12:15.574 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.596 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:12:15.597 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:12:15.597 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:12:15.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:12:15.636 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:12:15.637 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:12:15.637 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:12:15.648 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:12:15.668 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:12:15.668 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:12:15.668 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:12:15.675 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:12:15.675 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:12:15.675 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:12:15.685 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:12:15.686 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:12:16.025 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:12:16.092 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:12:16.280 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:17:09.970 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:17:09.977 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:17:09.977 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:17:09.978 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:17:09.978 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:17:09.979 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:17:09.979 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:17:09.979 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:17:09.979 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:17:09.989 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:17:09.990 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:17:09.990 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:17:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:17:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:17:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:17:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:17:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:17:09.995 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:09.997 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:17:10.000 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:17:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:17:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:17:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:17:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:17:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:17:10.010 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:17:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:17:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:17:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:17:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:17:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:17:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:17:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:17:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:17:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:17:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:17:10.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:17:10.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:17:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:17:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:17:15.222 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:17:15.222 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:17:15.222 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:17:15.222 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:17:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:17:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:17:15.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.233 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:17:15.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:17:15.239 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.239 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.240 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.241 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.242 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.242 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:17:15.252 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:17:15.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:17:15.320 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:17:15.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:17:15.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:17:15.320 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.320 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:17:15.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.321 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:17:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:17:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.328 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:17:15.339 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.398 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:17:15.400 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:17:15.405 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:17:15.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:17:15.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:17:15.406 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.406 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:17:15.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.414 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:17:15.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:17:15.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:17:15.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.446 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.447 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:17:15.447 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:17:15.447 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:17:15.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:17:15.457 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.458 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:17:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:17:15.489 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.493 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:17:15.495 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.496 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:17:15.519 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:17:15.519 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:17:15.520 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.520 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.520 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:17:15.520 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:17:15.523 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.527 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.527 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:17:15.552 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:17:15.552 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.552 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:17:15.553 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:17:15.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:17:15.556 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:17:15.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:17:15.558 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.558 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.558 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:17:15.561 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:17:15.564 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:17:15.564 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.564 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:17:15.564 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.571 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:17:15.574 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.574 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:17:15.582 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.585 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:17:15.585 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:17:15.586 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:17:15.589 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:17:15.590 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.590 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:17:15.593 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:17:15.594 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:17:15.596 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.605 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:17:15.606 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.606 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:17:15.613 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.613 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.614 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:17:15.618 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:17:15.618 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:17:15.619 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:17:15.622 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:17:15.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:17:15.651 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:17:15.654 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:17:15.655 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:17:15.655 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:17:15.664 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:17:15.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:17:15.676 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:17:15.676 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:17:15.685 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:17:15.685 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:17:15.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:17:15.686 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:17:15.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:17:15.686 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:17:15.692 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:17:15.693 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:17:15.693 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:17:15.693 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:17:15.693 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:17:15.710 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:17:15.711 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:17:16.271 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:17:16.307 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:17:16.411 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:20:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 21:20:00.018 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 21:20:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 21:20:00.051 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 21:20:00.051 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 21:20:00.053 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 21:20:00.080 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 21:20:00.080 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 21:20:00.080 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 21:20:00.146 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 21:20:00.150 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:20:32.645 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 21:20:32.646 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 21:20:32.685 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 21:20:32.686 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 21:20:32.687 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 21:20:32.724 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 21:20:32.845 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 21:20:32.846 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 21:20:32.859 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 21:20:32.870 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==>  Preparing: select DISTINCT department from department_mapping where type = ? and department is not null 
2020-12-05 21:20:32.872 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  ==> Parameters: COMMON(String)
2020-12-05 21:20:32.881 DEBUG c.j.q.dao.UserMapper.getDepartmentList[145]  <==      Total: 21
2020-12-05 21:20:41.443 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:20:41.443 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==>  Preparing: select count(*) from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:20:41.444 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.445 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.453 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  <==      Total: 1
2020-12-05 21:20:41.453 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  <==      Total: 4
2020-12-05 21:20:41.453 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==>  Preparing: select count(*) from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:20:41.455 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.456 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:20:41.456 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.466 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  <==      Total: 1
2020-12-05 21:20:41.467 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  <==      Total: 3
2020-12-05 21:20:41.468 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 21:20:41.467 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==>  Preparing: select count(*) from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:20:41.468 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.469 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.479 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  <==      Total: 2
2020-12-05 21:20:41.479 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  <==      Total: 1
2020-12-05 21:20:41.480 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==>  Preparing: select count(*) from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:20:41.480 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 21:20:41.480 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.480 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.490 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  <==      Total: 1
2020-12-05 21:20:41.490 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  <==      Total: 0
2020-12-05 21:20:41.492 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==>  Preparing: SELECT count(*) from ecn_info where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:20:41.492 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:20:41.493 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.493 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.500 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  <==      Total: 1
2020-12-05 21:20:41.500 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==>  Preparing: SELECT count(*) from external_document where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:20:41.501 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.501 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  <==      Total: 2
2020-12-05 21:20:41.501 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:20:41.502 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.514 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  <==      Total: 1
2020-12-05 21:20:41.514 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  <==      Total: 2
2020-12-05 21:20:41.515 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from ecn_info WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 21:20:41.515 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from ecn_info where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSEcnProcess' AND task_name = 'Plan' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 21:20:41.515 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.515 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.524 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  <==      Total: 1
2020-12-05 21:20:41.525 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from external_document WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 21:20:41.526 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.531 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  <==      Total: 3
2020-12-05 21:20:41.532 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from external_document where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSExternalDocuments' AND task_name = 'Confirm' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 21:20:41.532 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:20:41.537 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  <==      Total: 1
2020-12-05 21:20:41.545 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  <==      Total: 3
2020-12-05 21:22:09.973 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:22:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:22:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:22:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:22:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:22:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:22:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:22:09.984 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:22:09.984 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:22:09.994 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:22:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:22:09.994 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:22:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:09.994 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:22:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:22:09.994 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:22:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:09.996 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:22:10.001 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:22:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.001 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:22:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.004 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:22:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:22:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:22:10.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:22:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.009 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:22:10.019 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:22:10.019 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:22:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:22:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:22:10.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:22:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:22:10.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:22:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:22:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:22:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:22:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:22:15.031 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:22:15.031 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:22:15.045 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:22:15.047 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.048 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:22:15.050 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.050 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:22:15.054 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.055 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:22:15.058 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.060 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.065 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.065 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.065 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:22:15.082 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:22:15.085 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:22:15.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:22:15.099 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:22:15.099 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:22:15.099 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:22:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:22:15.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:22:15.133 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:22:15.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.137 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:22:15.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:22:15.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.157 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:22:15.157 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:22:15.157 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.157 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:22:15.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:22:15.165 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.167 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:22:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:22:15.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.194 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:22:15.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.195 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:22:15.204 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:22:15.204 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.204 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:22:15.207 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.208 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:22:15.209 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:22:15.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.209 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:22:15.214 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:22:15.214 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.214 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:22:15.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.223 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:22:15.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.227 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:22:15.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.242 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:22:15.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:22:15.247 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:22:15.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:22:15.253 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:22:15.296 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:22:15.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.297 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:22:15.303 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:22:15.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:22:15.306 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:22:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:22:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:22:15.308 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.308 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:22:15.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.311 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:22:15.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:22:15.317 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:22:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.321 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:22:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:22:15.343 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:22:15.343 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:22:15.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:22:15.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:22:15.355 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:22:15.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:22:15.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:22:15.356 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:22:15.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.365 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.365 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:22:15.379 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:22:15.388 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:22:15.389 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:22:15.389 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:22:15.399 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:22:15.399 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:22:15.426 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:22:15.426 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:22:15.426 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:22:15.430 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:22:15.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:22:15.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:22:15.447 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:22:15.447 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:22:15.448 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:22:15.448 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:22:15.459 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:22:15.460 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:22:15.468 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:22:15.468 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:22:15.468 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:22:15.475 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:22:15.476 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:22:15.476 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:22:15.487 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:22:15.488 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:22:16.100 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:22:16.136 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:22:16.233 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:27:09.976 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:27:09.983 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:27:09.983 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:27:09.984 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:27:09.984 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:27:09.985 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:27:09.985 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:27:09.987 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:27:09.987 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:27:09.994 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:27:09.995 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:27:09.995 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:27:10.009 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:27:10.010 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:27:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:27:10.010 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:27:10.010 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:27:10.010 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:27:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:27:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:27:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:27:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.026 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.027 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:27:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:27:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:27:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:27:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:27:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:27:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:27:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:27:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:27:10.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:27:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:27:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:27:10.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:10.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:10.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:27:10.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:27:15.070 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:27:15.070 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:27:15.078 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.078 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:27:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:27:15.084 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:27:15.086 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:27:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.107 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.107 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.107 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:27:15.117 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:27:15.136 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:27:15.136 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:27:15.136 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:27:15.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:27:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:27:15.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.160 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:27:15.166 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:27:15.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.183 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:27:15.192 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:27:15.215 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:27:15.215 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.215 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:27:15.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:27:15.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:27:15.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:27:15.264 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:27:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:27:15.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:27:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:27:15.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:27:15.281 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:27:15.281 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.282 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:27:15.287 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.290 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:27:15.293 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:27:15.302 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:27:15.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.302 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:27:15.311 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:27:15.312 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.312 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:27:15.322 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.322 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.346 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:27:15.347 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.347 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:27:15.357 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:27:15.357 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:27:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:27:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:27:15.367 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:27:15.367 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.367 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:27:15.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:27:15.373 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.374 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:27:15.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:27:15.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:27:15.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:27:15.409 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:27:15.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.409 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.409 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.410 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:27:15.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:27:15.410 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:27:15.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.420 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:27:15.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:27:15.477 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:27:15.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:27:15.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:27:15.485 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:27:15.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:27:15.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:27:15.499 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:27:15.499 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:27:15.507 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:27:15.526 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:27:15.526 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:27:15.527 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:27:15.538 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:27:15.538 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:27:15.538 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:27:15.538 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:27:15.538 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:27:15.538 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:27:15.538 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:27:15.539 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:27:15.548 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:27:15.552 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:27:15.552 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:27:15.552 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:27:15.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:27:15.561 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:27:15.607 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:27:15.607 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:27:15.607 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:27:15.620 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:27:15.620 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:27:15.620 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:27:15.635 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:27:15.636 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:27:16.240 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:27:16.272 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:27:16.359 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:30:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 21:30:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 21:30:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 21:30:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 21:30:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 21:30:00.032 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 21:30:00.040 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 21:30:00.040 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 21:30:00.041 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 21:30:00.105 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 21:30:00.127 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:32:09.979 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:32:09.987 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:32:09.987 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:32:09.987 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:32:09.987 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:32:09.988 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:32:09.988 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:32:09.989 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:32:09.989 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:32:09.997 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:32:09.997 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:32:09.997 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:32:10.000 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:32:10.002 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:32:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:32:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:32:10.003 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:32:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.003 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:32:10.006 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:32:10.006 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:32:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.011 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:32:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.012 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:32:10.013 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:32:10.018 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:32:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:32:10.018 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:32:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.020 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:32:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.023 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:32:10.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:32:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:32:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:32:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:32:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:32:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:32:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:32:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:32:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:32:10.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:32:15.043 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:32:15.043 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:32:15.052 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:32:15.052 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.053 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:32:15.056 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.056 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:32:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:32:15.062 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.069 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.069 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.069 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:32:15.077 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:32:15.100 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:32:15.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.101 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:32:15.102 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:32:15.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:32:15.103 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:32:15.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:32:15.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:32:15.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.132 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:32:15.145 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:32:15.145 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:32:15.146 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:32:15.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:32:15.154 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.155 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:32:15.156 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:32:15.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.184 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:32:15.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.184 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:32:15.184 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:32:15.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.185 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:32:15.190 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:32:15.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:32:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:32:15.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.210 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:32:15.210 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.210 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:32:15.215 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:32:15.215 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.215 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:32:15.217 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:32:15.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:32:15.224 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.233 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:32:15.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:32:15.242 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.253 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:32:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:32:15.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:32:15.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.262 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:32:15.264 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:32:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:32:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:32:15.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:32:15.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:32:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:32:15.296 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:32:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.298 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:32:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.308 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:32:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:32:15.316 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:32:15.316 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.316 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:32:15.317 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:32:15.323 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.329 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:32:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:32:15.336 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.336 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.336 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:32:15.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:32:15.341 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:32:15.341 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:32:15.343 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:32:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:32:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:32:15.345 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:32:15.350 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:32:15.352 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:32:15.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:32:15.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:32:15.408 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:32:15.409 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:32:15.409 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:32:15.411 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:32:15.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:32:15.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:32:15.417 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:32:15.418 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:32:15.418 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:32:15.419 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:32:15.425 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:32:15.426 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:32:15.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:32:15.438 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:32:15.438 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:32:15.446 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:32:15.447 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:32:15.447 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:32:15.457 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:32:15.458 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:32:16.017 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:32:16.092 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:32:16.124 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:37:09.984 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:37:09.990 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:37:09.990 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:37:09.991 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:37:09.991 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:37:09.991 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:37:09.993 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:37:09.994 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:37:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:37:10.000 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:37:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.000 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:37:10.002 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:37:10.002 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:37:10.002 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:37:10.002 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:37:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.002 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:37:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.008 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:37:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:37:10.008 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:37:10.014 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:37:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:37:10.014 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:37:10.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.015 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:37:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.016 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:37:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:37:10.085 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:37:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:37:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:37:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:37:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:37:10.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:37:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:37:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:37:10.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:37:10.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:37:10.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:37:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:37:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:37:10.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:37:15.101 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:37:15.103 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:37:15.110 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:37:15.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:37:15.111 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:37:15.116 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.116 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:37:15.123 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.123 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.126 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.126 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.127 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:37:15.138 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:37:15.147 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:37:15.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:37:15.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.171 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:37:15.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:37:15.172 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:37:15.172 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:37:15.176 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:37:15.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.182 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:37:15.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:37:15.200 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:37:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.200 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:37:15.202 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:37:15.213 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.213 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:37:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.223 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:37:15.234 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.239 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:37:15.240 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:37:15.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.240 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:37:15.240 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:37:15.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.247 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:37:15.248 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.248 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:37:15.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:37:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:37:15.260 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:37:15.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:37:15.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.270 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:37:15.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.270 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:37:15.270 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:37:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.286 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.329 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:37:15.329 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:37:15.329 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:37:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:37:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:37:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:37:15.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:37:15.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:37:15.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.340 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.340 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:37:15.356 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:37:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:37:15.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.371 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:37:15.371 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:37:15.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:37:15.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:37:15.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:37:15.382 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:37:15.391 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.391 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:37:15.391 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.391 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:37:15.403 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.403 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:37:15.404 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.404 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:37:15.404 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:37:15.404 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:37:15.411 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:37:15.411 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:37:15.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:37:15.412 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:37:15.412 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:37:15.420 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.434 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:37:15.442 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:37:15.442 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:37:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:37:15.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:37:15.459 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:37:15.460 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:37:15.460 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:37:15.473 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:37:15.473 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:37:15.473 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:37:15.478 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:37:15.479 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:37:15.479 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:37:15.480 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:37:15.481 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:37:15.486 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:37:15.507 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:37:15.507 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:37:15.507 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:37:15.518 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:37:15.518 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:37:15.519 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:37:15.530 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:37:15.531 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:37:16.153 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:37:16.222 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:37:16.258 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:40:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 21:40:00.036 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 21:40:00.037 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 21:40:00.049 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 21:40:00.050 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 21:40:00.050 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 21:40:00.061 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 21:40:00.062 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 21:40:00.062 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 21:40:00.159 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 21:40:00.164 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:42:09.987 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:42:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:42:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:42:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:42:09.995 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:42:10.001 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:42:10.001 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:42:10.002 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:42:10.002 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:42:10.012 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:42:10.012 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:42:10.012 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:42:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:42:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:42:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.022 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:42:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:42:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:42:10.022 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:42:10.023 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:42:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:42:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:42:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:42:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:42:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:42:10.040 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:42:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:42:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:42:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:42:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:42:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:42:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:42:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:42:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:42:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:42:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:42:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:42:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:42:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:10.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:10.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:42:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:42:15.068 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:42:15.068 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:42:15.074 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:42:15.076 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.076 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:42:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:42:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:42:15.086 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.089 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.093 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.093 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:42:15.098 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:42:15.135 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:42:15.139 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:42:15.139 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:42:15.146 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:42:15.147 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:42:15.147 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:42:15.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:42:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:42:15.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:42:15.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:42:15.194 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:42:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:42:15.219 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:42:15.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:42:15.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.231 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:42:15.258 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:42:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:42:15.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:42:15.263 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:42:15.263 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.263 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:42:15.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.265 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.266 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:42:15.271 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:42:15.271 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.271 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:42:15.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.277 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:42:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:42:15.294 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:42:15.294 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:42:15.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:42:15.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:42:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.326 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:42:15.326 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.328 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:42:15.336 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:42:15.337 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.337 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:42:15.337 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:42:15.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.337 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:42:15.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:42:15.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:42:15.344 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:42:15.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.345 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:42:15.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:42:15.346 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.347 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:42:15.353 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.360 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.374 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:42:15.374 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.375 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:42:15.376 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:42:15.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:42:15.383 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:42:15.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.383 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:42:15.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:42:15.388 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.396 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.396 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.396 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:42:15.405 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:42:15.419 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:42:15.419 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:42:15.419 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:42:15.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:42:15.419 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:42:15.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:42:15.428 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:42:15.428 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:42:15.429 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:42:15.509 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:42:15.512 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:42:15.512 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:42:15.512 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:42:15.519 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:42:15.529 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:42:15.529 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:42:15.529 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:42:15.541 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:42:15.541 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:42:15.541 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:42:15.542 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:42:15.542 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:42:15.542 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:42:15.550 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:42:15.550 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:42:15.550 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:42:15.550 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:42:15.550 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:42:15.564 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:42:15.565 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:42:16.002 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:42:16.167 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:42:16.212 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:45:50.012 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:45:50.012 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.017 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==>  Preparing: select count(*) from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:45:50.018 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.024 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  <==      Total: 1
2020-12-05 21:45:50.024 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  <==      Total: 4
2020-12-05 21:45:50.024 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:45:50.024 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==>  Preparing: select count(*) from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:45:50.025 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.025 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.034 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  <==      Total: 1
2020-12-05 21:45:50.034 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  <==      Total: 3
2020-12-05 21:45:50.034 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==>  Preparing: select count(*) from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:45:50.035 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 21:45:50.036 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.036 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.044 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  <==      Total: 1
2020-12-05 21:45:50.045 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  <==      Total: 2
2020-12-05 21:45:50.045 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 21:45:50.045 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==>  Preparing: select count(*) from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:45:50.046 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.046 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.055 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  <==      Total: 0
2020-12-05 21:45:50.055 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:45:50.056 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.057 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  <==      Total: 1
2020-12-05 21:45:50.057 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==>  Preparing: SELECT count(*) from ecn_info where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:45:50.057 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.063 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  <==      Total: 2
2020-12-05 21:45:50.064 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 21:45:50.065 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.066 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  <==      Total: 1
2020-12-05 21:45:50.067 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==>  Preparing: SELECT count(*) from external_document where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 21:45:50.067 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.074 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  <==      Total: 2
2020-12-05 21:45:50.075 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from ecn_info where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSEcnProcess' AND task_name = 'Plan' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 21:45:50.075 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.075 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  <==      Total: 1
2020-12-05 21:45:50.076 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from ecn_info WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 21:45:50.076 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.091 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  <==      Total: 3
2020-12-05 21:45:50.092 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from external_document where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSExternalDocuments' AND task_name = 'Confirm' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 21:45:50.092 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.098 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  <==      Total: 1
2020-12-05 21:45:50.098 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from external_document WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 21:45:50.099 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 21:45:50.101 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  <==      Total: 3
2020-12-05 21:45:50.106 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  <==      Total: 1
2020-12-05 21:47:09.990 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:47:09.998 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:47:09.998 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:47:10.006 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:47:10.006 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:47:10.006 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:47:10.006 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:47:10.006 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:47:10.006 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:47:10.027 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:47:10.027 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:47:10.027 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:47:10.027 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.027 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:47:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:47:10.057 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:47:10.057 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:47:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.058 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:47:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.067 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:47:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:47:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:47:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:47:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:47:10.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:47:10.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:47:10.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:47:10.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.203 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:47:10.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.219 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.220 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:47:10.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:47:10.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:10.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:10.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:47:10.301 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:47:15.111 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:47:15.111 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:47:15.111 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:47:15.122 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.122 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:47:15.122 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.122 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:47:15.126 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.127 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:47:15.135 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.135 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.135 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:47:15.154 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.155 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:47:15.155 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.216 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:47:15.216 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.217 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:47:15.217 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:47:15.217 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:47:15.217 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:47:15.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.228 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:47:15.242 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.254 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:47:15.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.256 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:47:15.268 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.268 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:47:15.268 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.268 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:47:15.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:47:15.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.301 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:47:15.302 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:47:15.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:47:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:47:15.341 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:47:15.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:47:15.342 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.342 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:47:15.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.361 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:47:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.376 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:47:15.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:47:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.432 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:47:15.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:47:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:47:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:47:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:47:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:47:15.488 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.488 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:47:15.488 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.489 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:47:15.498 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:47:15.499 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.499 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:47:15.499 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:47:15.501 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.503 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:47:15.507 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.510 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:47:15.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.510 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:47:15.516 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:47:15.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.537 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:47:15.537 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.537 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:47:15.542 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:47:15.542 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.543 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:47:15.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.552 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:47:15.552 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.553 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:47:15.553 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.553 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.553 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:47:15.575 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:47:15.575 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.575 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:47:15.576 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.577 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:47:15.592 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:47:15.608 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:47:15.608 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.608 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:47:15.610 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:47:15.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:47:15.631 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:47:15.632 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:47:15.632 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:47:15.632 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:47:15.632 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:47:15.632 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:47:15.644 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:47:15.645 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:47:15.646 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:47:15.646 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:47:15.655 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:47:15.656 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:47:15.659 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:47:15.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:47:15.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:47:15.670 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:47:15.670 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:47:15.670 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:47:15.670 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:47:15.691 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:47:15.692 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:47:15.694 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:47:15.694 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:47:15.694 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:47:15.704 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:47:15.704 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:47:15.704 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:47:15.717 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:47:15.718 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:47:16.313 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:47:16.332 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:47:16.421 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:50:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 21:50:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 21:50:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 21:50:00.033 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 21:50:00.033 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 21:50:00.034 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 21:50:00.047 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 21:50:00.047 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 21:50:00.048 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 21:50:00.109 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 21:50:00.114 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:52:09.993 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:52:10.025 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:52:10.025 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:52:10.025 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:52:10.025 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:52:10.027 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:52:10.027 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:52:10.027 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:52:10.027 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:52:10.034 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:52:10.035 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:52:10.036 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:52:10.038 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:52:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:52:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:52:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:52:10.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:52:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:52:10.046 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:52:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:52:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:52:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:52:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:52:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:52:10.057 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:52:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:52:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:52:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:52:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:52:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:52:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:52:10.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:52:10.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:52:10.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:52:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:52:10.225 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:10.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:10.226 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:52:10.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:52:15.258 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:52:15.258 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:52:15.258 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:52:15.258 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:52:15.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:52:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:52:15.288 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.288 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:52:15.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:52:15.309 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.309 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.310 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.311 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:52:15.324 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:52:15.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:52:15.351 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:52:15.351 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:52:15.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:52:15.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:52:15.355 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:52:15.355 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:52:15.369 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.369 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.370 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:52:15.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.420 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:52:15.421 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:52:15.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.421 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:52:15.422 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:52:15.422 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.422 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.423 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:52:15.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:52:15.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:52:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:52:15.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:52:15.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:52:15.472 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.472 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:52:15.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:52:15.479 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.480 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.480 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:52:15.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:52:15.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.484 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.484 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:52:15.488 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.500 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:52:15.502 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.502 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:52:15.518 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.519 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:52:15.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:52:15.520 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:52:15.520 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.520 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:52:15.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:52:15.529 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.555 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:52:15.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.556 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:52:15.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:52:15.556 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.556 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:52:15.557 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:52:15.557 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.558 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:52:15.562 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:52:15.563 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.563 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:52:15.564 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:52:15.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:52:15.570 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:52:15.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:52:15.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.591 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.591 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:52:15.591 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:52:15.591 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:52:15.595 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:52:15.596 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.596 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:52:15.607 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.607 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:52:15.608 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:52:15.611 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:52:15.611 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.611 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:52:15.634 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.635 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:52:15.635 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.635 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:52:15.635 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:52:15.636 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:52:15.644 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:52:15.644 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:52:15.682 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:52:15.682 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:52:15.682 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:52:15.682 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:52:15.693 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:52:15.704 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:52:15.705 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:52:15.705 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:52:15.728 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:52:15.729 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:52:15.729 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:52:15.733 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:52:15.733 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:52:15.733 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:52:15.736 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:52:15.737 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:52:15.737 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:52:15.747 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:52:15.748 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:52:15.751 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:52:15.752 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:52:16.287 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:52:16.400 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:52:16.413 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:57:09.996 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 21:57:10.015 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:57:10.015 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 21:57:10.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:57:10.018 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 21:57:10.021 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 21:57:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 21:57:10.021 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 21:57:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 21:57:10.028 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 21:57:10.028 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 21:57:10.028 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 21:57:10.031 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 21:57:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.032 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 21:57:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 21:57:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 21:57:10.035 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 21:57:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 21:57:10.038 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 21:57:10.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 21:57:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 21:57:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 21:57:10.049 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 21:57:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 21:57:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 21:57:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 21:57:10.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.063 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 21:57:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 21:57:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 21:57:10.070 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.070 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 21:57:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 21:57:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 21:57:10.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 21:57:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 21:57:10.121 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 21:57:10.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:57:15.072 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:57:15.072 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:57:15.076 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:57:15.124 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.124 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:57:15.129 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 21:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:57:15.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.138 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:57:15.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.147 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 21:57:15.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.147 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.147 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:57:15.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.157 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:57:15.306 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:57:15.306 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:57:15.307 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:57:15.307 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:57:15.307 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 21:57:15.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:57:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 21:57:15.329 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 21:57:15.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.341 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:57:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 21:57:15.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.354 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:57:15.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.355 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 21:57:15.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:57:15.411 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:57:15.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:57:15.412 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:57:15.428 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:57:15.428 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.429 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:57:15.443 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:57:15.444 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.444 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 21:57:15.455 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.455 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:57:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 21:57:15.458 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:57:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 21:57:15.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.474 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 21:57:15.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.486 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 21:57:15.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.487 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 21:57:15.494 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:57:15.501 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 21:57:15.501 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.501 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:57:15.503 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:57:15.503 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.503 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:57:15.507 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 21:57:15.508 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.508 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 21:57:15.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.520 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 21:57:15.520 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 21:57:15.520 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.520 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 21:57:15.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.522 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:57:15.530 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 21:57:15.531 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:57:15.531 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.531 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 21:57:15.537 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.542 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.542 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 21:57:15.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.774 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 21:57:15.775 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:57:15.774 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 21:57:15.775 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.775 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.775 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:57:15.776 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:57:15.776 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:57:15.776 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 21:57:15.781 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:57:15.782 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.782 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.782 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 21:57:15.782 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.782 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 21:57:15.791 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 21:57:15.803 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 21:57:15.803 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 21:57:15.803 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 21:57:15.812 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 21:57:15.812 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 21:57:15.919 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 21:57:15.919 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 21:57:15.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 21:57:15.920 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 21:57:15.920 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 21:57:15.920 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 21:57:15.962 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 21:57:15.968 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 21:57:15.968 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:57:15.969 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:57:15.981 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:57:15.982 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 21:57:15.991 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 21:57:15.991 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 21:57:15.991 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 21:57:16.087 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 21:57:16.087 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 21:57:16.087 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 21:57:16.110 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 21:57:16.111 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 21:57:17.058 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:57:17.161 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 21:57:17.380 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:00:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 22:00:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 22:00:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 22:00:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 22:00:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 22:00:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 22:00:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 22:00:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 22:00:00.031 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 22:00:00.094 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 22:00:00.099 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:00:13.707 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==>  Preparing: select * from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? order by ar.create_date desc limit ?,? 
2020-12-05 22:00:13.710 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String), 0(Integer), 15(Integer)
2020-12-05 22:00:13.754 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgent[145]  <==      Total: 6
2020-12-05 22:00:13.755 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==>  Preparing: select count(1) from (SELECT * FROM task_record UNION ALL SELECT id, "PCN" template_key, processInstanceId process_instance_id, assignee, pcnId workflow_business_id, taskState task_state, state, taskName task_name, taskId task_id, null department, createDate create_date, updateDate update_date, theme, item_number, creator FROM pcn_task_record) ar where 1=1 and ((ar.create_date >= ? and ar.create_date <= ?) or (ar.update_date >= ? and ar.update_date <= ?)) and (ar.task_state is null or ar.task_state = 'OnGoing') and ar.assignee =? 
2020-12-05 22:00:13.756 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  ==> Parameters: 2020-11-05(String), 2020-12-06(String), 2020-11-05(String), 2020-12-06(String), hualanlan(String)
2020-12-05 22:00:13.810 DEBUG c.j.q.dao.TaskRecordMapper.getProcessAgentCount[145]  <==      Total: 1
2020-12-05 22:00:14.146 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==>  Preparing: select count(*) from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 22:00:14.146 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:00:14.155 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnAddCount[145]  <==      Total: 1
2020-12-05 22:00:14.156 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 22:00:14.157 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==>  Preparing: select count(*) from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 22:00:14.159 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:00:14.159 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:00:14.172 DEBUG c.j.q.m.e.d.E.getEcnAddCountGroupByTime[145]  <==      Total: 4
2020-12-05 22:00:14.171 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtAddCount[145]  <==      Total: 1
2020-12-05 22:00:14.175 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where 1 = 1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 22:00:14.175 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==>  Preparing: select count(*) from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 22:00:14.176 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:00:14.176 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:00:14.229 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnClosedCount[145]  <==      Total: 1
2020-12-05 22:00:14.229 DEBUG c.j.q.m.e.d.E.getExtAddCountGroupByTime[145]  <==      Total: 3
2020-12-05 22:00:27.413 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==>  Preparing: select count(*) from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 22:00:32.191 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.475 WARN  com.zaxxer.hikari.pool.HikariPool[766]  HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m41s35ms308µs280ns).
2020-12-05 22:01:51.486 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 22:01:51.486 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.487 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseCount[145]  <==      Total: 1
2020-12-05 22:01:51.499 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getEcn72HourCloseNum[145]  <==      Total: 2
2020-12-05 22:01:51.612 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==>  Preparing: SELECT count(*) from ecn_info where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 22:01:51.612 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.622 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getEcnProcessingCount[145]  <==      Total: 1
2020-12-05 22:01:51.623 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) And DATE_ADD(create_date,INTERVAL 3 DAY) > update_date group by date 
2020-12-05 22:01:51.623 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.630 DEBUG c.j.q.m.e.dao.EcnDashBoardDao.getExt72HourCloseNum[145]  <==      Total: 0
2020-12-05 22:01:51.632 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==>  Preparing: SELECT count(*) from external_document where status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) 
2020-12-05 22:01:51.632 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.643 DEBUG c.j.q.m.e.d.EcnDashBoardDao.getExtProcessingCount[145]  <==      Total: 1
2020-12-05 22:01:51.644 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from ecn_info where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 22:01:51.644 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.660 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnCloseNum[145]  <==      Total: 2
2020-12-05 22:01:51.660 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from ecn_info WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 22:01:51.660 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.672 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getEcnOverDueCount[145]  <==      Total: 1
2020-12-05 22:01:51.673 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==>  Preparing: select DATE_FORMAT(create_date,'%Y-%m') date, count(*) num from external_document where status = 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) group by date 
2020-12-05 22:01:51.673 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.679 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtCloseNum[145]  <==      Total: 2
2020-12-05 22:01:51.679 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==>  Preparing: SELECT count(*) from ( SELECT e.id, max(update_date) as max_update FROM ( SELECT id from external_document WHERE status <> 'Close' AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) ) e left JOIN task_record t ON ( e.id = t.workflow_business_id ) WHERE task_state = 'OnGoing' GROUP BY e.id) temp where NOW() > DATE_ADD(temp.max_update,INTERVAL 1 DAY) 
2020-12-05 22:01:51.680 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.691 DEBUG c.j.q.m.ecn.dao.EcnDashBoardDao.getExtOverDueCount[145]  <==      Total: 1
2020-12-05 22:01:51.692 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from ecn_info where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSEcnProcess' AND task_name = 'Plan' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 22:01:51.692 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.703 DEBUG c.j.q.m.e.d.E.getEcn24HourDisposalNum[145]  <==      Total: 3
2020-12-05 22:01:51.704 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==>  Preparing: SELECT DATE_FORMAT(create_date,'%Y-%m') date,count(*) num from external_document where 1=1 AND create_date >= DATE_FORMAT(?,'%Y-%m-%d ') AND create_date <= DATE_ADD(DATE_FORMAT(?,'%Y-%m-%d '),INTERVAL 1 DAY) and id in ( SELECT workflow_business_id from task_record t join ( SELECT id, min(update_date) as min_update_date FROM task_record WHERE template_key = 'QMSExternalDocuments' AND task_name = 'Confirm' GROUP BY workflow_business_id) temp on t.id = temp.id and t.update_date = temp.min_update_date where task_state = 'Close' and DATE_ADD(create_date,INTERVAL 1 DAY) > update_date ) GROUP BY date 
2020-12-05 22:01:51.704 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  ==> Parameters: 2020-06-08(String), 2020-12-05(String)
2020-12-05 22:01:51.714 DEBUG c.j.q.m.e.d.E.getExt24HourDisposalNum[145]  <==      Total: 3
2020-12-05 22:02:09.999 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:02:10.007 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:02:10.007 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:02:10.008 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:02:10.008 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:02:10.009 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:02:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:02:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:02:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:02:10.022 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:02:10.022 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:02:10.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:02:10.022 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:02:10.022 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:02:10.024 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:02:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:02:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:02:10.024 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:02:10.031 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:02:10.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:02:10.031 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:02:10.032 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:02:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:02:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.042 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:02:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:02:10.044 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:02:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:02:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:02:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:02:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:02:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:02:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:02:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:02:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:02:10.097 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:02:10.098 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:02:10.098 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:02:10.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:02:10.102 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:02:10.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:02:10.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:02:10.103 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:02:10.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:02:10.103 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:02:10.113 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:02:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:02:10.115 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:02:10.115 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:02:10.115 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:02:10.115 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:02:10.127 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:02:10.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:02:10.142 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:02:10.142 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:02:10.143 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:02:10.143 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:02:10.143 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:02:10.148 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:02:10.151 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:02:10.151 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:02:10.151 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5490632(String)
2020-12-05 22:02:10.157 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:02:10.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.158 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:02:10.163 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:02:10.164 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:02:10.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.173 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:02:10.174 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:02:10.174 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:02:10.180 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:02:10.180 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:02:10.180 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:02:10.191 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:02:10.191 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:02:10.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:02:10.191 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:02:10.192 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:02:10.198 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:02:10.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:02:10.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.222 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:02:10.237 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:02:10.260 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:02:10.260 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:02:10.261 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:02:10.267 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:02:10.287 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:02:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.288 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:02:10.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:02:10.319 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:02:10.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:02:10.320 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:02:10.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:02:10.348 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:02:10.348 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:02:10.348 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:02:10.358 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:02:10.359 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:02:10.787 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:02:10.822 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:02:10.947 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:07:10.003 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:07:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:07:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:07:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:07:10.009 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:07:10.011 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:07:10.011 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:07:10.011 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:07:10.011 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:07:10.020 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:07:10.021 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:07:10.021 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:07:10.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:07:10.024 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:07:10.024 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:07:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:07:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:07:10.025 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:07:10.029 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:07:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:07:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.034 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:07:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:07:10.036 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:07:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:07:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:07:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:07:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:07:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:07:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:07:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:07:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:07:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:07:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:07:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:07:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.091 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:07:10.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:10.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:10.097 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:07:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:07:15.052 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:07:15.052 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:07:15.060 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:07:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:07:15.061 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:07:15.070 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.070 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:07:15.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.071 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.078 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.078 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.078 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:07:15.106 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:07:15.152 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:07:15.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.223 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:07:15.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:07:15.228 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:07:15.228 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:07:15.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:07:15.255 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.262 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:07:15.269 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:07:15.290 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:07:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:07:15.292 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:07:15.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.293 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:07:15.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.299 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.305 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:07:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:07:15.314 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.324 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:07:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:07:15.325 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:07:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:07:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.335 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:07:15.339 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:07:15.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:07:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.347 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:07:15.348 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.348 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:07:15.356 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:07:15.356 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:07:15.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.356 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:07:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:07:15.362 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.362 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:07:15.362 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.362 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:07:15.366 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.372 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.391 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:07:15.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:07:15.392 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:07:15.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.393 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:07:15.394 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:07:15.394 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.394 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:07:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:07:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.406 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:07:15.416 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:07:15.416 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.416 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:07:15.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.427 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:07:15.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:07:15.433 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:07:15.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.434 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:07:15.440 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:07:15.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:07:15.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:07:15.451 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.462 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:07:15.463 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.463 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:07:15.470 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:07:15.470 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.470 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:07:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:07:15.470 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.470 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:07:15.471 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:07:15.471 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:07:15.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:07:15.480 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:07:15.480 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:07:15.480 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:07:15.481 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:07:15.506 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:07:15.513 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:07:15.513 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:07:15.513 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:07:15.522 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:07:15.533 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:07:15.534 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:07:15.534 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:07:15.542 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:07:15.542 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:07:15.542 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:07:15.548 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:07:15.548 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:07:15.548 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:07:15.548 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:07:15.548 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:07:15.554 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:07:15.554 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:07:15.554 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:07:15.566 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:07:15.567 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:07:16.128 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:07:16.158 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:07:16.163 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:10:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 22:10:00.016 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 22:10:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 22:10:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 22:10:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 22:10:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 22:10:00.036 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 22:10:00.036 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 22:10:00.036 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 22:10:00.108 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 22:10:00.113 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:12:10.006 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:12:10.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:12:10.016 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:12:10.017 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:12:10.017 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:12:10.017 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:12:10.017 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:12:10.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:12:10.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:12:10.027 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:12:10.027 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:12:10.028 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:12:10.029 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:12:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.029 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:12:10.030 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:12:10.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.030 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:12:10.035 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:12:10.036 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:12:10.036 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:12:10.037 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:12:10.043 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:12:10.044 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:12:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:12:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:12:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:12:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:12:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:12:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:12:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:12:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:12:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:12:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:12:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:12:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:12:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:12:15.055 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:12:15.055 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:12:15.063 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:12:15.066 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:12:15.072 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.073 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:12:15.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:12:15.077 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.080 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.086 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.087 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.087 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:12:15.100 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:12:15.126 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:12:15.126 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:12:15.126 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:12:15.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:12:15.131 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:12:15.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.136 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:12:15.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.137 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:12:15.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:12:15.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.162 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:12:15.164 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:12:15.174 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:12:15.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.175 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:12:15.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:12:15.175 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:12:15.185 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.185 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.218 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:12:15.218 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.218 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:12:15.223 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:12:15.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.224 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:12:15.229 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:12:15.229 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:12:15.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.229 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.229 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:12:15.229 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:12:15.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.238 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:12:15.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:12:15.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:12:15.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.264 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:12:15.264 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.264 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:12:15.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.275 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:12:15.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:12:15.276 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:12:15.276 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.277 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:12:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:12:15.292 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.293 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.293 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:12:15.296 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:12:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.297 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:12:15.301 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:12:15.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.303 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:12:15.306 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:12:15.310 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.313 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:12:15.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.313 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:12:15.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.319 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:12:15.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.433 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:12:15.433 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:12:15.433 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:12:15.433 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.433 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.433 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:12:15.433 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:12:15.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:12:15.440 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:12:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.441 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.441 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:12:15.441 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.450 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:12:15.470 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:12:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:12:15.470 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:12:15.470 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:12:15.470 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:12:15.472 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:12:15.472 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:12:15.479 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:12:15.479 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:12:15.480 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:12:15.550 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:12:15.550 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:12:15.551 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:12:15.554 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:12:15.555 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:12:15.555 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:12:15.560 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:12:15.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:12:15.560 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:12:15.562 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:12:15.568 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:12:15.568 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:12:15.583 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:12:15.584 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:12:15.584 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:12:15.591 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:12:15.591 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:12:15.591 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:12:15.605 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:12:15.605 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:12:16.195 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:12:16.448 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:12:16.520 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:17:10.009 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:17:10.894 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:17:10.896 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:17:10.939 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:17:10.941 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:10.941 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:17:10.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:10.977 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:10.979 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:17:11.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.004 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.005 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:17:11.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.248 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:17:11.249 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:17:11.267 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:17:11.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:17:11.278 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.351 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:17:11.353 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:17:11.364 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:17:11.364 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:17:11.371 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:17:11.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.372 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:17:11.372 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:17:11.372 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:17:11.372 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:17:11.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.377 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.378 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:17:11.379 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:17:11.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:17:11.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:17:11.384 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:17:11.386 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:17:11.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:17:11.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:17:11.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:17:11.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.394 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:17:11.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:17:11.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:17:11.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:17:11.415 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.416 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:17:11.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.429 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.430 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:17:11.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.438 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:17:11.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.445 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:17:11.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:11.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:11.451 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:17:11.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:17:16.065 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:17:16.110 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.110 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:17:16.158 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:17:16.221 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:17:16.279 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:17:16.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.287 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:17:16.303 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.328 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:17:16.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.329 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:17:16.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.341 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:17:16.349 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.386 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:17:16.386 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.386 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:17:16.395 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.418 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:17:16.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.418 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:17:16.424 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:17:16.425 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.425 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.426 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:17:16.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.432 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:17:16.433 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.438 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.440 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.440 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:17:16.446 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:17:16.457 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:17:16.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:17:16.459 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:17:16.506 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:17:16.513 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.519 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:17:16.526 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:17:16.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:17:16.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.544 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:17:16.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:17:16.602 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:17:16.602 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.602 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:17:16.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.604 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.605 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:17:16.610 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.616 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.639 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:17:16.639 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.640 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:17:16.643 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:17:16.643 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.643 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:17:16.645 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:17:16.645 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.645 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:17:16.647 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.651 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.651 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:17:16.651 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.651 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:17:16.659 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:17:16.661 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.661 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:17:16.668 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.723 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:17:16.724 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.724 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:17:16.727 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:17:16.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.727 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:17:16.732 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.739 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.739 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:17:16.739 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.739 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:17:16.799 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:17:16.799 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:17:16.799 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.800 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:17:16.800 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.800 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:17:16.800 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:17:16.801 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.802 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:17:16.827 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:17:16.827 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:17:16.827 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.829 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.830 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:17:16.840 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:17:16.873 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:17:16.873 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:17:16.873 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:17:16.873 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:17:16.873 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:17:16.873 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:17:16.874 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:17:16.874 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.874 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:17:16.883 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:17:16.912 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:17:16.912 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:17:16.912 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:17:16.912 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:17:16.912 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:17:16.912 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:17:16.953 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:17:16.953 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:17:16.953 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:17:16.979 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:17:16.991 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:17:16.992 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:17:17.046 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:17:17.047 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:17:17.062 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:17:17.142 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:17:17.143 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:17:17.143 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:17:17.157 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:17:17.158 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:17:17.158 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:17:17.166 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:17:17.167 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:17:17.880 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:17:17.885 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:17:17.933 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:20:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 22:20:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 22:20:00.018 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 22:20:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 22:20:00.029 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 22:20:00.031 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 22:20:00.038 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 22:20:00.038 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 22:20:00.038 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 22:20:00.102 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 22:20:00.109 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:22:10.012 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:22:10.021 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:22:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:22:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:22:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:22:10.022 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:22:10.022 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:22:10.022 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:22:10.022 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:22:10.030 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:22:10.031 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:22:10.032 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:22:10.035 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:22:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:22:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:22:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.039 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:22:10.040 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:22:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:22:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:22:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.050 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:22:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:22:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.054 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:22:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:22:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:22:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.062 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:22:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:22:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.069 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:22:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:22:10.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:22:10.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:22:10.161 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:22:10.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:22:10.178 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:10.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:10.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:22:10.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:22:15.081 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:22:15.081 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:22:15.081 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:22:15.091 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.091 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:22:15.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.092 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:22:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:22:15.099 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.099 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.099 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.099 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:22:15.099 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.107 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:22:15.141 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:22:15.141 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:22:15.141 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:22:15.141 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:22:15.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:22:15.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.151 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:22:15.156 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.165 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:22:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.167 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:22:15.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.188 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:22:15.188 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:22:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:22:15.199 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.200 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:22:15.204 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.206 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.226 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:22:15.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:22:15.235 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:22:15.235 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:22:15.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.235 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:22:15.235 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:22:15.244 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.244 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:22:15.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.244 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.244 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:22:15.244 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:22:15.257 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.258 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:22:15.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.261 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:22:15.267 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.278 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:22:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.279 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:22:15.280 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:22:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:22:15.286 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.290 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.297 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:22:15.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.298 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:22:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:22:15.310 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.310 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:22:15.321 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:22:15.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:22:15.324 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:22:15.324 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:22:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:22:15.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:22:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:22:15.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.353 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:22:15.353 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.353 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:22:15.363 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.363 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.363 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:22:15.368 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:22:15.368 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:22:15.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.368 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:22:15.368 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:22:15.374 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:22:15.376 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:22:15.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.402 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:22:15.404 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:22:15.404 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:22:15.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:22:15.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:22:15.405 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:22:15.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:22:15.413 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:22:15.423 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:22:15.424 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:22:15.424 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:22:15.431 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:22:15.431 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:22:15.431 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:22:15.434 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:22:15.434 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:22:15.434 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:22:15.440 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:22:15.440 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:22:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:22:15.440 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:22:15.441 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:22:15.447 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:22:15.448 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:22:15.452 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:22:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:22:15.471 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:22:15.472 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:22:15.481 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:22:15.481 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:22:15.481 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:22:15.496 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:22:15.497 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:22:16.019 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:22:16.040 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:22:16.110 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:27:10.015 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:27:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:27:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:27:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:27:10.021 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:27:10.022 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:27:10.023 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:27:10.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:27:10.023 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:27:10.031 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:27:10.031 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:27:10.033 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:27:10.033 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:27:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.033 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:27:10.035 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:27:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.035 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:27:10.038 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:27:10.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.038 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:27:10.040 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:27:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:27:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:27:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.040 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.041 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:27:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:27:10.047 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:27:10.047 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:27:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:27:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:27:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:27:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.052 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:27:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:27:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.059 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:27:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:27:10.065 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:27:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:27:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:27:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:27:10.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:27:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:27:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:27:15.297 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:27:15.297 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:27:15.297 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:27:15.297 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:27:15.306 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:27:15.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:27:15.307 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.308 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:27:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:27:15.314 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.314 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.314 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:27:15.314 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.315 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.316 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.322 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:27:15.362 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:27:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:27:15.363 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:27:15.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:27:15.363 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:27:15.363 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:27:15.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.364 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:27:15.380 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.381 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:27:15.387 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.390 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.400 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:27:15.402 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.403 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:27:15.408 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:27:15.414 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.414 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:27:15.414 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:27:15.414 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.414 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:27:15.419 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:27:15.439 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.439 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:27:15.447 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:27:15.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.448 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:27:15.450 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:27:15.450 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.450 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:27:15.453 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:27:15.455 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.455 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:27:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.457 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.457 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:27:15.464 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:27:15.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.466 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:27:15.471 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.477 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.548 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:27:15.548 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:27:15.548 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:27:15.548 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.548 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.548 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.548 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:27:15.548 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:27:15.548 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:27:15.561 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:27:15.562 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:27:15.563 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.563 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.563 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:27:15.574 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:27:15.576 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.576 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:27:15.583 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.630 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:27:15.630 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.630 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:27:15.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:27:15.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:27:15.632 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:27:15.632 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.632 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:27:15.637 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:27:15.638 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.638 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.638 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.638 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:27:15.638 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.638 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:27:15.645 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.646 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:27:15.658 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:27:15.658 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:27:15.658 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:27:15.664 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:27:15.665 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:27:15.668 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:27:15.668 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.668 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:27:15.669 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:27:15.676 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.693 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:27:15.693 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:27:15.694 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:27:15.695 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:27:15.695 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:27:15.695 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:27:15.702 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:27:15.705 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:27:15.705 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:27:15.705 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:27:15.714 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:27:15.714 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:27:15.731 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:27:15.731 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:27:15.731 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:27:15.740 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:27:15.764 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:27:15.764 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:27:15.765 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:27:15.771 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:27:15.771 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:27:15.771 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:27:15.782 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:27:15.783 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:27:16.257 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:27:16.261 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:27:16.412 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:30:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 22:30:00.014 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 22:30:00.015 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 22:30:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 22:30:00.023 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 22:30:00.024 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 22:30:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 22:30:00.030 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 22:30:00.030 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 22:30:00.093 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 22:30:00.098 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:32:10.018 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:32:10.076 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:32:10.077 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:32:10.077 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:32:10.077 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:32:10.077 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:32:10.077 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:32:10.077 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:32:10.077 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:32:10.087 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:32:10.088 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:32:10.088 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:32:10.089 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:32:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:32:10.092 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:32:10.092 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:32:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:32:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:32:10.098 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:32:10.098 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:32:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:32:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:32:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.105 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:32:10.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:32:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.111 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:32:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:32:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:32:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:32:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:32:10.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.120 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:32:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:32:10.126 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.127 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:32:10.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:32:10.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.140 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:32:10.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:32:10.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:32:10.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:32:10.179 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:10.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:10.180 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:32:10.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:32:15.129 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:32:15.129 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:32:15.136 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:32:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:32:15.142 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:32:15.146 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.147 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.150 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.151 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:32:15.160 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.160 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.162 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:32:15.172 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:32:15.187 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:32:15.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.188 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:32:15.190 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:32:15.190 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:32:15.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.197 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:32:15.205 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:32:15.205 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.232 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:32:15.232 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:32:15.232 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.233 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:32:15.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.234 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:32:15.247 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.247 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.276 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:32:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:32:15.279 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:32:15.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.279 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:32:15.283 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:32:15.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.283 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.284 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:32:15.286 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:32:15.286 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.286 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:32:15.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.291 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:32:15.292 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.294 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:32:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.296 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:32:15.299 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.307 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.317 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:32:15.317 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.317 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:32:15.324 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:32:15.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:32:15.330 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.331 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:32:15.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.331 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:32:15.340 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:32:15.343 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.343 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:32:15.350 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:32:15.350 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:32:15.350 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.351 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:32:15.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.352 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:32:15.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.357 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.358 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:32:15.362 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:32:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.362 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:32:15.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.371 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:32:15.390 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:32:15.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:32:15.390 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:32:15.393 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:32:15.393 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.393 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:32:15.398 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.399 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.400 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.400 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:32:15.402 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.410 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:32:15.436 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:32:15.436 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:32:15.437 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:32:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:32:15.438 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:32:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:32:15.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:32:15.465 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:32:15.465 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:32:15.465 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:32:15.467 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:32:15.467 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:32:15.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:32:15.473 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:32:15.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:32:15.473 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:32:15.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:32:15.479 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:32:15.480 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:32:15.480 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:32:15.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:32:15.490 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:32:15.490 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:32:15.506 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:32:15.506 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:32:15.506 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:32:15.524 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:32:15.524 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:32:15.529 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:32:15.529 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:32:15.529 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:32:15.540 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:32:15.540 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:32:15.540 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:32:15.551 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:32:15.551 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:32:16.066 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:32:16.120 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:32:16.204 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:37:10.021 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:37:10.027 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:37:10.028 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:37:10.029 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:37:10.029 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:37:10.029 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:37:10.029 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:37:10.029 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:37:10.029 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:37:10.039 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:37:10.040 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:37:10.040 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:37:10.044 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:37:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.044 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:37:10.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:37:10.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:37:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.045 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:37:10.046 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:37:10.047 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:37:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:37:10.048 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:37:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.051 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:37:10.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.053 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:37:10.054 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:37:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:37:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.064 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:37:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:37:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:37:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:37:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:37:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.086 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.088 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:37:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:37:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:37:10.109 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:37:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:37:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:10.124 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:37:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:37:15.085 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:37:15.086 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:37:15.086 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:37:15.093 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:37:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:37:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.094 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:37:15.102 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.102 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:37:15.104 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.109 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.109 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:37:15.134 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:37:15.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.159 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:37:15.161 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:37:15.161 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:37:15.162 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:37:15.162 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:37:15.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.162 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:37:15.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.174 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.175 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:37:15.183 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:37:15.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:37:15.194 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.195 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:37:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.196 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:37:15.204 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.205 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:37:15.205 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.205 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:37:15.225 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.236 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:37:15.236 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.236 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:37:15.240 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:37:15.240 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.241 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:37:15.243 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:37:15.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.243 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:37:15.245 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:37:15.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:37:15.248 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.249 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:37:15.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.251 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:37:15.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.253 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:37:15.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.259 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.271 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:37:15.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:37:15.278 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.284 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:37:15.284 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:37:15.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:37:15.285 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:37:15.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:37:15.295 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.296 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.296 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:37:15.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:37:15.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.301 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:37:15.306 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:37:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:37:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.308 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:37:15.318 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:37:15.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.318 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:37:15.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.327 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:37:15.333 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:37:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:37:15.338 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:37:15.338 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.338 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.338 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:37:15.340 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:37:15.346 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.347 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.347 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:37:15.356 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:37:15.371 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:37:15.372 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.372 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:37:15.372 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:37:15.372 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:37:15.372 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:37:15.379 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.380 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:37:15.381 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:37:15.391 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:37:15.401 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:37:15.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:37:15.401 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:37:15.407 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:37:15.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:37:15.413 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:37:15.413 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:37:15.427 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:37:15.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:37:15.427 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:37:15.434 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:37:15.434 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:37:15.434 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:37:15.436 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:37:15.437 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:37:15.441 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:37:15.477 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:37:15.478 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:37:15.478 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:37:15.484 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:37:15.485 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:37:15.485 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:37:15.495 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:37:15.496 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:37:15.977 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:37:16.077 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:37:16.207 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:40:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 22:40:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 22:40:00.019 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 22:40:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 22:40:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 22:40:00.030 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 22:40:00.037 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 22:40:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 22:40:00.037 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 22:40:00.104 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 22:40:00.110 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:42:10.025 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:42:10.032 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:42:10.032 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:42:10.032 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:42:10.033 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:42:10.033 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:42:10.032 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:42:10.033 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:42:10.034 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:42:10.044 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:42:10.044 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:42:10.045 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:42:10.048 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:42:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:42:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:42:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.049 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:42:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:42:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.050 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:42:10.053 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:42:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:42:10.054 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:42:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:42:10.056 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:42:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.068 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:42:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:42:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:42:10.078 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:42:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:42:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:42:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:42:10.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:42:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:42:10.118 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.119 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:42:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:42:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:42:15.259 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:42:15.259 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:42:15.259 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:42:15.259 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:42:15.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:42:15.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:42:15.272 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.273 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:42:15.273 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:42:15.275 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.275 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.275 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:42:15.280 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.280 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.283 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:42:15.332 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:42:15.332 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:42:15.332 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:42:15.332 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:42:15.333 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:42:15.333 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.333 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.334 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:42:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:42:15.342 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.342 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.343 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:42:15.364 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.434 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:42:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.437 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:42:15.443 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:42:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.443 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:42:15.445 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:42:15.445 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.445 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:42:15.450 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.455 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.481 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:42:15.481 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.482 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:42:15.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:42:15.484 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:42:15.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.484 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:42:15.485 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:42:15.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:42:15.495 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.495 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.495 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.495 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.496 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:42:15.496 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:42:15.504 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:42:15.504 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.506 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.506 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:42:15.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.544 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:42:15.544 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:42:15.545 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:42:15.545 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:42:15.547 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:42:15.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.547 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:42:15.554 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:42:15.554 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.556 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:42:15.556 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.556 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:42:15.564 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:42:15.566 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.566 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:42:15.578 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:42:15.578 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.578 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:42:15.578 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.578 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.579 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:42:15.579 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:42:15.586 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:42:15.586 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.587 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.587 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:42:15.598 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:42:15.598 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.598 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.598 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:42:15.607 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.607 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.607 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:42:15.611 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:42:15.611 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:42:15.611 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:42:15.614 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:42:15.615 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:42:15.616 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.616 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:42:15.620 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:42:15.621 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:42:15.624 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.637 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:42:15.645 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:42:15.645 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:42:15.645 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:42:15.652 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:42:15.661 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:42:15.661 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:42:15.662 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:42:15.684 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:42:15.684 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:42:15.685 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:42:15.691 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:42:15.713 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:42:15.713 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:42:15.713 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:42:15.720 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:42:15.720 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:42:15.720 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:42:15.725 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:42:15.725 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:42:15.725 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:42:15.734 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:42:15.735 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:42:15.735 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:42:15.735 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:42:16.259 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:42:16.388 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:42:16.426 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:47:10.028 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:47:10.033 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:47:10.034 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:47:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:47:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:47:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:47:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:47:10.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:47:10.040 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:47:10.051 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:47:10.051 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:47:10.051 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:47:10.083 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:47:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:47:10.084 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:47:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:47:10.086 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:47:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:47:10.087 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:47:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:47:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:47:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:47:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:47:10.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:47:10.099 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:47:10.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:47:10.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:47:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:47:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:47:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:47:10.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:47:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.116 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:47:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:47:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.129 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:47:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.135 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:47:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:47:10.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.148 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:47:10.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:10.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:47:10.160 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:47:15.119 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:47:15.119 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:47:15.123 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:47:15.160 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:47:16.396 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.398 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:47:16.404 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.404 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:47:16.405 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.411 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.411 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.411 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:47:16.420 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:47:16.454 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:47:16.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.454 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:47:16.455 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:47:16.462 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.463 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:47:16.468 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.470 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:47:16.470 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.478 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:47:16.479 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.481 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:47:16.489 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.492 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:47:16.492 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.492 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:47:16.502 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:47:16.502 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.502 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.502 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:47:16.510 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.523 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:47:16.523 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:47:16.524 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.524 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.525 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:47:16.525 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:47:16.532 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:47:16.532 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.532 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.532 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.532 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:47:16.532 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:47:16.543 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:47:16.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.543 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:47:16.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.543 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:47:16.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:47:16.556 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.556 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.565 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:47:16.565 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.565 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:47:16.572 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.579 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:47:16.579 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.579 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:47:16.584 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:47:16.584 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.584 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:47:16.593 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.595 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:47:16.595 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:47:16.595 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.595 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.595 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:47:16.595 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:47:16.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:47:16.611 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:47:16.613 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.613 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:47:16.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.620 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.624 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:47:16.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.625 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:47:16.632 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:47:16.634 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:47:16.635 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.635 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:47:16.646 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:47:16.645 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.646 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.646 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:47:16.657 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:47:16.657 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.657 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.657 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:47:16.658 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.658 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:47:16.665 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:47:16.666 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:47:16.670 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:47:16.670 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:47:16.670 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:47:16.679 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:47:16.687 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:47:16.687 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:47:16.687 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:47:16.688 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:47:16.698 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:47:16.699 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:47:16.739 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:47:16.740 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.740 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:47:16.743 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:47:16.744 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:47:16.744 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:47:16.747 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.756 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:47:16.757 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:47:16.757 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:47:16.758 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:47:16.759 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:47:16.764 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:47:16.765 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:47:16.766 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:47:16.766 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:47:16.766 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:47:16.767 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:47:16.775 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:47:16.775 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:47:16.775 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:47:16.786 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:47:16.787 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:47:16.790 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:47:16.791 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:47:17.389 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:47:17.460 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:47:17.462 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:50:00.008 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 22:50:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 22:50:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 22:50:00.026 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 22:50:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 22:50:00.027 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 22:50:00.033 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 22:50:00.034 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 22:50:00.034 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 22:50:00.099 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 22:50:00.105 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:52:10.031 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:52:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:52:10.039 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:52:10.041 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:52:10.041 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:52:10.041 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:52:10.042 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:52:10.050 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:52:10.050 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:52:10.050 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:52:10.050 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:52:10.050 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:52:10.055 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:52:10.055 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:52:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.055 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:52:10.057 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:52:10.060 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:52:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:52:10.061 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:52:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:52:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.077 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:52:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:52:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:52:10.081 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:52:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:52:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:52:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:52:10.084 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:52:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:52:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:52:10.104 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:52:10.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.107 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:52:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:52:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.123 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:52:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.130 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.131 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:52:10.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.138 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:52:10.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.146 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:52:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:10.155 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:52:10.165 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:52:15.104 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:52:15.104 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:52:15.118 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:52:15.166 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:52:16.376 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.378 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:52:16.386 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.388 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.388 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:52:16.396 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:52:16.448 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:52:16.486 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:52:16.488 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.489 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:52:16.500 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.508 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.508 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:52:16.515 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.526 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:52:16.526 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.526 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:52:16.537 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:52:16.537 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.537 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:52:16.545 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:52:16.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.545 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:52:16.551 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:52:16.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.553 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:52:16.562 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.564 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.565 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:52:16.574 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.589 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:52:16.590 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.590 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:52:16.597 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:52:16.597 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:52:16.598 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.598 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.598 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:52:16.598 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:52:16.608 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:52:16.608 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.609 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.609 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:52:16.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.610 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:52:16.617 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.631 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:52:16.631 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.632 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:52:16.640 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:52:16.640 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:52:16.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.642 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:52:16.649 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:52:16.650 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.650 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.650 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:52:16.659 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.659 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.659 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:52:16.666 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:52:16.670 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:52:16.671 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.671 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:52:16.678 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.684 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:52:16.688 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.688 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:52:16.695 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.697 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:52:16.697 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.697 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:52:16.706 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.706 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.706 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:52:16.736 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.736 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:52:16.736 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:52:16.737 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.737 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:52:16.737 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:52:16.737 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:52:16.748 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.749 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:52:16.749 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:52:16.749 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:52:16.760 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:52:16.760 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:52:16.760 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.760 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:52:16.760 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:52:16.767 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.773 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:52:16.773 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.774 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:52:16.785 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.786 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:52:16.786 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.786 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:52:16.795 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:52:16.810 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:52:16.811 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.811 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:52:16.818 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:52:16.819 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:52:16.819 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.819 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:52:16.828 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:52:16.941 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:52:16.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.942 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:52:16.943 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:52:16.943 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:52:16.943 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:52:16.948 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:52:16.950 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:52:16.950 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:52:16.950 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:52:16.963 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:52:16.964 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:52:16.971 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:52:16.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:52:16.971 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:52:16.982 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:52:17.021 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:52:17.021 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:52:17.021 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:52:17.027 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:52:17.028 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:52:17.809 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:52:18.968 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:52:18.997 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:57:10.034 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 22:57:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:57:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 22:57:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:57:10.051 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 22:57:10.051 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 22:57:10.051 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 22:57:10.051 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 22:57:10.051 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 22:57:10.061 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 22:57:10.062 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 22:57:10.062 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 22:57:10.068 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 22:57:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 22:57:10.070 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 22:57:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.071 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 22:57:10.072 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 22:57:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 22:57:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 22:57:10.080 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 22:57:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 22:57:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 22:57:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 22:57:10.085 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 22:57:10.086 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 22:57:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 22:57:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 22:57:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.089 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.090 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 22:57:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 22:57:10.100 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.101 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 22:57:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 22:57:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.108 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 22:57:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.110 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 22:57:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.115 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 22:57:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.122 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 22:57:10.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 22:57:10.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.136 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 22:57:10.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:10.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:10.144 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 22:57:10.150 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:57:15.110 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:57:15.110 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:57:15.117 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.137 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:57:15.150 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 22:57:15.153 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.153 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.153 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.153 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.154 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:57:15.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:57:15.173 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 22:57:15.189 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:57:15.221 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:57:15.221 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 22:57:15.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.221 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 22:57:15.226 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:57:15.231 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.232 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 22:57:15.239 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:57:15.239 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.239 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:57:15.250 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.262 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:57:15.264 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.264 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 22:57:15.282 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.283 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:57:15.283 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.284 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:57:15.300 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:57:15.300 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.300 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 22:57:15.310 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:57:15.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.310 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:57:15.312 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.316 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:57:15.316 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.316 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:57:15.323 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:57:15.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.323 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 22:57:15.323 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:57:15.325 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.326 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 22:57:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.330 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.331 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 22:57:15.334 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.337 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.349 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:57:15.349 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.349 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 22:57:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.358 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:57:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.358 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:57:15.361 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 22:57:15.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.361 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:57:15.367 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.367 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 22:57:15.368 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.368 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 22:57:15.377 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 22:57:15.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.379 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:57:15.384 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 22:57:15.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.385 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 22:57:15.386 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.388 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:57:15.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.388 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 22:57:15.392 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:57:15.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.396 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 22:57:15.404 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.406 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:57:15.406 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.407 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:57:15.434 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.435 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.435 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 22:57:15.469 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 22:57:15.469 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 22:57:15.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.469 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 22:57:15.469 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 22:57:15.469 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 22:57:15.476 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 22:57:15.478 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.496 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 22:57:15.505 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 22:57:15.505 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 22:57:15.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 22:57:15.505 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:57:15.505 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 22:57:15.505 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:57:15.513 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 22:57:15.513 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:57:15.514 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 22:57:15.563 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 22:57:15.563 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 22:57:15.564 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 22:57:15.564 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 22:57:15.564 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 22:57:15.564 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 22:57:15.573 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 22:57:15.574 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 22:57:15.576 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:57:15.576 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:57:15.585 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:57:15.586 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 22:57:15.594 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 22:57:15.595 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 22:57:15.595 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 22:57:15.602 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 22:57:15.602 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 22:57:15.602 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 22:57:15.618 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 22:57:15.619 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 22:57:16.144 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:57:16.185 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 22:57:16.257 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:00:00.007 INFO  c.j.q.m.t.T.TraceabilityMachineTimerManager[50]  设备定时任务开启
2020-12-05 23:00:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==>  Preparing: select table_name from traceability_machine_data group by table_name 
2020-12-05 23:00:00.017 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  ==> Parameters: 
2020-12-05 23:00:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineList[145]  <==      Total: 5
2020-12-05 23:00:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==>  Preparing: select filed_name from traceability_machine_data where table_name=? 
2020-12-05 23:00:00.025 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  ==> Parameters: dust_free_shed(String)
2020-12-05 23:00:00.033 DEBUG c.j.q.m.t.d.T.getTraceabilityMachineFiledName[145]  <==      Total: 11
2020-12-05 23:00:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==>  Preparing: select max(createtime) from dust_free_shed 
2020-12-05 23:00:00.033 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  ==> Parameters: 
2020-12-05 23:00:00.097 DEBUG c.j.q.m.t.d.T.getMaxCreateTime[145]  <==      Total: 1
2020-12-05 23:00:00.102 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] java.lang.NullPointerException: null
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.getLenovoMachineData(TraceabilityMachineTimerManager.java:105)
	at cn.jwis.qualityworkflow.modules.traceablity.TimerManager.TraceabilityMachineTimerManager.MachineTimerManager(TraceabilityMachineTimerManager.java:57)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:02:10.037 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 23:02:10.043 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 23:02:10.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 23:02:10.045 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 23:02:10.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 23:02:10.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 23:02:10.045 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 23:02:10.045 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 23:02:10.046 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 23:02:10.058 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 23:02:10.058 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 23:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 23:02:10.058 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 23:02:10.058 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 23:02:10.059 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 23:02:10.059 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 23:02:10.060 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 23:02:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.060 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 23:02:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.066 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 23:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 23:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 23:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 23:02:10.068 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 23:02:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 23:02:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 23:02:10.075 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 23:02:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 23:02:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 23:02:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.077 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 23:02:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.083 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 23:02:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 23:02:10.092 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 23:02:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.094 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 23:02:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 23:02:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.111 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 23:02:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.117 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 23:02:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.125 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 23:02:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:10.134 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 23:02:10.143 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 23:02:15.093 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:02:15.093 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:02:15.104 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:02:15.144 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:02:15.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 23:02:15.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:02:15.182 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 23:02:15.186 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.187 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 23:02:15.193 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.194 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.194 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.194 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:02:15.204 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 23:02:15.245 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:02:15.245 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:02:15.245 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 23:02:15.245 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 23:02:15.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.245 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.246 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 23:02:15.246 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 23:02:15.247 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 23:02:15.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.252 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.252 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 23:02:15.258 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.273 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 23:02:15.276 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 23:02:15.277 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:02:15.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.277 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 23:02:15.281 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 23:02:15.281 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.281 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 23:02:15.383 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.383 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.392 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.417 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:02:15.417 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.418 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 23:02:15.423 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 23:02:15.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.423 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:02:15.424 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:02:15.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.424 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 23:02:15.430 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.431 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 23:02:15.431 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.431 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:02:15.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.432 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 23:02:15.442 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.442 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 23:02:15.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.444 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 23:02:15.456 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.458 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:02:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.458 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 23:02:15.469 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 23:02:15.471 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 23:02:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.471 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 23:02:15.479 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 23:02:15.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 23:02:15.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:02:15.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.588 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 23:02:15.588 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:02:15.588 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 23:02:15.598 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 23:02:15.598 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.598 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 23:02:15.599 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.599 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.599 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:02:15.599 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 23:02:15.606 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.607 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 23:02:15.609 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.609 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 23:02:15.617 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.622 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 23:02:15.622 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 23:02:15.622 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 23:02:15.625 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 23:02:15.625 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.625 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 23:02:15.630 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 23:02:15.631 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 23:02:15.631 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.639 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:02:15.639 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.639 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:02:15.647 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.648 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.648 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:02:15.648 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:02:15.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:02:15.649 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 23:02:15.655 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 23:02:15.657 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:02:15.675 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 23:02:15.681 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 23:02:15.682 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:02:15.682 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 23:02:15.689 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:02:15.700 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 23:02:15.701 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 23:02:15.701 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 23:02:15.793 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 23:02:15.794 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 23:02:15.794 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 23:02:15.800 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 23:02:15.800 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 23:02:15.800 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 23:02:15.801 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 23:02:15.802 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 23:02:15.803 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 23:02:15.808 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 23:02:15.808 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 23:02:15.814 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 23:02:15.814 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 23:02:16.613 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:02:16.613 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:02:16.647 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:07:10.040 INFO  c.j.qualityworkflow.modules.ipqc.job.ipqcMailJob[27]  查询IPQC超时任务
2020-12-05 23:07:10.047 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 23:07:10.047 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND task_name = ? AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 23:07:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==>  Preparing: SELECT *, HOUR(timediff(now() , create_date)) overTimeNum FROM task_record WHERE template_key = ? AND task_state IS NULL AND HOUR(timediff(now() , create_date)) >= ? 
2020-12-05 23:07:10.048 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '节假日' 
2020-12-05 23:07:10.048 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: Line Qualify(String), 文件收集(String), 2(Integer)
2020-12-05 23:07:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  ==> Parameters: FactoryAuditProcess(String), 部门审核(String), 24(Integer)
2020-12-05 23:07:10.049 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  ==> Parameters: 
2020-12-05 23:07:10.049 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  ==> Parameters: IPQCAuditProcess(String), 24(Integer)
2020-12-05 23:07:10.066 DEBUG c.j.q.m.qims.dao.BlackDashBoardMapper.getHoliday[145]  <==      Total: 6
2020-12-05 23:07:10.066 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 3
2020-12-05 23:07:10.066 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord[145]  <==      Total: 8
2020-12-05 23:07:10.066 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==>  Preparing: SELECT DISTINCT date FROM holiday_maintenance WHERE type = '补班' 
2020-12-05 23:07:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.066 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  ==> Parameters: 
2020-12-05 23:07:10.066 DEBUG c.j.q.dao.TaskRecordMapper.getOverTimeTaskRecord2[145]  <==      Total: 18
2020-12-05 23:07:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192540470837248(String)
2020-12-05 23:07:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945645047808(String)
2020-12-05 23:07:10.066 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.067 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868320843300864(String)
2020-12-05 23:07:10.072 DEBUG c.j.q.m.q.d.B.getWorkOvertimeList[145]  <==      Total: 4
2020-12-05 23:07:10.072 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==>  Preparing: select * from qims_lt_standard_info 
2020-12-05 23:07:10.073 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  ==> Parameters: 
2020-12-05 23:07:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.074 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295192619508301824(String)
2020-12-05 23:07:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.075 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868347422605312(String)
2020-12-05 23:07:10.076 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getLtStandard[145]  <==      Total: 8
2020-12-05 23:07:10.080 INFO  c.j.qualityworkflow.modules.qims.job.qimsMailJob[47]  查询黑色问题超过LT的信息
2020-12-05 23:07:10.080 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==>  Preparing: select * from task_record where task_name in('初步原因分析','根本原因分析','根本原因审核') and task_state is null and template_key='QIMSBLACK' 
2020-12-05 23:07:10.081 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  ==> Parameters: 
2020-12-05 23:07:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.082 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1299240419787276288(String)
2020-12-05 23:07:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.087 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303868393815801856(String)
2020-12-05 23:07:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.093 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getBlackList[145]  <==      Total: 16
2020-12-05 23:07:10.095 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.096 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286902446076985344(String)
2020-12-05 23:07:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.102 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.103 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303937438065885184(String)
2020-12-05 23:07:10.106 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.113 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.114 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939538460082176(String)
2020-12-05 23:07:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.132 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.133 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1303939599889858560(String)
2020-12-05 23:07:10.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.142 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306059696263659520(String)
2020-12-05 23:07:10.153 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.154 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306155886347026432(String)
2020-12-05 23:07:10.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.163 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1306201167000240128(String)
2020-12-05 23:07:10.170 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:10.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:10.171 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013106458263552(String)
2020-12-05 23:07:10.181 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 23:07:15.456 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=hualanlan happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:07:15.456 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=dz_gyb1 happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:07:15.456 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=kiween happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:07:15.456 DEBUG cn.jwis.qualityworkflow.util.EmailService[144]  get handler mail from http://gateway.dev.jwis.io/platform/sys/user/internal-read?name=qualityadmin happen error cause:I/O error on GET request for "http://gateway.dev.jwis.io/platform/sys/user/internal-read": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out
2020-12-05 23:07:17.226 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:17.228 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:07:17.255 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:17.256 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 23:07:17.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:17.295 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013110702899200(String)
2020-12-05 23:07:17.324 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:17.325 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 23:07:18.277 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:18.278 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:18.279 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:07:18.315 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:18.315 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:18.755 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:19.689 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:07:19.689 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 23:07:20.412 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:07:20.412 INFO  c.j.q.m.factoryaudit.job.AuditQuestionMailJob[31]  邮件下发结束
2020-12-05 23:07:20.427 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.427 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945682796544(String)
2020-12-05 23:07:20.484 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:20.485 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 23:07:20.527 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.528 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.529 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1294123945716350976(String)
2020-12-05 23:07:20.545 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:20.558 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.573 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:07:20.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.573 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013113928318976(String)
2020-12-05 23:07:20.587 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.587 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 23:07:20.588 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:20.589 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 23:07:20.601 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:20.617 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:07:20.617 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:20.618 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: qualityadmin(String), COMMON(String)
2020-12-05 23:07:20.632 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:07:20.632 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.633 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193219738370048(String)
2020-12-05 23:07:20.650 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:20.666 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.667 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.667 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193220166189056(String)
2020-12-05 23:07:20.684 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  qualityadmin email is 
2020-12-05 23:07:20.684 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.685 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.686 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1308013116927246336(String)
2020-12-05 23:07:20.701 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 23:07:20.718 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 23:07:20.718 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:20.718 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 23:07:20.801 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  kiween email is 
2020-12-05 23:07:20.801 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:20.801 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.801 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1309046852858937344(String)
2020-12-05 23:07:20.852 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 0
2020-12-05 23:07:20.882 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:07:20.882 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.882 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707351375872(String)
2020-12-05 23:07:20.904 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  codisan email is kelvin@jwis.cn
2020-12-05 23:07:20.905 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 23:07:20.905 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 23:07:20.918 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.919 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:20.919 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1295193707376541696(String)
2020-12-05 23:07:20.926 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 23:07:20.927 INFO  cn.jwis.qualityworkflow.util.EmailService[74]  haomiao.liu@jwis.cn send a Mail to kelvin@jwis.cn fail, because null
2020-12-05 23:07:20.956 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:20.968 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 23:07:21.033 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  xujinbiao email is 
2020-12-05 23:07:21.033 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 23:07:21.033 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.033 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: xujinbiao(String), COMMON(String)
2020-12-05 23:07:21.064 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:21.097 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 23:07:21.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:21.099 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286904434760089600(String)
2020-12-05 23:07:21.128 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:07:21.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:21.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:21.128 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1315248790789160960(String)
2020-12-05 23:07:21.141 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:21.161 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 23:07:21.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.161 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:07:21.172 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb1 email is test@jwis.cn
2020-12-05 23:07:21.172 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 23:07:21.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.173 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: dz_gyb1(String), COMMON(String)
2020-12-05 23:07:21.173 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:07:21.181 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:21.181 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 23:07:21.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:21.183 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1286916730144161792(String)
2020-12-05 23:07:21.192 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:21.202 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  dz_gyb2 email is jian.song@jwis.cn
2020-12-05 23:07:21.203 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 23:07:21.203 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 23:07:21.210 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 23:07:21.210 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==>  Preparing: SELECT q.*,ar.processInstanceId ,ar.taskId,ar.assignee,ar.taskState,ar.taskName FROM line_qualify_info q,(SELECT workflow_business_id, process_instance_id as processInstanceId,task_id as taskId,assignee,task_state as taskState,task_name taskName FROM task_record WHERE task_id=?) ar where q.id=ar.workflow_business_id 
2020-12-05 23:07:21.211 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  ==> Parameters: 5506556(String)
2020-12-05 23:07:21.216 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  gupp2 email is null
2020-12-05 23:07:21.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.217 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:07:21.221 DEBUG c.j.q.m.l.d.L.getLineQualifyDetailednessInfo[145]  <==      Total: 1
2020-12-05 23:07:21.222 INFO  cn.jwis.qualityworkflow.util.EmailService[69]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn and make a copy for [jian.song@jwis.cn]
2020-12-05 23:07:21.224 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 0
2020-12-05 23:07:21.224 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.225 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: gupp2(String), QIMS(String)
2020-12-05 23:07:21.236 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 0
2020-12-05 23:07:21.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==>  Preparing: select time from email_history_info where id =? 
2020-12-05 23:07:21.238 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 23:07:21.245 DEBUG c.j.q.m.qims.dao.QimsSendMailMapper.getTimeById[145]  <==      Total: 1
2020-12-05 23:07:21.265 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  hualanlan email is test@jwis.cn
2020-12-05 23:07:21.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==>  Preparing: select superior from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.266 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:07:21.272 DEBUG cn.jwis.qualityworkflow.dao.UserMapper.getSuperior[145]  <==      Total: 1
2020-12-05 23:07:21.272 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==>  Preparing: select superior_manager from department_mapping where user_account = ? and type = ? limit 0,1 
2020-12-05 23:07:21.272 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  ==> Parameters: hualanlan(String), QIMS(String)
2020-12-05 23:07:21.280 DEBUG c.j.q.dao.UserMapper.getSuperiorManagerByUser[145]  <==      Total: 1
2020-12-05 23:07:21.314 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  workflow3 email is null
2020-12-05 23:07:21.371 INFO  cn.jwis.qualityworkflow.util.EmailService[142]  zhouxianling email is 
2020-12-05 23:07:21.371 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==>  Preparing: SELECT * from task_record WHERE id = ? 
2020-12-05 23:07:21.371 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  ==> Parameters: 1287933861786812416(String)
2020-12-05 23:07:21.403 DEBUG c.j.qualityworkflow.dao.TaskRecordMapper.getById[145]  <==      Total: 1
2020-12-05 23:07:21.403 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==>  Preparing: SELECT * FROM key_to_name 
2020-12-05 23:07:21.403 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  ==> Parameters: 
2020-12-05 23:07:21.417 DEBUG c.j.qualityworkflow.dao.CommonMapper.getKeyToName[145]  <==      Total: 8
2020-12-05 23:07:21.418 INFO  cn.jwis.qualityworkflow.util.EmailService[71]  haomiao.liu@jwis.cn send a Mail to test@jwis.cn
2020-12-05 23:07:21.729 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (kelvin@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl.qimsSendMail(AuditQualityProblemServiceImpl.java:321)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$FastClassBySpringCGLIB$$15ff325f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.ipqc.service.imp.AuditQualityProblemServiceImpl$$EnhancerBySpringCGLIB$$573b828e.qimsSendMail(<generated>)
	at cn.jwis.qualityworkflow.modules.ipqc.job.ipqcMailJob.qimsSendMail(ipqcMailJob.java:28)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:07:22.100 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist
;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (jian.song@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendEmailTohandler(LineQualifyServiceImpl.java:617)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl.sendOverTimeMail(LineQualifyServiceImpl.java:594)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$FastClassBySpringCGLIB$$4ca6f597.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.jwis.qualityworkflow.modules.linequalify.service.imp.LineQualifyServiceImpl$$EnhancerBySpringCGLIB$$9eaa8f36.sendOverTimeMail(<generated>)
	at cn.jwis.qualityworkflow.modules.linequalify.job.LineQualifyMailJob.sendOverTimeMail(LineQualifyMailJob.java:30)
	at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
2020-12-05 23:07:22.199 ERROR o.s.s.support.TaskUtils$LoggingErrorHandler[96] org.springframework.mail.MailSendException: Failed messages: javax.mail.SendFailedException: Invalid Addresses;
  nested exception is:
	com.sun.mail.smtp.SMTPAddressFailedException: 554 RCPT (test@jwis.cn) dosn't exist

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:488)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:359)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:354)
	at cn.jwis.qualityworkflow.util.EmailService.sendHtmlMail(EmailService.java:76)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.sendEmailTohandler(QimsSendMailServiceImpl.java:161)
	at cn.jwis.qualityworkflow.modules.qims.service.imp.QimsSendMailServiceImpl.qimsSendMail(QimsSendMailServiceImpl.java:90)
	at cn.jwis.qualityworkflow.modules.qims.job.qimsMailJob.qimsSendMail(qimsMailJob.java:49)
	at sun.reflect.GeneratedMethodAccessor186.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 Unexpected error occurred in scheduled task.
