<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jwis.qualityworkflow.dao.TaskRecordMapper">
  <sql id="Example_Where">
    <if test="templateKey != null and templateKey != ''">
       and  ar.template_key = #{templateKey}
    </if>
    <if test="startTime !=  null  and startTime != '' and startTime1 != null and startTime1 != ''and  endTime != null and endTime != '' and endTime1 != null and endTime1 != ''">
      and ((ar.create_date &gt;= #{startTime} and ar.create_date &lt;= #{startTime1}) or (ar.update_date &gt;= #{endTime} and ar.update_date  &lt;= #{endTime1}))
    </if>
    <if test='flag == 1'>
      and (ar.task_state is null or ar.task_state = 'OnGoing')
    </if>
    <if test='flag == 2'>
      and ar.task_state='Close'
    </if>
    <if test="assignee != null and assignee != ''">
      and ar.assignee =#{assignee}
    </if>
    order  by ar.create_date desc
    <if test="page != null and size != null">
      limit  #{page},#{size}
    </if>
  </sql>
  <sql id="Example_Where_New">
    <if test="templateKey != null and templateKey != ''">
      and  ar.template_key = #{templateKey}
    </if>
    <if test="startTime !=  null  and startTime != '' and startTime1 != null and startTime1 != ''and  endTime != null and endTime != '' and endTime1 != null and endTime1 != ''">
      and ((ar.create_date &gt;= #{startTime} and ar.create_date &lt;= #{startTime1}) or (ar.update_date &gt;= #{endTime} and ar.update_date  &lt;= #{endTime1}))
    </if>
    <if test='flag == 1'>
      and (ar.task_state is null or ar.task_state = 'OnGoing')
    </if>
    <if test='flag == 2'>
      and ar.task_state='Close'
    </if>
    <if test="assignee != null and assignee != ''">
      and ar.assignee =#{assignee}
    </if>
  </sql>
  <resultMap id="BaseResultMap" type="cn.jwis.qualityworkflow.bean.TaskRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="template_key" jdbcType="VARCHAR" property="templateKey" />
    <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId" />
    <result column="assignee" jdbcType="VARCHAR" property="assignee" />
    <result column="workflow_business_id" jdbcType="VARCHAR" property="workflowBusinessId" />
    <result column="task_state" jdbcType="VARCHAR" property="taskState" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="theme" jdbcType="VARCHAR" property="theme" />
    <result column="item_number" jdbcType="VARCHAR" property="itemNumber" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, template_key, process_instance_id, assignee, workflow_business_id, task_state, 
    state, task_name, task_id, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="cn.jwis.qualityworkflow.bean.TaskRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from task_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jwis.qualityworkflow.bean.TaskRecordExample">
    delete from task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jwis.qualityworkflow.bean.TaskRecord">
    insert into task_record (id, template_key, process_instance_id, 
      assignee,workflow_business_id, task_state,
      state,task_name, task_id,department,theme,item_number,creator)
    values (#{id,jdbcType=VARCHAR}, #{templateKey,jdbcType=VARCHAR}, #{processInstanceId,jdbcType=VARCHAR}, 
      #{assignee,jdbcType=VARCHAR}, #{workflowBusinessId,jdbcType=VARCHAR}, #{taskState,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR},#{department,jdbcType=VARCHAR},
      #{theme},#{itemNumber},#{creator})
  </insert>
  <insert id="insertSelective" parameterType="cn.jwis.qualityworkflow.bean.TaskRecord">
    insert into task_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="templateKey != null">
        template_key,
      </if>
      <if test="processInstanceId != null">
        process_instance_id,
      </if>
      <if test="assignee != null">
        assignee,
      </if>
      <if test="workflowBusinessId != null">
        workflow_business_id,
      </if>
      <if test="taskState != null">
        task_state,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="itemNumber != null">
        item_number,
      </if>
      <if test="theme != null">
        theme,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="templateKey != null">
        #{templateKey,jdbcType=VARCHAR},
      </if>
      <if test="processInstanceId != null">
        #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="assignee != null">
        #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="workflowBusinessId != null">
        #{workflowBusinessId,jdbcType=VARCHAR},
      </if>
      <if test="taskState != null">
        #{taskState,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="itemNumber != null">
        #{itemNumber,jdbcType=VARCHAR},
      </if>
      <if test="theme != null">
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jwis.qualityworkflow.bean.TaskRecordExample" resultType="java.lang.Integer">
    select count(*) from task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.templateKey != null">
        template_key = #{record.templateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.processInstanceId != null">
        process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.assignee != null">
        assignee = #{record.assignee,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowBusinessId != null">
        workflow_business_id = #{record.workflowBusinessId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskState != null">
        task_state = #{record.taskState,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_record
    set id = #{record.id,jdbcType=VARCHAR},
      template_key = #{record.templateKey,jdbcType=VARCHAR},
      process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
      assignee = #{record.assignee,jdbcType=VARCHAR},
      workflow_business_id = #{record.workflowBusinessId,jdbcType=VARCHAR},
      task_state = #{record.taskState,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jwis.qualityworkflow.bean.TaskRecord">
    update task_record
    <set>
      <if test="templateKey != null">
        template_key = #{templateKey,jdbcType=VARCHAR},
      </if>
      <if test="processInstanceId != null">
        process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="assignee != null">
        assignee = #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="workflowBusinessId != null">
        workflow_business_id = #{workflowBusinessId,jdbcType=VARCHAR},
      </if>
      <if test="taskState != null">
        task_state = #{taskState,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jwis.qualityworkflow.bean.TaskRecord">
    update task_record
    set template_key = #{templateKey,jdbcType=VARCHAR},
      process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
      assignee = #{assignee,jdbcType=VARCHAR},
      workflow_business_id = #{workflowBusinessId,jdbcType=VARCHAR},
      task_state = #{taskState,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getOverdueCount" resultType="java.lang.Long">
     select count(DISTINCT workflow_business_id) as num
     from task_record where task_state is Null
     <if test = 'idList != null and idList.size > 0'>
     and  workflow_business_id in
        <foreach collection='idList' index='' item='item' separator=',' open='(' close=')' >
          #{item}
        </foreach>
     </if>
    and create_date &lt;= DATE_SUB(CURRENT_TIMESTAMP,INTERVAL #{delayHour} HOUR)
  </select>

  <select id="getProcessAgent" resultType="map">
    select  *  from  (SELECT
    *
    FROM
    task_record UNION ALL
    SELECT
    id,
    "PCN" template_key,
    processInstanceId process_instance_id,
    assignee,
    pcnId workflow_business_id,
    taskState task_state,
    state,
    taskName task_name,
    taskId task_id,
    null department,
    createDate create_date,
    updateDate update_date,
    theme,
    item_number,
    creator
    FROM
    pcn_task_record) ar where  1=1
    <include refid="Example_Where"/>
  </select>

  <select id="getProcessAgentCount" resultType="Long">
    select  count(1) from  (SELECT
    *
    FROM
    task_record UNION ALL
    SELECT
    id,
    "PCN" template_key,
    processInstanceId process_instance_id,
    assignee,
    pcnId workflow_business_id,
    taskState task_state,
    state,
    taskName task_name,
    taskId task_id,
    null department,
    createDate create_date,
    updateDate update_date,
    theme,
    item_number,
    creator
    FROM
    pcn_task_record) ar where  1=1
    <include refid="Example_Where_New"/>
  </select>
</mapper>