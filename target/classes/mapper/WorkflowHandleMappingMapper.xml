<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jwis.qualityworkflow.dao.WorkflowHandleMappingMapper">
  <resultMap id="BaseResultMap" type="cn.jwis.qualityworkflow.bean.WorkflowHandleMapping">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="workflow_type" jdbcType="VARCHAR" property="workflowType" />
    <result column="workflow_node" jdbcType="VARCHAR" property="workflowNode" />
    <result column="handle_opinion" jdbcType="VARCHAR" property="handleOpinion" />
    <result column="reject_reason" jdbcType="VARCHAR" property="rejectReason" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, workflow_type, workflow_node, handle_opinion, reject_reason, create_date, update_date, 
    creator
  </sql>
  <select id="selectByExample" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMappingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workflow_handle_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from workflow_handle_mapping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from workflow_handle_mapping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMappingExample">
    delete from workflow_handle_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMapping">
    insert into workflow_handle_mapping (id, workflow_type, workflow_node, 
      handle_opinion, reject_reason, create_date, 
      update_date, creator)
    values (#{id,jdbcType=INTEGER}, #{workflowType,jdbcType=VARCHAR}, #{workflowNode,jdbcType=VARCHAR}, 
      #{handleOpinion,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMapping">
    insert into workflow_handle_mapping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workflowType != null">
        workflow_type,
      </if>
      <if test="workflowNode != null">
        workflow_node,
      </if>
      <if test="handleOpinion != null">
        handle_opinion,
      </if>
      <if test="rejectReason != null">
        reject_reason,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="workflowType != null">
        #{workflowType,jdbcType=VARCHAR},
      </if>
      <if test="workflowNode != null">
        #{workflowNode,jdbcType=VARCHAR},
      </if>
      <if test="handleOpinion != null">
        #{handleOpinion,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null">
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMappingExample" resultType="java.lang.Integer">
    select count(*) from workflow_handle_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update workflow_handle_mapping
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.workflowType != null">
        workflow_type = #{record.workflowType,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowNode != null">
        workflow_node = #{record.workflowNode,jdbcType=VARCHAR},
      </if>
      <if test="record.handleOpinion != null">
        handle_opinion = #{record.handleOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null">
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update workflow_handle_mapping
    set id = #{record.id,jdbcType=INTEGER},
      workflow_type = #{record.workflowType,jdbcType=VARCHAR},
      workflow_node = #{record.workflowNode,jdbcType=VARCHAR},
      handle_opinion = #{record.handleOpinion,jdbcType=VARCHAR},
      reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMapping">
    update workflow_handle_mapping
    <set>
      <if test="workflowType != null">
        workflow_type = #{workflowType,jdbcType=VARCHAR},
      </if>
      <if test="workflowNode != null">
        workflow_node = #{workflowNode,jdbcType=VARCHAR},
      </if>
      <if test="handleOpinion != null">
        handle_opinion = #{handleOpinion,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null">
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jwis.qualityworkflow.bean.WorkflowHandleMapping">
    update workflow_handle_mapping
    set workflow_type = #{workflowType,jdbcType=VARCHAR},
      workflow_node = #{workflowNode,jdbcType=VARCHAR},
      handle_opinion = #{handleOpinion,jdbcType=VARCHAR},
      reject_reason = #{rejectReason,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>