<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jwis.qualityworkflow.modules.rework.dao.ReworkInfoMapper">
  <resultMap id="BaseResultMap" type="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="data_source" jdbcType="VARCHAR" property="dataSource" />
    <result column="rework_number" jdbcType="VARCHAR" property="reworkNumber" />
    <result column="rework_theme" jdbcType="VARCHAR" property="reworkTheme" />
    <result column="rework_reason" jdbcType="VARCHAR" property="reworkReason" />
    <result column="rework_quantity" jdbcType="VARCHAR" property="reworkQuantity" />
    <result column="rework_material_number" jdbcType="VARCHAR" property="reworkMaterialNumber" />
    <result column="rework_confirm_result" jdbcType="VARCHAR" property="reworkConfirmResult" />
    <result column="rework_confirmor" jdbcType="VARCHAR" property="reworkConfirmor" />
    <result column="rework_confirm_time" jdbcType="TIMESTAMP" property="reworkConfirmTime" />
    <result column="crafts_section" jdbcType="VARCHAR" property="craftsSection" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="problem_type" jdbcType="VARCHAR" property="problemType" />
    <result column="problem_time" jdbcType="TIMESTAMP" property="problemTime" />
    <result column="root_cause_responsibility" jdbcType="VARCHAR" property="rootCauseResponsibility" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="status" jdbcType="VARCHAR" property="statusDisplay" />
    <result column="auditor" jdbcType="VARCHAR" property="auditor" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="project_handler" jdbcType="VARCHAR" property="projectHandler" />
    <result column="project_handle_time" jdbcType="TIMESTAMP" property="projectHandleTime" />
    <result column="plan_handler" jdbcType="VARCHAR" property="planHandler" />
    <result column="plan_handle_time" jdbcType="TIMESTAMP" property="planHandleTime" />
    <result column="production_handler" jdbcType="VARCHAR" property="productionHandler" />
    <result column="production_execution_time" jdbcType="TIMESTAMP" property="productionExecutionTime" />
    <result column="assignee" jdbcType="VARCHAR" property="assignee" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, data_source, rework_number, rework_theme, rework_reason, rework_quantity, rework_material_number, 
    rework_confirm_result, rework_confirmor, rework_confirm_time, crafts_section, model, 
    problem_type, problem_time, root_cause_responsibility, status, auditor, audit_time, 
    project_handler, project_handle_time, plan_handler, plan_handle_time, production_handler, 
    production_execution_time, assignee, creator, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rework_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rework_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rework_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfoExample">
    delete from rework_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfo">
    insert into rework_info (id, data_source, rework_number, 
      rework_theme, rework_reason, rework_quantity, 
      rework_material_number, rework_confirm_result, 
      rework_confirmor, rework_confirm_time, crafts_section, 
      model, problem_type, problem_time, 
      root_cause_responsibility, status, auditor, 
      audit_time, project_handler, project_handle_time, 
      plan_handler, plan_handle_time, production_handler, 
      production_execution_time, assignee, creator, 
      create_date, update_date)
    values (#{id,jdbcType=VARCHAR}, #{dataSource,jdbcType=VARCHAR}, #{reworkNumber,jdbcType=VARCHAR}, 
      #{reworkTheme,jdbcType=VARCHAR}, #{reworkReason,jdbcType=VARCHAR}, #{reworkQuantity,jdbcType=VARCHAR}, 
      #{reworkMaterialNumber,jdbcType=VARCHAR}, #{reworkConfirmResult,jdbcType=VARCHAR}, 
      #{reworkConfirmor,jdbcType=VARCHAR}, #{reworkConfirmTime,jdbcType=TIMESTAMP}, #{craftsSection,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{problemType,jdbcType=VARCHAR}, #{problemTime,jdbcType=TIMESTAMP}, 
      #{rootCauseResponsibility,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{auditor,jdbcType=VARCHAR}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{projectHandler,jdbcType=VARCHAR}, #{projectHandleTime,jdbcType=TIMESTAMP}, 
      #{planHandler,jdbcType=VARCHAR}, #{planHandleTime,jdbcType=TIMESTAMP}, #{productionHandler,jdbcType=VARCHAR}, 
      #{productionExecutionTime,jdbcType=TIMESTAMP}, #{assignee,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfo">
    insert into rework_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dataSource != null">
        data_source,
      </if>
      <if test="reworkNumber != null">
        rework_number,
      </if>
      <if test="reworkTheme != null">
        rework_theme,
      </if>
      <if test="reworkReason != null">
        rework_reason,
      </if>
      <if test="reworkQuantity != null">
        rework_quantity,
      </if>
      <if test="reworkMaterialNumber != null">
        rework_material_number,
      </if>
      <if test="reworkConfirmResult != null">
        rework_confirm_result,
      </if>
      <if test="reworkConfirmor != null">
        rework_confirmor,
      </if>
      <if test="reworkConfirmTime != null">
        rework_confirm_time,
      </if>
      <if test="craftsSection != null">
        crafts_section,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="problemType != null">
        problem_type,
      </if>
      <if test="problemTime != null">
        problem_time,
      </if>
      <if test="rootCauseResponsibility != null">
        root_cause_responsibility,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="auditor != null">
        auditor,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="projectHandler != null">
        project_handler,
      </if>
      <if test="projectHandleTime != null">
        project_handle_time,
      </if>
      <if test="planHandler != null">
        plan_handler,
      </if>
      <if test="planHandleTime != null">
        plan_handle_time,
      </if>
      <if test="productionHandler != null">
        production_handler,
      </if>
      <if test="productionExecutionTime != null">
        production_execution_time,
      </if>
      <if test="assignee != null">
        assignee,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="dataSource != null">
        #{dataSource,jdbcType=VARCHAR},
      </if>
      <if test="reworkNumber != null">
        #{reworkNumber,jdbcType=VARCHAR},
      </if>
      <if test="reworkTheme != null">
        #{reworkTheme,jdbcType=VARCHAR},
      </if>
      <if test="reworkReason != null">
        #{reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="reworkQuantity != null">
        #{reworkQuantity,jdbcType=VARCHAR},
      </if>
      <if test="reworkMaterialNumber != null">
        #{reworkMaterialNumber,jdbcType=VARCHAR},
      </if>
      <if test="reworkConfirmResult != null">
        #{reworkConfirmResult,jdbcType=VARCHAR},
      </if>
      <if test="reworkConfirmor != null">
        #{reworkConfirmor,jdbcType=VARCHAR},
      </if>
      <if test="reworkConfirmTime != null">
        #{reworkConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="craftsSection != null">
        #{craftsSection,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="problemType != null">
        #{problemType,jdbcType=VARCHAR},
      </if>
      <if test="problemTime != null">
        #{problemTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rootCauseResponsibility != null">
        #{rootCauseResponsibility,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null">
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectHandler != null">
        #{projectHandler,jdbcType=VARCHAR},
      </if>
      <if test="projectHandleTime != null">
        #{projectHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planHandler != null">
        #{planHandler,jdbcType=VARCHAR},
      </if>
      <if test="planHandleTime != null">
        #{planHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productionHandler != null">
        #{productionHandler,jdbcType=VARCHAR},
      </if>
      <if test="productionExecutionTime != null">
        #{productionExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="assignee != null">
        #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfoExample" resultType="java.lang.Integer">
    select count(*) from rework_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rework_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.dataSource != null">
        data_source = #{record.dataSource,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkNumber != null">
        rework_number = #{record.reworkNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkTheme != null">
        rework_theme = #{record.reworkTheme,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkReason != null">
        rework_reason = #{record.reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkQuantity != null">
        rework_quantity = #{record.reworkQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkMaterialNumber != null">
        rework_material_number = #{record.reworkMaterialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkConfirmResult != null">
        rework_confirm_result = #{record.reworkConfirmResult,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkConfirmor != null">
        rework_confirmor = #{record.reworkConfirmor,jdbcType=VARCHAR},
      </if>
      <if test="record.reworkConfirmTime != null">
        rework_confirm_time = #{record.reworkConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.craftsSection != null">
        crafts_section = #{record.craftsSection,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.problemType != null">
        problem_type = #{record.problemType,jdbcType=VARCHAR},
      </if>
      <if test="record.problemTime != null">
        problem_time = #{record.problemTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rootCauseResponsibility != null">
        root_cause_responsibility = #{record.rootCauseResponsibility,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.auditor != null">
        auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectHandler != null">
        project_handler = #{record.projectHandler,jdbcType=VARCHAR},
      </if>
      <if test="record.projectHandleTime != null">
        project_handle_time = #{record.projectHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planHandler != null">
        plan_handler = #{record.planHandler,jdbcType=VARCHAR},
      </if>
      <if test="record.planHandleTime != null">
        plan_handle_time = #{record.planHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productionHandler != null">
        production_handler = #{record.productionHandler,jdbcType=VARCHAR},
      </if>
      <if test="record.productionExecutionTime != null">
        production_execution_time = #{record.productionExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assignee != null">
        assignee = #{record.assignee,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rework_info
    set id = #{record.id,jdbcType=VARCHAR},
      data_source = #{record.dataSource,jdbcType=VARCHAR},
      rework_number = #{record.reworkNumber,jdbcType=VARCHAR},
      rework_theme = #{record.reworkTheme,jdbcType=VARCHAR},
      rework_reason = #{record.reworkReason,jdbcType=VARCHAR},
      rework_quantity = #{record.reworkQuantity,jdbcType=VARCHAR},
      rework_material_number = #{record.reworkMaterialNumber,jdbcType=VARCHAR},
      rework_confirm_result = #{record.reworkConfirmResult,jdbcType=VARCHAR},
      rework_confirmor = #{record.reworkConfirmor,jdbcType=VARCHAR},
      rework_confirm_time = #{record.reworkConfirmTime,jdbcType=TIMESTAMP},
      crafts_section = #{record.craftsSection,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      problem_type = #{record.problemType,jdbcType=VARCHAR},
      problem_time = #{record.problemTime,jdbcType=TIMESTAMP},
      root_cause_responsibility = #{record.rootCauseResponsibility,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      auditor = #{record.auditor,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      project_handler = #{record.projectHandler,jdbcType=VARCHAR},
      project_handle_time = #{record.projectHandleTime,jdbcType=TIMESTAMP},
      plan_handler = #{record.planHandler,jdbcType=VARCHAR},
      plan_handle_time = #{record.planHandleTime,jdbcType=TIMESTAMP},
      production_handler = #{record.productionHandler,jdbcType=VARCHAR},
      production_execution_time = #{record.productionExecutionTime,jdbcType=TIMESTAMP},
      assignee = #{record.assignee,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfo">
    update rework_info
    <set>
      <if test="dataSource != null">
        data_source = #{dataSource,jdbcType=VARCHAR},
      </if>
      <if test="reworkNumber != null">
        rework_number = #{reworkNumber,jdbcType=VARCHAR},
      </if>
      <if test="reworkTheme != null">
        rework_theme = #{reworkTheme,jdbcType=VARCHAR},
      </if>
      <if test="reworkReason != null">
        rework_reason = #{reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="reworkQuantity != null">
        rework_quantity = #{reworkQuantity,jdbcType=VARCHAR},
      </if>
      <if test="reworkMaterialNumber != null">
        rework_material_number = #{reworkMaterialNumber,jdbcType=VARCHAR},
      </if>
      <if test="reworkConfirmResult != null">
        rework_confirm_result = #{reworkConfirmResult,jdbcType=VARCHAR},
      </if>
      <if test="reworkConfirmor != null">
        rework_confirmor = #{reworkConfirmor,jdbcType=VARCHAR},
      </if>
      <if test="reworkConfirmTime != null">
        rework_confirm_time = #{reworkConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="craftsSection != null">
        crafts_section = #{craftsSection,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="problemType != null">
        problem_type = #{problemType,jdbcType=VARCHAR},
      </if>
      <if test="problemTime != null">
        problem_time = #{problemTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rootCauseResponsibility != null">
        root_cause_responsibility = #{rootCauseResponsibility,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null">
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectHandler != null">
        project_handler = #{projectHandler,jdbcType=VARCHAR},
      </if>
      <if test="projectHandleTime != null">
        project_handle_time = #{projectHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planHandler != null">
        plan_handler = #{planHandler,jdbcType=VARCHAR},
      </if>
      <if test="planHandleTime != null">
        plan_handle_time = #{planHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productionHandler != null">
        production_handler = #{productionHandler,jdbcType=VARCHAR},
      </if>
      <if test="productionExecutionTime != null">
        production_execution_time = #{productionExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="assignee != null">
        assignee = #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfo">
    update rework_info
    set data_source = #{dataSource,jdbcType=VARCHAR},
      rework_number = #{reworkNumber,jdbcType=VARCHAR},
      rework_theme = #{reworkTheme,jdbcType=VARCHAR},
      rework_reason = #{reworkReason,jdbcType=VARCHAR},
      rework_quantity = #{reworkQuantity,jdbcType=VARCHAR},
      rework_material_number = #{reworkMaterialNumber,jdbcType=VARCHAR},
      rework_confirm_result = #{reworkConfirmResult,jdbcType=VARCHAR},
      rework_confirmor = #{reworkConfirmor,jdbcType=VARCHAR},
      rework_confirm_time = #{reworkConfirmTime,jdbcType=TIMESTAMP},
      crafts_section = #{craftsSection,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      problem_type = #{problemType,jdbcType=VARCHAR},
      problem_time = #{problemTime,jdbcType=TIMESTAMP},
      root_cause_responsibility = #{rootCauseResponsibility,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      project_handler = #{projectHandler,jdbcType=VARCHAR},
      project_handle_time = #{projectHandleTime,jdbcType=TIMESTAMP},
      plan_handler = #{planHandler,jdbcType=VARCHAR},
      plan_handle_time = #{planHandleTime,jdbcType=TIMESTAMP},
      production_handler = #{productionHandler,jdbcType=VARCHAR},
      production_execution_time = #{productionExecutionTime,jdbcType=TIMESTAMP},
      assignee = #{assignee,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!--自写查询语句-->
  <!--时间处理sql-->
  <sql id="time">
    <if test="startTime and startTime !=null != &quot;&quot;">
      AND ${time}  &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d ')
    </if>
    <if test="endTime !=null and  endTime != &quot;&quot;">
      AND ${time} &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d ')
    </if>
  </sql>

  <!--工艺段和机型list的查询语句-->
  <sql id="listCondition">
    <if test="craftsSection != null and craftsSection.size &gt; 0">
      AND crafts_section in
      <foreach close=")" collection="craftsSection" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="model != null and model.size &gt; 0">
      AND model in
      <foreach close=")" collection="model" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
  </sql>

  <select id="getApplyInfo" parameterType="cn.jwis.qualityworkflow.modules.rework.bean.ReworkInfo" resultMap="BaseResultMap">
    select e.*,ar.process_instance_id,ar.task_id  FROM rework_info e,
    (SELECT
    t1.process_instance_id,t1.task_id,t1.task_state,t1.workflow_business_id
    FROM
    task_record t1
    INNER JOIN (
    <if test="admin==1">
      (
    </if>
    SELECT process_instance_id, max( task_id ) AS task_id, assignee FROM task_record
    WHERE template_key = 'ReworkProcess'
    AND assignee = #{assignee}
    GROUP BY process_instance_id
    <if test="admin==1">
      ) union
      (SELECT process_instance_id, max( task_id ) AS task_id, assignee FROM task_record
      WHERE template_key = 'ReworkProcess'
      AND process_instance_id not in (
      SELECT process_instance_id  FROM task_record
      WHERE template_key = 'ReworkProcess'
      AND assignee = #{assignee}
      GROUP BY process_instance_id
      )
      GROUP BY process_instance_id
      )
    </if>
    ) t2 ON t1.process_instance_id = t2.process_instance_id
    and t1.task_id = t2.task_id
    ) ar where e.id=ar.workflow_business_id
    <include refid="listCondition" />
    <if test="reworkTheme != null and reworkTheme != &quot;&quot;">
      AND rework_theme like CONCAT('%', #{reworkTheme}, '%')
    </if>
    <include refid="time" />
  </select>


  <select id="getReworkQuantityChart" resultType="map">
    select
    ${groupBy} as time,
    CAST(SUM(rework_quantity) AS SIGNED ) as num
    from rework_info
    where 1=1
    <include refid="listCondition" />
    <if test="rootCauseResponsibility != null and rootCauseResponsibility.size &gt; 0">
      AND root_cause_responsibility in
      <foreach close=")" collection="rootCauseResponsibility" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <include refid="time" />
    group by time
    order by time
  </select>

  <select id="getPieChart" resultType="map">
    select
    ${groupBy} as type,
    CAST(SUM(rework_quantity) AS SIGNED ) as num
    from rework_info
    where 1=1
    <include refid="listCondition" />
    <if test="rootCauseResponsibility != null and rootCauseResponsibility.size &gt; 0">
      AND root_cause_responsibility in
      <foreach close=")" collection="rootCauseResponsibility" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <include refid="time" />
    group by type
    having type is not null
    order by type
  </select>

  <select id="selectByPrimaryKeys"   resultMap="BaseResultMap">
    select
    *
    from rework_info
    where 1 = 1
    <if test="ids != null and ids.size > 0">
      AND id in
      <foreach collection='ids' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
  </select>
</mapper>