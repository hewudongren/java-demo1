<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jwis.qualityworkflow.modules.ecn.dao.EcnInfoMapper">
  <resultMap id="BaseResultMap" type="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_number" jdbcType="VARCHAR" property="itemNumber" />
    <result column="item_type" jdbcType="VARCHAR" property="itemType" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_oid" jdbcType="VARCHAR" property="fileOid" />
    <result column="sender_side" jdbcType="VARCHAR" property="senderSide" />
    <result column="document_originator" jdbcType="VARCHAR" property="documentOriginator" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="change_type" jdbcType="VARCHAR" property="changeType" />
    <result column="posting_time" jdbcType="TIMESTAMP" property="postingTime" />
    <result column="works_section" jdbcType="VARCHAR" property="worksSection" />
    <result column="works_head" jdbcType="VARCHAR" property="worksHead" />
    <result column="quality_head" jdbcType="VARCHAR" property="qualityHead" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="status" jdbcType="VARCHAR" property="statusDisplay" />
    <result column="involved_area" jdbcType="VARCHAR" property="involvedArea" />
    <result column="change_import_scheme" jdbcType="VARCHAR" property="changeImportScheme" />
    <result column="change_import_time" jdbcType="TIMESTAMP" property="changeImportTime" />
    <result column="change_import_mode" jdbcType="VARCHAR" property="changeImportMode" />
    <result column="ipqc_handler" jdbcType="VARCHAR" property="ipqcHandler" />
    <result column="ipqc_verification_results" jdbcType="VARCHAR" property="ipqcVerificationResults" />
    <result column="ipqc_verification_reason" jdbcType="VARCHAR" property="ipqcVerificationReason" />
    <result column="ipqc_verifier" jdbcType="VARCHAR" property="ipqcVerifier" />
    <result column="ipqc_verification_time" jdbcType="TIMESTAMP" property="ipqcVerificationTime" />
    <result column="project_approval_result" jdbcType="VARCHAR" property="projectApprovalResult" />
    <result column="project_approval_opinion" jdbcType="VARCHAR" property="projectApprovalOpinion" />
    <result column="project_approver" jdbcType="VARCHAR" property="projectApprover" />
    <result column="project_approver_time" jdbcType="TIMESTAMP" property="projectApproverTime" />
    <result column="odm_approval_result" jdbcType="VARCHAR" property="odmApprovalResult" />
    <result column="odm_approval_opinion" jdbcType="VARCHAR" property="odmApprovalOpinion" />
    <result column="odm_approver" jdbcType="VARCHAR" property="odmApprover" />
    <result column="odm_approver_time" jdbcType="TIMESTAMP" property="odmApproverTime" />
    <result column="sqe_approval_result" jdbcType="VARCHAR" property="sqeApprovalResult" />
    <result column="sqe_approval_opinion" jdbcType="VARCHAR" property="sqeApprovalOpinion" />
    <result column="sqe_approver" jdbcType="VARCHAR" property="sqeApprover" />
    <result column="sqe_approver_time" jdbcType="TIMESTAMP" property="sqeApproverTime" />
    <result column="file_address" jdbcType="VARCHAR" property="fileAddress" />
    <result column="assignee" jdbcType="VARCHAR" property="assignee" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_state" jdbcType="VARCHAR" property="taskState" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, item_number, item_type, file_name, file_oid, sender_side, document_originator,
    model_name, change_type, posting_time, works_section, works_head, quality_head, status,
    involved_area, change_import_scheme, change_import_time, change_import_mode, ipqc_handler,
    ipqc_verification_results, ipqc_verification_reason, ipqc_verifier, ipqc_verification_time,
    project_approval_result, project_approval_opinion, project_approver, project_approver_time,
    odm_approval_result, odm_approval_opinion, odm_approver, odm_approver_time, sqe_approval_result,
    sqe_approval_opinion, sqe_approver, sqe_approver_time, file_address, assignee, remark,
    creator, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ecn_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ecn_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ecn_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfoExample">
    delete from ecn_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfo">
    insert into ecn_info (id, item_number, item_type,
      file_name, file_oid, sender_side,
      document_originator, model_name, change_type,
      posting_time, works_section, works_head,
      quality_head, status, involved_area,
      change_import_scheme, change_import_time,
      change_import_mode, ipqc_handler, ipqc_verification_results,
      ipqc_verification_reason, ipqc_verifier, ipqc_verification_time,
      project_approval_result, project_approval_opinion,
      project_approver, project_approver_time,
      odm_approval_result, odm_approval_opinion,
      odm_approver, odm_approver_time, sqe_approval_result,
      sqe_approval_opinion, sqe_approver, sqe_approver_time,
      file_address, assignee, remark,
      creator, create_date, update_date
      )
    values (#{id,jdbcType=VARCHAR}, #{itemNumber,jdbcType=VARCHAR}, #{itemType,jdbcType=VARCHAR},
      #{fileName,jdbcType=VARCHAR}, #{fileOid,jdbcType=VARCHAR}, #{senderSide,jdbcType=VARCHAR},
      #{documentOriginator,jdbcType=VARCHAR}, #{modelName,jdbcType=VARCHAR}, #{changeType,jdbcType=VARCHAR},
      #{postingTime,jdbcType=TIMESTAMP}, #{worksSection,jdbcType=VARCHAR}, #{worksHead,jdbcType=VARCHAR},
      #{qualityHead,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{involvedArea,jdbcType=VARCHAR},
      #{changeImportScheme,jdbcType=VARCHAR}, #{changeImportTime,jdbcType=TIMESTAMP},
      #{changeImportMode,jdbcType=VARCHAR}, #{ipqcHandler,jdbcType=VARCHAR}, #{ipqcVerificationResults,jdbcType=VARCHAR},
      #{ipqcVerificationReason,jdbcType=VARCHAR}, #{ipqcVerifier,jdbcType=VARCHAR}, #{ipqcVerificationTime,jdbcType=TIMESTAMP},
      #{projectApprovalResult,jdbcType=VARCHAR}, #{projectApprovalOpinion,jdbcType=VARCHAR},
      #{projectApprover,jdbcType=VARCHAR}, #{projectApproverTime,jdbcType=TIMESTAMP},
      #{odmApprovalResult,jdbcType=VARCHAR}, #{odmApprovalOpinion,jdbcType=VARCHAR},
      #{odmApprover,jdbcType=VARCHAR}, #{odmApproverTime,jdbcType=TIMESTAMP}, #{sqeApprovalResult,jdbcType=VARCHAR},
      #{sqeApprovalOpinion,jdbcType=VARCHAR}, #{sqeApprover,jdbcType=VARCHAR}, #{sqeApproverTime,jdbcType=TIMESTAMP},
      #{fileAddress,jdbcType=VARCHAR}, #{assignee,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{creator,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfo">
    insert into ecn_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="itemNumber != null">
        item_number,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileOid != null">
        file_oid,
      </if>
      <if test="senderSide != null">
        sender_side,
      </if>
      <if test="documentOriginator != null">
        document_originator,
      </if>
      <if test="modelName != null">
        model_name,
      </if>
      <if test="changeType != null">
        change_type,
      </if>
      <if test="postingTime != null">
        posting_time,
      </if>
      <if test="worksSection != null">
        works_section,
      </if>
      <if test="worksHead != null">
        works_head,
      </if>
      <if test="qualityHead != null">
        quality_head,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="involvedArea != null">
        involved_area,
      </if>
      <if test="changeImportScheme != null">
        change_import_scheme,
      </if>
      <if test="changeImportTime != null">
        change_import_time,
      </if>
      <if test="changeImportMode != null">
        change_import_mode,
      </if>
      <if test="ipqcHandler != null">
        ipqc_handler,
      </if>
      <if test="ipqcVerificationResults != null">
        ipqc_verification_results,
      </if>
      <if test="ipqcVerificationReason != null">
        ipqc_verification_reason,
      </if>
      <if test="ipqcVerifier != null">
        ipqc_verifier,
      </if>
      <if test="ipqcVerificationTime != null">
        ipqc_verification_time,
      </if>
      <if test="projectApprovalResult != null">
        project_approval_result,
      </if>
      <if test="projectApprovalOpinion != null">
        project_approval_opinion,
      </if>
      <if test="projectApprover != null">
        project_approver,
      </if>
      <if test="projectApproverTime != null">
        project_approver_time,
      </if>
      <if test="odmApprovalResult != null">
        odm_approval_result,
      </if>
      <if test="odmApprovalOpinion != null">
        odm_approval_opinion,
      </if>
      <if test="odmApprover != null">
        odm_approver,
      </if>
      <if test="odmApproverTime != null">
        odm_approver_time,
      </if>
      <if test="sqeApprovalResult != null">
        sqe_approval_result,
      </if>
      <if test="sqeApprovalOpinion != null">
        sqe_approval_opinion,
      </if>
      <if test="sqeApprover != null">
        sqe_approver,
      </if>
      <if test="sqeApproverTime != null">
        sqe_approver_time,
      </if>
      <if test="fileAddress != null">
        file_address,
      </if>
      <if test="assignee != null">
        assignee,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="itemNumber != null">
        #{itemNumber,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileOid != null">
        #{fileOid,jdbcType=VARCHAR},
      </if>
      <if test="senderSide != null">
        #{senderSide,jdbcType=VARCHAR},
      </if>
      <if test="documentOriginator != null">
        #{documentOriginator,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="changeType != null">
        #{changeType,jdbcType=VARCHAR},
      </if>
      <if test="postingTime != null">
        #{postingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="worksSection != null">
        #{worksSection,jdbcType=VARCHAR},
      </if>
      <if test="worksHead != null">
        #{worksHead,jdbcType=VARCHAR},
      </if>
      <if test="qualityHead != null">
        #{qualityHead,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="involvedArea != null">
        #{involvedArea,jdbcType=VARCHAR},
      </if>
      <if test="changeImportScheme != null">
        #{changeImportScheme,jdbcType=VARCHAR},
      </if>
      <if test="changeImportTime != null">
        #{changeImportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeImportMode != null">
        #{changeImportMode,jdbcType=VARCHAR},
      </if>
      <if test="ipqcHandler != null">
        #{ipqcHandler,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerificationResults != null">
        #{ipqcVerificationResults,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerificationReason != null">
        #{ipqcVerificationReason,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerifier != null">
        #{ipqcVerifier,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerificationTime != null">
        #{ipqcVerificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectApprovalResult != null">
        #{projectApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="projectApprovalOpinion != null">
        #{projectApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="projectApprover != null">
        #{projectApprover,jdbcType=VARCHAR},
      </if>
      <if test="projectApproverTime != null">
        #{projectApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="odmApprovalResult != null">
        #{odmApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="odmApprovalOpinion != null">
        #{odmApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="odmApprover != null">
        #{odmApprover,jdbcType=VARCHAR},
      </if>
      <if test="odmApproverTime != null">
        #{odmApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sqeApprovalResult != null">
        #{sqeApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="sqeApprovalOpinion != null">
        #{sqeApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="sqeApprover != null">
        #{sqeApprover,jdbcType=VARCHAR},
      </if>
      <if test="sqeApproverTime != null">
        #{sqeApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileAddress != null">
        #{fileAddress,jdbcType=VARCHAR},
      </if>
      <if test="assignee != null">
        #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfoExample" resultType="java.lang.Integer">
    select count(*) from ecn_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ecn_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.itemNumber != null">
        item_number = #{record.itemNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.itemType != null">
        item_type = #{record.itemType,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileOid != null">
        file_oid = #{record.fileOid,jdbcType=VARCHAR},
      </if>
      <if test="record.senderSide != null">
        sender_side = #{record.senderSide,jdbcType=VARCHAR},
      </if>
      <if test="record.documentOriginator != null">
        document_originator = #{record.documentOriginator,jdbcType=VARCHAR},
      </if>
      <if test="record.modelName != null">
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.changeType != null">
        change_type = #{record.changeType,jdbcType=VARCHAR},
      </if>
      <if test="record.postingTime != null">
        posting_time = #{record.postingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.worksSection != null">
        works_section = #{record.worksSection,jdbcType=VARCHAR},
      </if>
      <if test="record.worksHead != null">
        works_head = #{record.worksHead,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityHead != null">
        quality_head = #{record.qualityHead,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.involvedArea != null">
        involved_area = #{record.involvedArea,jdbcType=VARCHAR},
      </if>
      <if test="record.changeImportScheme != null">
        change_import_scheme = #{record.changeImportScheme,jdbcType=VARCHAR},
      </if>
      <if test="record.changeImportTime != null">
        change_import_time = #{record.changeImportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeImportMode != null">
        change_import_mode = #{record.changeImportMode,jdbcType=VARCHAR},
      </if>
      <if test="record.ipqcHandler != null">
        ipqc_handler = #{record.ipqcHandler,jdbcType=VARCHAR},
      </if>
      <if test="record.ipqcVerificationResults != null">
        ipqc_verification_results = #{record.ipqcVerificationResults,jdbcType=VARCHAR},
      </if>
      <if test="record.ipqcVerificationReason != null">
        ipqc_verification_reason = #{record.ipqcVerificationReason,jdbcType=VARCHAR},
      </if>
      <if test="record.ipqcVerifier != null">
        ipqc_verifier = #{record.ipqcVerifier,jdbcType=VARCHAR},
      </if>
      <if test="record.ipqcVerificationTime != null">
        ipqc_verification_time = #{record.ipqcVerificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectApprovalResult != null">
        project_approval_result = #{record.projectApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="record.projectApprovalOpinion != null">
        project_approval_opinion = #{record.projectApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.projectApprover != null">
        project_approver = #{record.projectApprover,jdbcType=VARCHAR},
      </if>
      <if test="record.projectApproverTime != null">
        project_approver_time = #{record.projectApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.odmApprovalResult != null">
        odm_approval_result = #{record.odmApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="record.odmApprovalOpinion != null">
        odm_approval_opinion = #{record.odmApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.odmApprover != null">
        odm_approver = #{record.odmApprover,jdbcType=VARCHAR},
      </if>
      <if test="record.odmApproverTime != null">
        odm_approver_time = #{record.odmApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sqeApprovalResult != null">
        sqe_approval_result = #{record.sqeApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="record.sqeApprovalOpinion != null">
        sqe_approval_opinion = #{record.sqeApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.sqeApprover != null">
        sqe_approver = #{record.sqeApprover,jdbcType=VARCHAR},
      </if>
      <if test="record.sqeApproverTime != null">
        sqe_approver_time = #{record.sqeApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileAddress != null">
        file_address = #{record.fileAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.assignee != null">
        assignee = #{record.assignee,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ecn_info
    set id = #{record.id,jdbcType=VARCHAR},
      item_number = #{record.itemNumber,jdbcType=VARCHAR},
      item_type = #{record.itemType,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_oid = #{record.fileOid,jdbcType=VARCHAR},
      sender_side = #{record.senderSide,jdbcType=VARCHAR},
      document_originator = #{record.documentOriginator,jdbcType=VARCHAR},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      change_type = #{record.changeType,jdbcType=VARCHAR},
      posting_time = #{record.postingTime,jdbcType=TIMESTAMP},
      works_section = #{record.worksSection,jdbcType=VARCHAR},
      works_head = #{record.worksHead,jdbcType=VARCHAR},
      quality_head = #{record.qualityHead,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      involved_area = #{record.involvedArea,jdbcType=VARCHAR},
      change_import_scheme = #{record.changeImportScheme,jdbcType=VARCHAR},
      change_import_time = #{record.changeImportTime,jdbcType=TIMESTAMP},
      change_import_mode = #{record.changeImportMode,jdbcType=VARCHAR},
      ipqc_handler = #{record.ipqcHandler,jdbcType=VARCHAR},
      ipqc_verification_results = #{record.ipqcVerificationResults,jdbcType=VARCHAR},
      ipqc_verification_reason = #{record.ipqcVerificationReason,jdbcType=VARCHAR},
      ipqc_verifier = #{record.ipqcVerifier,jdbcType=VARCHAR},
      ipqc_verification_time = #{record.ipqcVerificationTime,jdbcType=TIMESTAMP},
      project_approval_result = #{record.projectApprovalResult,jdbcType=VARCHAR},
      project_approval_opinion = #{record.projectApprovalOpinion,jdbcType=VARCHAR},
      project_approver = #{record.projectApprover,jdbcType=VARCHAR},
      project_approver_time = #{record.projectApproverTime,jdbcType=TIMESTAMP},
      odm_approval_result = #{record.odmApprovalResult,jdbcType=VARCHAR},
      odm_approval_opinion = #{record.odmApprovalOpinion,jdbcType=VARCHAR},
      odm_approver = #{record.odmApprover,jdbcType=VARCHAR},
      odm_approver_time = #{record.odmApproverTime,jdbcType=TIMESTAMP},
      sqe_approval_result = #{record.sqeApprovalResult,jdbcType=VARCHAR},
      sqe_approval_opinion = #{record.sqeApprovalOpinion,jdbcType=VARCHAR},
      sqe_approver = #{record.sqeApprover,jdbcType=VARCHAR},
      sqe_approver_time = #{record.sqeApproverTime,jdbcType=TIMESTAMP},
      file_address = #{record.fileAddress,jdbcType=VARCHAR},
      assignee = #{record.assignee,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfo">
    update ecn_info
    <set>
      <if test="itemNumber != null">
        item_number = #{itemNumber,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileOid != null">
        file_oid = #{fileOid,jdbcType=VARCHAR},
      </if>
      <if test="senderSide != null">
        sender_side = #{senderSide,jdbcType=VARCHAR},
      </if>
      <if test="documentOriginator != null">
        document_originator = #{documentOriginator,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="changeType != null">
        change_type = #{changeType,jdbcType=VARCHAR},
      </if>
      <if test="postingTime != null">
        posting_time = #{postingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="worksSection != null">
        works_section = #{worksSection,jdbcType=VARCHAR},
      </if>
      <if test="worksHead != null">
        works_head = #{worksHead,jdbcType=VARCHAR},
      </if>
      <if test="qualityHead != null">
        quality_head = #{qualityHead,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="involvedArea != null">
        involved_area = #{involvedArea,jdbcType=VARCHAR},
      </if>
      <if test="changeImportScheme != null">
        change_import_scheme = #{changeImportScheme,jdbcType=VARCHAR},
      </if>
      <if test="changeImportTime != null">
        change_import_time = #{changeImportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeImportMode != null">
        change_import_mode = #{changeImportMode,jdbcType=VARCHAR},
      </if>
      <if test="ipqcHandler != null">
        ipqc_handler = #{ipqcHandler,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerificationResults != null">
        ipqc_verification_results = #{ipqcVerificationResults,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerificationReason != null">
        ipqc_verification_reason = #{ipqcVerificationReason,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerifier != null">
        ipqc_verifier = #{ipqcVerifier,jdbcType=VARCHAR},
      </if>
      <if test="ipqcVerificationTime != null">
        ipqc_verification_time = #{ipqcVerificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectApprovalResult != null">
        project_approval_result = #{projectApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="projectApprovalOpinion != null">
        project_approval_opinion = #{projectApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="projectApprover != null">
        project_approver = #{projectApprover,jdbcType=VARCHAR},
      </if>
      <if test="projectApproverTime != null">
        project_approver_time = #{projectApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="odmApprovalResult != null">
        odm_approval_result = #{odmApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="odmApprovalOpinion != null">
        odm_approval_opinion = #{odmApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="odmApprover != null">
        odm_approver = #{odmApprover,jdbcType=VARCHAR},
      </if>
      <if test="odmApproverTime != null">
        odm_approver_time = #{odmApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sqeApprovalResult != null">
        sqe_approval_result = #{sqeApprovalResult,jdbcType=VARCHAR},
      </if>
      <if test="sqeApprovalOpinion != null">
        sqe_approval_opinion = #{sqeApprovalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="sqeApprover != null">
        sqe_approver = #{sqeApprover,jdbcType=VARCHAR},
      </if>
      <if test="sqeApproverTime != null">
        sqe_approver_time = #{sqeApproverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileAddress != null">
        file_address = #{fileAddress,jdbcType=VARCHAR},
      </if>
      <if test="assignee != null">
        assignee = #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.EcnInfo">
    update ecn_info
    set item_number = #{itemNumber,jdbcType=VARCHAR},
      item_type = #{itemType,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_oid = #{fileOid,jdbcType=VARCHAR},
      sender_side = #{senderSide,jdbcType=VARCHAR},
      document_originator = #{documentOriginator,jdbcType=VARCHAR},
      model_name = #{modelName,jdbcType=VARCHAR},
      change_type = #{changeType,jdbcType=VARCHAR},
      posting_time = #{postingTime,jdbcType=TIMESTAMP},
      works_section = #{worksSection,jdbcType=VARCHAR},
      works_head = #{worksHead,jdbcType=VARCHAR},
      quality_head = #{qualityHead,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      involved_area = #{involvedArea,jdbcType=VARCHAR},
      change_import_scheme = #{changeImportScheme,jdbcType=VARCHAR},
      change_import_time = #{changeImportTime,jdbcType=TIMESTAMP},
      change_import_mode = #{changeImportMode,jdbcType=VARCHAR},
      ipqc_handler = #{ipqcHandler,jdbcType=VARCHAR},
      ipqc_verification_results = #{ipqcVerificationResults,jdbcType=VARCHAR},
      ipqc_verification_reason = #{ipqcVerificationReason,jdbcType=VARCHAR},
      ipqc_verifier = #{ipqcVerifier,jdbcType=VARCHAR},
      ipqc_verification_time = #{ipqcVerificationTime,jdbcType=TIMESTAMP},
      project_approval_result = #{projectApprovalResult,jdbcType=VARCHAR},
      project_approval_opinion = #{projectApprovalOpinion,jdbcType=VARCHAR},
      project_approver = #{projectApprover,jdbcType=VARCHAR},
      project_approver_time = #{projectApproverTime,jdbcType=TIMESTAMP},
      odm_approval_result = #{odmApprovalResult,jdbcType=VARCHAR},
      odm_approval_opinion = #{odmApprovalOpinion,jdbcType=VARCHAR},
      odm_approver = #{odmApprover,jdbcType=VARCHAR},
      odm_approver_time = #{odmApproverTime,jdbcType=TIMESTAMP},
      sqe_approval_result = #{sqeApprovalResult,jdbcType=VARCHAR},
      sqe_approval_opinion = #{sqeApprovalOpinion,jdbcType=VARCHAR},
      sqe_approver = #{sqeApprover,jdbcType=VARCHAR},
      sqe_approver_time = #{sqeApproverTime,jdbcType=TIMESTAMP},
      file_address = #{fileAddress,jdbcType=VARCHAR},
      assignee = #{assignee,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--自写的查询语句-->
  <!--changType比较特别需要用模糊匹配-->
  <!--根据id 是随着时间 递增的特性， 判定max(id) 可以 避免 max(create_time)相同的情况-->
  <!--会签节点的数据权限，管理员需要分两种情况 1.查出管理员参与过的流程 2.查出管理员未参与过的流程 合并-->
  <select id ="getEcnInfo" parameterType="cn.jwis.qualityworkflow.modules.ecn.bean.QueryEcnInfoVo" resultMap="BaseResultMap">
    select e.*,ar.process_instance_id,ar.task_id,ar.task_state  FROM ecn_info e,
    ( SELECT
    t1.process_instance_id,t1.task_id,t1.task_state,t1.workflow_business_id
    FROM
    task_record t1
    INNER JOIN (
    <if test="admin==1">
    (
    </if>
    SELECT process_instance_id, max( task_id ) AS task_id, assignee FROM task_record
      WHERE template_key = 'QMSEcnProcess'
      <if test="flag != null and flag == 2">
          AND task_state = 'OnGoing'
      </if>
      AND assignee = #{assignee}
    GROUP BY process_instance_id
    <if test="admin==1">
    ) union
    (SELECT process_instance_id, max( task_id ) AS task_id, assignee FROM task_record
    WHERE template_key = 'QMSEcnProcess'
    <if test="flag != null and flag == 2">
      AND task_state = 'OnGoing'
    </if>
    AND process_instance_id not in (
      SELECT process_instance_id  FROM task_record
      WHERE template_key = 'QMSEcnProcess'
      <if test="flag != null and flag == 2">
        AND task_state = 'OnGoing'
      </if>
      AND assignee = #{assignee}
      GROUP BY process_instance_id
      )
    GROUP BY process_instance_id
    )
    </if>
    ) t2 ON t1.process_instance_id = t2.process_instance_id
    and t1.task_id = t2.task_id
    ) ar where e.id=ar.workflow_business_id
    <if test='fileName != null and fileName.size > 0'>
      AND file_name in
      <foreach collection='fileName' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='senderSide != null and senderSide.size > 0'>
      AND sender_side in
      <foreach collection='senderSide' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='documentOriginator != null and documentOriginator.size > 0'>
      AND document_originator in
      <foreach collection='documentOriginator' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='modelName != null and modelName.size > 0'>
      AND model_name in
      <foreach collection='modelName' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='worksSection != null and worksSection.size > 0'>
      AND works_section in
      <foreach collection='worksSection' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='worksHead != null and worksHead.size > 0'>
      AND works_head in
      <foreach collection='worksHead' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='qualityHead != null and qualityHead.size > 0'>
      AND quality_head in
      <foreach collection='qualityHead' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='status != null and status.size > 0'>
      AND status in
      <foreach collection='status' index='index' item='item' separator=',' open='(' close=')'>
        #{item}
      </foreach>
    </if>
    <if test='changeType != null and changeType.size > 0'>
      AND
      <foreach collection="changeType" index="index" item="item" open="(" separator=" OR " close=")">
        change_type LIKE CONCAT('%', #{item}, '%')
      </foreach>
    </if>
    <if test="flag != null and flag == 1">
      AND status &lt;&gt; 'Close'
    </if>
    <if test='startTime and startTime !=null != ""'>
      AND ${time}  &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
    </if>
    <if test='endTime !=null and  endTime != ""'>
      AND ${time} &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
    </if>
  </select>
  
  <select id="selectByPrimaryKeys"   resultMap="BaseResultMap">
      select
        *
      from ecn_info
      where 1 = 1
      <if test="ids != null and ids.size > 0">
        AND id in
        <foreach collection='ids' index='index' item='item' separator=',' open='(' close=')'>
          #{item}
        </foreach>
      </if>
  </select>
</mapper>