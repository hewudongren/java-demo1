<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jwis.qualityworkflow.dao.HistoryProcessRecordMapper">
  <resultMap id="BaseResultMap" type="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="workflow_type" jdbcType="VARCHAR" property="workflowType" />
    <result column="workflow_node" jdbcType="VARCHAR" property="workflowNode" />
    <result column="workflow_businessId" jdbcType="VARCHAR" property="workflowBusinessid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="handle_opinion" jdbcType="VARCHAR" property="handleOpinion" />
    <result column="reject_reason" jdbcType="VARCHAR" property="rejectReason" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, workflow_type, workflow_node, workflow_businessId, type, creator, create_date,
    update_date, department, handle_opinion, reject_reason
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from history_process_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from history_process_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from history_process_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from history_process_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecordExample">
    delete from history_process_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    insert into history_process_record (id, workflow_type, workflow_node, 
      workflow_businessId, type, creator, 
      create_date, update_date, department, 
      handle_opinion, reject_reason, content
      )
    values (#{id,jdbcType=VARCHAR}, #{workflowType,jdbcType=VARCHAR}, #{workflowNode,jdbcType=VARCHAR}, 
      #{workflowBusinessid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{department,jdbcType=VARCHAR}, 
      #{handleOpinion,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    insert into history_process_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workflowType != null">
        workflow_type,
      </if>
      <if test="workflowNode != null">
        workflow_node,
      </if>
      <if test="workflowBusinessid != null">
        workflow_businessId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="handleOpinion != null">
        handle_opinion,
      </if>
      <if test="rejectReason != null">
        reject_reason,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workflowType != null">
        #{workflowType,jdbcType=VARCHAR},
      </if>
      <if test="workflowNode != null">
        #{workflowNode,jdbcType=VARCHAR},
      </if>
      <if test="workflowBusinessid != null">
        #{workflowBusinessid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="handleOpinion != null">
        #{handleOpinion,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null">
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecordExample" resultType="java.lang.Integer">
    select count(*) from history_process_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update history_process_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowType != null">
        workflow_type = #{record.workflowType,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowNode != null">
        workflow_node = #{record.workflowNode,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowBusinessid != null">
        workflow_businessId = #{record.workflowBusinessid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.handleOpinion != null">
        handle_opinion = #{record.handleOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null">
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update history_process_record
    set id = #{record.id,jdbcType=VARCHAR},
    workflow_type = #{record.workflowType,jdbcType=VARCHAR},
    workflow_node = #{record.workflowNode,jdbcType=VARCHAR},
    workflow_businessId = #{record.workflowBusinessid,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=VARCHAR},
    creator = #{record.creator,jdbcType=VARCHAR},
    create_date = #{record.createDate,jdbcType=TIMESTAMP},
    update_date = #{record.updateDate,jdbcType=TIMESTAMP},
    department = #{record.department,jdbcType=VARCHAR},
    handle_opinion = #{record.handleOpinion,jdbcType=VARCHAR},
    reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
    content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update history_process_record
    set id = #{record.id,jdbcType=VARCHAR},
    workflow_type = #{record.workflowType,jdbcType=VARCHAR},
    workflow_node = #{record.workflowNode,jdbcType=VARCHAR},
    workflow_businessId = #{record.workflowBusinessid,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=VARCHAR},
    creator = #{record.creator,jdbcType=VARCHAR},
    create_date = #{record.createDate,jdbcType=TIMESTAMP},
    update_date = #{record.updateDate,jdbcType=TIMESTAMP},
    department = #{record.department,jdbcType=VARCHAR},
    handle_opinion = #{record.handleOpinion,jdbcType=VARCHAR},
    reject_reason = #{record.rejectReason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    update history_process_record
    <set>
      <if test="workflowType != null">
        workflow_type = #{workflowType,jdbcType=VARCHAR},
      </if>
      <if test="workflowNode != null">
        workflow_node = #{workflowNode,jdbcType=VARCHAR},
      </if>
      <if test="workflowBusinessid != null">
        workflow_businessId = #{workflowBusinessid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="handleOpinion != null">
        handle_opinion = #{handleOpinion,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null">
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    update history_process_record
    set workflow_type = #{workflowType,jdbcType=VARCHAR},
      workflow_node = #{workflowNode,jdbcType=VARCHAR},
      workflow_businessId = #{workflowBusinessid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR},
      handle_opinion = #{handleOpinion,jdbcType=VARCHAR},
      reject_reason = #{rejectReason,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    update history_process_record
    set workflow_type = #{workflowType,jdbcType=VARCHAR},
      workflow_node = #{workflowNode,jdbcType=VARCHAR},
      workflow_businessId = #{workflowBusinessid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR},
      handle_opinion = #{handleOpinion,jdbcType=VARCHAR},
      reject_reason = #{rejectReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="replaceInsert" parameterType="cn.jwis.qualityworkflow.bean.HistoryProcessRecord">
    replace into history_process_record (id, workflow_type, workflow_node,
      workflow_businessId, content, type,
      creator
      )
    values (#{id,jdbcType=VARCHAR}, #{workflowType,jdbcType=VARCHAR}, #{workflowNode,jdbcType=VARCHAR},
      #{workflowBusinessid,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{creator,jdbcType=VARCHAR}
      )
  </insert>
</mapper>